(self["webpackChunktrades_a"] = self["webpackChunktrades_a"] || []).push([["main"],{

/***/ 2098:
/*!****************************************!*\
  !*** ./src/app/algo/algo.component.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AlgoComponent": () => (/* binding */ AlgoComponent)
/* harmony export */ });
/* harmony import */ var _common_application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/application.constant */ 8001);
/* harmony import */ var _common_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/models */ 8077);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../app.service */ 900);
/* harmony import */ var _common_zerodha_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/zerodha.service */ 1102);
/* harmony import */ var _common_map_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/map.service */ 397);
/* harmony import */ var _common_websocket_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/websocket.service */ 4440);
/* harmony import */ var _algo_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./algo.service */ 6272);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 587);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 6362);
// import { prependOnceListener } from 'process';










function AlgoComponent_tr_98_button_12_Template(rf, ctx) { if (rf & 1) {
    const _r14 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function AlgoComponent_tr_98_button_12_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r14); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"](); return ctx_r12.executeOrder(pos_r2, "currentstrike"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1, "B");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} }
function AlgoComponent_tr_98_button_13_Template(rf, ctx) { if (rf & 1) {
    const _r17 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function AlgoComponent_tr_98_button_13_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r17); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"](); return ctx_r15.executeOrder(pos_r2, "currentstrike"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1, "S");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} }
function AlgoComponent_tr_98_button_19_Template(rf, ctx) { if (rf & 1) {
    const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "button", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function AlgoComponent_tr_98_button_19_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r20); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; const ctx_r18 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"](); return ctx_r18.executeOrder(pos_r2, "newstrike"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1, "B");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} }
function AlgoComponent_tr_98_button_20_Template(rf, ctx) { if (rf & 1) {
    const _r23 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "button", 70);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function AlgoComponent_tr_98_button_20_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r23); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"](); return ctx_r21.executeOrder(pos_r2, "newstrike"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1, "S");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} }
function AlgoComponent_tr_98_div_31_Template(rf, ctx) { if (rf & 1) {
    const _r26 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](2, "input", 71);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_31_Template_input_ngModelChange_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r26); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.rolled = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](3, "label", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](4, "No");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](5, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](6, "input", 73);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_31_Template_input_ngModelChange_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r26); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.rolled = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](7, "label", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](8, "In");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](9, "div", 6);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](10, "input", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_31_Template_input_ngModelChange_10_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r26); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.rolled = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](11, "label", 72);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](12, "Out");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpropertyInterpolate1"]("name", "rolled-no-", pos_r2.strike, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpropertyInterpolate1"]("id", "rolled-no-", pos_r2.strike, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.rolled);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpropertyInterpolate1"]("for", "rolled-no-", pos_r2.strike, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpropertyInterpolate1"]("name", "rolled-in-", pos_r2.strike, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpropertyInterpolate1"]("id", "rolled-in-", pos_r2.strike, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.rolled);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpropertyInterpolate1"]("for", "rolled-in-", pos_r2.strike, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpropertyInterpolate1"]("name", "rolled-out-", pos_r2.strike, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpropertyInterpolate1"]("id", "rolled-out-", pos_r2.strike, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.rolled);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpropertyInterpolate1"]("for", "rolled-out-", pos_r2.strike, "");
} }
function AlgoComponent_tr_98_div_33_Template(rf, ctx) { if (rf & 1) {
    const _r34 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](3, "div", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](4, "input", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_33_Template_input_ngModelChange_4_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r34); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.override_sl = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](5, "label", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](6, "Override");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](7, "input", 78);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_33_Template_input_ngModelChange_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r34); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.override_sl1 = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](8, "input", 79);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_33_Template_input_ngModelChange_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r34); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.override_sl2 = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate2"]("SL: ", pos_r2.sl1, " , ", pos_r2.sl2, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.override_sl);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.override_sl1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.override_sl2);
} }
function AlgoComponent_tr_98_div_35_Template(rf, ctx) { if (rf & 1) {
    const _r42 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](3, "div", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](4, "input", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_35_Template_input_ngModelChange_4_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r42); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.override_roll_out = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](5, "label", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](6, "Override");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](7, "input", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_35_Template_input_ngModelChange_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r42); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.override_roll_out_premium = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](8, "input", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_35_Template_input_ngModelChange_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r42); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.override_roll_out_strike = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate2"]("Roll Out: ", pos_r2.roll_out_strike, " (", pos_r2.roll_out_premium, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.override_roll_out);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.override_roll_out_premium);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.override_roll_out_strike);
} }
function AlgoComponent_tr_98_div_37_Template(rf, ctx) { if (rf & 1) {
    const _r50 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](3, "div", 75);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](4, "input", 76);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_37_Template_input_ngModelChange_4_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r50); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.override_roll_in = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](5, "label", 77);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](6, "Override");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](7, "input", 80);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_37_Template_input_ngModelChange_7_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r50); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.override_roll_in_premium = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](8, "input", 81);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_div_37_Template_input_ngModelChange_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r50); const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit; return pos_r2.override_roll_in_strike = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate2"]("Roll In: ", pos_r2.roll_in_strike, " (", pos_r2.roll_in_premium, ")");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.override_roll_in);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.override_roll_in_premium);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.override_roll_in_strike);
} }
const _c0 = function (a0, a1) { return { "positionExited": a0, "hidePositionRow": a1 }; };
const _c1 = function (a0, a1) { return { "red": a0, "blue": a1 }; };
function AlgoComponent_tr_98_Template(rf, ctx) { if (rf & 1) {
    const _r57 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "tr", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "td", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](2, "input", 54);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_Template_input_ngModelChange_2_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r57); const pos_r2 = restoredCtx.$implicit; return pos_r2.qty = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](3, "td", 55);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](5, "td", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](6, "input", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_Template_input_ngModelChange_6_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r57); const pos_r2 = restoredCtx.$implicit; return pos_r2.entry = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](7, "td", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](8, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](9, "input", 59);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_Template_input_ngModelChange_9_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r57); const pos_r2 = restoredCtx.$implicit; return pos_r2.strike = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](10, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](11);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](12, AlgoComponent_tr_98_button_12_Template, 2, 0, "button", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](13, AlgoComponent_tr_98_button_13_Template, 2, 0, "button", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](14, "td", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](15, "div", 58);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](16, "input", 63);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_Template_input_ngModelChange_16_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r57); const pos_r2 = restoredCtx.$implicit; return pos_r2.roll_strike = $event; })("keyup", function AlgoComponent_tr_98_Template_input_keyup_16_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r57); const pos_r2 = restoredCtx.$implicit; const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"](); return ctx_r61.rollStrikeKeyUp($event, pos_r2); });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](17, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](18);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](19, AlgoComponent_tr_98_button_19_Template, 2, 0, "button", 61);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](20, AlgoComponent_tr_98_button_20_Template, 2, 0, "button", 62);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](21, "td", 64);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](22, "button", 65);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function AlgoComponent_tr_98_Template_button_click_22_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r57); const pos_r2 = restoredCtx.$implicit; const ctx_r62 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"](); return ctx_r62.rollPosition(pos_r2); });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](23, "Roll");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](24, "td", 12);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](25, "input", 66);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_Template_input_ngModelChange_25_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r57); const pos_r2 = restoredCtx.$implicit; return pos_r2.exit = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](26, "td", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](27, "input", 67);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_tr_98_Template_input_ngModelChange_27_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵrestoreView"](_r57); const pos_r2 = restoredCtx.$implicit; return pos_r2.alertPrice = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](28, "span", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](29);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](30, "td", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](31, AlgoComponent_tr_98_div_31_Template, 13, 12, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](32, "td", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](33, AlgoComponent_tr_98_div_33_Template, 9, 5, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](34, "td", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](35, AlgoComponent_tr_98_div_35_Template, 9, 5, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](36, "td", 36);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](37, AlgoComponent_tr_98_div_37_Template, 9, 5, "div", 53);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r2 = ctx.$implicit;
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpureFunction2"](21, _c0, pos_r2.exit !== 0, ctx_r0.hide_closed && pos_r2.exit !== 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("step", ctx_r0.stepValue)("ngModel", pos_r2.qty)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpureFunction2"](24, _c1, pos_r2.qty < 0, pos_r2.qty > 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"](" ", ctx_r0.getPnL(pos_r2), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.entry);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.strike);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate"](ctx_r0.getLTP(pos_r2.expiry, pos_r2.strike));
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", pos_r2.qty < 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", pos_r2.qty > 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.roll_strike);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate"](ctx_r0.getLTP(pos_r2.expiry, pos_r2.rollstrike_new));
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", pos_r2.qty > 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", pos_r2.qty < 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.exit);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", pos_r2.alertPrice);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate"](pos_r2.alertStatus);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", pos_r2.exit === 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", pos_r2.exit === 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", pos_r2.exit === 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", pos_r2.exit === 0);
} }
function AlgoComponent_div_112_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"](" ", ctx_r1.log, " ");
} }
const _c2 = function (a0, a1) { return { "text-danger": a0, "text-success": a1 }; };
class AlgoComponent {
    constructor(appService, zerodhaService, mapService, websocketService, algoService) {
        this.appService = appService;
        this.zerodhaService = zerodhaService;
        this.mapService = mapService;
        this.websocketService = websocketService;
        this.algoService = algoService;
        this.enable_algo = false;
        this.tag = 't:intraday2:228655'; // 't:intraday1:228653';
        this.includeGUIDs = '';
        this.hide_closed = false;
        this.algo_positions = [];
        this.stepValue = 15;
        this.strikeStepValue = 100;
        this.strategyPnl = 0;
        this.margin = 0;
        this.show_log = false;
        this.log = 'Log is empty';
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.miscEvent$.subscribe(res => {
            console.log('algo miscEvent: ', res);
            if (res === 'ordersReceived') {
                this.refreshPositions();
            }
        });
    }
    ngOnInit() {
        //this.algo_positions.push(this.dummyPosition());
        //this.algo_positions.push(this.dummyPosition());
    }
    dummyPosition() {
        let a = new _common_models__WEBPACK_IMPORTED_MODULE_1__.AlgoPosition();
        a.qty = -700;
        a.entry = 25;
        a.strike = '44000CE';
        a.roll_strike = '44000CE';
        a.exit = 0;
        a.alert_price;
        a.rolled = 'no';
        a.sl1 = 35;
        a.sl2 = 37;
        a.override_sl = true;
        a.override_sl1 = 36;
        a.override_sl2 = 38;
        a.roll_out_premium = 10;
        a.roll_out_strike = '44400CE';
        a.override_roll_out = true;
        a.override_roll_out_premium = 12;
        a.override_roll_out_strike = '44500CE';
        a.roll_in_premium = 33;
        a.roll_in_strike = '43900CE';
        a.override_roll_in = false;
        a.override_roll_in_premium = 32;
        a.override_roll_in_strike = '43800CE';
        return a;
    }
    ngAfterViewInit() {
        setTimeout(() => {
        });
    }
    refreshPositions() {
        console.log('refreshing algo positions');
        let prev_algo_positions = this.algo_positions;
        this.algo_positions = [];
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.orders.forEach((o) => {
            if (((o.tags && o.tags.includes(this.tag)) || this.includeGUIDs.includes(o.guid)) && o.status === 'COMPLETE') {
                let a = new _common_models__WEBPACK_IMPORTED_MODULE_1__.AlgoPosition();
                a.instru = o.instru;
                a.qty = o.qty;
                a.entry = o.tradedPrice;
                a.strike = o.scrip;
                a.roll_strike = o.scrip;
                a.exit = 0;
                a.alert_price;
                a.rolled = 'no';
                a.sl1 = Number(o.tradedPrice) + _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SL1;
                a.sl2 = Number(o.tradedPrice) + _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SL2;
                a.override_sl = false;
                a.override_sl1 = Number(o.tradedPrice) + _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SL1;
                a.override_sl2 = Number(o.tradedPrice) + _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SL2;
                a.roll_out_premium = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.rollout_premium;
                a.roll_out_strike = '';
                a.override_roll_out = false;
                a.override_roll_out_premium = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.rollout_premium;
                a.override_roll_out_strike = '';
                a.roll_in_premium = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.rollin_threshold; // TODO: should be other side + rollin_threshold
                a.roll_in_strike = '';
                a.override_roll_in = false;
                a.override_roll_in_premium = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.rollin_threshold; // TODO: should be other side + rollin_threshold
                a.override_roll_in_strike = '';
                this.algo_positions.push(a);
            }
        });
        // console.log('algo positions', this.algo_positions);
        this.mergePositions();
        this.sortPositions();
        //console.log('algo positions', this.algo_positions);
        //console.log('prev', prev_algo_positions);
        this.copyProperties(prev_algo_positions);
    }
    mergePositions() {
        let exitedMap = new Map(); // will contain all exited positions - values will be array since can be multiple exited positions of same strike
        let mergeMap = new Map(); // will contain all open positions - values will be single elements
        for (let i = 0; i < this.algo_positions.length; i++) {
            let element = this.algo_positions[i];
            let key = element.strike;
            let exitedMap_value = exitedMap.get(key);
            let mergeMap_value = mergeMap.get(key);
            if (element.exit !== 0) { // if element is exited
                if (!exitedMap_value) {
                    exitedMap_value = [];
                }
                exitedMap_value.push(element);
                exitedMap.set(key, exitedMap_value);
            }
            else { // element not exited
                if (!mergeMap_value) { // element not in mergeMap
                    mergeMap.set(key, element);
                }
                else { // element exists in mergeMap
                    if (mergeMap_value.qty == -element.qty) { // if complete exit
                        mergeMap_value.exit = element.entry;
                        if (!exitedMap_value) {
                            exitedMap_value = [];
                        }
                        exitedMap_value.push(mergeMap_value);
                        exitedMap.set(key, exitedMap_value);
                        mergeMap.delete(key);
                    }
                    else if ((mergeMap_value.qty > 0 && element.qty > 0) || (mergeMap_value.qty < 0 && element.qty < 0)) { // if adding to existing position (i.e. both are buy or both are sell)
                        mergeMap_value.entry = ((mergeMap_value.entry * mergeMap_value.qty) + (element.entry * element.qty)) / (mergeMap_value.qty + element.qty);
                        mergeMap_value.entry = (Math.round((mergeMap_value.entry + 0.00001) * 10000) / 10000); // round to four decimals
                        mergeMap_value.qty += element.qty;
                        mergeMap.set(key, mergeMap_value);
                    }
                    else { // if opposite positions of different quantities
                        if (Math.abs(mergeMap_value.qty) > Math.abs(element.qty)) { // if existing qty in mergemap is greater than element qty
                            /*
                            merge 600     40  0
                            elem  -150    35  0
              
                            exit  150     40  35
                            merge 450     40  0
              
                            new mergemap qty = old mergemap qty + element qty
              
                            exitedmap qty = -element qty
                            exitedmap entry = mergemap entry
                            exitedmap exit = element entry
                            */
                            mergeMap_value.qty = mergeMap_value.qty + element.qty;
                            mergeMap.set(key, mergeMap_value);
                            element.qty = -element.qty;
                            element.exit = element.entry;
                            element.entry = mergeMap_value.entry;
                            if (!exitedMap_value) {
                                exitedMap_value = [];
                            }
                            exitedMap_value.push(element);
                            exitedMap.set(key, exitedMap_value);
                        }
                        else { // if existing qty in mergemap is lesser than element qty
                            /*
                            merge 50     40   0
                            elem  -150   35   0
              
                            exit  50    40  35
                            merge -100   35  0
              
                            new mergemap qty = old mergemap qty + element qty
                            new mergeMap entry = element.entry
              
                            exitedmap qty = mergemap qty
                            exitedmap entry = mergemap entry
                            exitedmap exit = element entry
                            */
                            let exitedQty = mergeMap_value.qty;
                            let exitedEntry = mergeMap_value.entry;
                            mergeMap_value.qty = mergeMap_value.qty + element.qty;
                            mergeMap_value.entry = element.entry;
                            mergeMap.set(key, mergeMap_value);
                            element.qty = exitedQty;
                            element.exit = element.entry;
                            element.entry = exitedEntry;
                            if (!exitedMap_value) {
                                exitedMap_value = [];
                            }
                            exitedMap_value.push(element);
                            exitedMap.set(key, exitedMap_value);
                        }
                    }
                }
            }
        }
        console.log('exitedMap:', exitedMap);
        console.log('mergeMap:', mergeMap);
        this.algo_positions = [];
        for (let [key, v] of exitedMap) {
            v.forEach(value => {
                let copy = Object.assign({}, value);
                this.algo_positions.push(copy);
                // this.algo_positions.push({ qty: value.qty, scrip: value.scrip, expiry: value.expiry, entry: value.entry, exit: value.exit, addToOrders: value.addToOrders, selected: value.selected, selectedActual: value.selectedActual, rollstrike: value.rollstrike, rollstrike_new: value.rollstrike_new, alertPrice: null, alertStatus: '' });
            });
        }
        for (let [key, value] of mergeMap) {
            let copy = Object.assign({}, value);
            this.algo_positions.push(copy);
            //this.algo_positions.push({ qty: value.qty, scrip: value.scrip, expiry: value.expiry, entry: value.entry, exit: value.exit, addToOrders: value.addToOrders, selected: value.selected, selectedActual: value.selectedActual, rollstrike: value.rollstrike, rollstrike_new: value.rollstrike_new, alertPrice: null, alertStatus: '' });
        }
    }
    sortPositions() {
        this.algo_positions.sort((a, b) => {
            // -1 means a should come before b
            // 1 means a should come after b
            /*
            exit and exit
            exit and no exit
            no exit and exit
            same strike no exit and no exit
            no exit and no exit
            */
            // console.log(a.exit, b.exit);
            if (a.exit !== 0 && b.exit !== 0) {
                //return b.scrip.localeCompare(a.scrip);
                return this.compareForSorting(a.strike, b.strike);
            }
            if (a.exit !== 0 && b.exit === 0) {
                return -1;
            }
            if (a.exit === 0 && b.exit !== 0) {
                return 1;
            }
            let a_symbol = a.strike.slice(0, -2);
            let b_symbol = b.strike.slice(0, -2);
            if (a_symbol === b_symbol && a.strike.includes('CE') && b.strike.includes('PE')) { // same strike CE PE, CE should occur first
                return -1;
            }
            if (a_symbol === b_symbol && a.strike.includes('PE') && b.strike.includes('CE')) { // same strike CE PE, CE should occur first
                return 1;
            }
            //return b.strike.localeCompare(a.strike); // negative if a is before b
            return this.compareForSorting(a.strike, b.strike);
        });
    }
    compareForSorting(ascrip, bscrip) {
        // All CE strikes to be before PE
        if (ascrip.includes('CE') && bscrip.includes('PE')) { // CE should occur first
            return -1;
        }
        if (ascrip.includes('PE') && bscrip.includes('CE')) { // CE should occur first
            return 1;
        }
        // same type of options
        let a_symbol = ascrip.slice(0, -2);
        let b_symbol = bscrip.slice(0, -2);
        if (a_symbol > b_symbol) {
            return -1;
        }
        return 1;
    }
    copyProperties(prev_algo_positions) {
        this.algo_positions.forEach(a => {
            if (a.exit === 0) {
                let found = this.findInPrevious(prev_algo_positions, a.strike);
                console.log('found', found);
                if (found) {
                    a.roll_strike = found.scrip;
                    a.alert_price = found.alert_price;
                    a.rolled = found.rolled;
                    a.sl1 = found.sl1;
                    a.sl2 = found.sl2;
                    a.override_sl = found.override_sl;
                    a.override_sl1 = found.override_sl1;
                    a.override_sl2 = found.override_sl2;
                    a.roll_out_premium = found.roll_out_premium;
                    a.roll_out_strike = found.roll_out_strike;
                    a.override_roll_out = found.override_roll_out;
                    a.override_roll_out_premium = found.override_roll_out_premium;
                    a.override_roll_out_strike = found.override_roll_out_strike;
                    a.roll_in_premium = found.roll_in_premium;
                    a.roll_in_strike = found.roll_in_strike;
                    a.override_roll_in = found.override_roll_in;
                    a.override_roll_in_premium = found.override_roll_in_premium;
                    a.override_roll_in_strike = found.override_roll_in_strike;
                }
            }
        });
    }
    findInPrevious(prev_algo_positions, strikeToFind) {
        let found = null;
        prev_algo_positions.forEach(a => {
            console.log('findInPrevious', a);
            if (a.exit === 0 && a.strike === strikeToFind) {
                console.log('found prev', a);
                found = a;
                return;
            }
        });
        return found;
    }
    onInstruChange(event) {
    }
    initNow() {
    }
    export() {
    }
    reset() {
    }
    getPnL(pos) {
    }
    getLTP(expiry, scrip, instru = null) {
    }
    executeOrder(pos, type) {
    }
    rollStrikeKeyUp(event, pos) {
        console.log(event);
        if (event.key === 'ArrowUp') {
            this.changeRollStrike(this.strikeStepValue, pos);
        }
        else if (event.key === 'ArrowDown') {
            this.changeRollStrike(-this.strikeStepValue, pos);
        }
    }
    changeRollStrike(step, pos) {
        let symbol = pos.roll_strike;
        let type = '';
        if (symbol.includes('CE')) {
            type = 'CE';
        }
        if (symbol.includes('PE')) {
            type = 'PE';
        }
        symbol = Number(symbol.slice(0, -2)); // remove CE PE at end
        let new_strike = (symbol + step) + type;
        pos.roll_strike = new_strike;
    }
    rollPosition(pos) {
    }
    getStrategyPnL() {
    }
    getStrategyPnLAfterCharges() {
    }
}
AlgoComponent.ɵfac = function AlgoComponent_Factory(t) { return new (t || AlgoComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_app_service__WEBPACK_IMPORTED_MODULE_2__.AppService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_common_zerodha_service__WEBPACK_IMPORTED_MODULE_3__.ZerodhaService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_common_map_service__WEBPACK_IMPORTED_MODULE_4__.MapService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_common_websocket_service__WEBPACK_IMPORTED_MODULE_5__.WebsocketService), _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdirectiveInject"](_algo_service__WEBPACK_IMPORTED_MODULE_6__.AlgoService)); };
AlgoComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineComponent"]({ type: AlgoComponent, selectors: [["app-algo"]], decls: 113, vars: 22, consts: [["id", "accordionAlgo", 1, "accordion", "mb-2"], [1, "accordion-item"], ["id", "headingAlgo", 1, "accordion-header"], ["type", "button", "data-bs-toggle", "collapse", "data-bs-target", "#algoSection", "aria-expanded", "true", "aria-controls", "algoSection", 1, "accordion-button", "fw-bold"], ["id", "algoSection", "aria-labelledby", "headingAlgo", "data-bs-parent", "#accordionAlgo", 1, "accordion-collapse", "collapse", "show", "p-2"], [1, "mb-4", 2, "display", "flex", "justify-content", "space-between", "align-items", "flex-end"], [1, "form-check", "form-check-inline"], ["type", "checkbox", "value", "", "id", "enable_algo", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "enable_algo", 1, "form-check-label"], ["type", "button", 1, "btn", "btn-outline-primary", "btn-sm", "btn-height-override-32", 3, "click"], ["type", "checkbox", "value", "", "id", "split_qty", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "split_qty", 1, "form-check-label"], [1, "width80"], ["for", "pnl_alert", 1, "form-label"], ["type", "number", "id", "pnl_alert", "placeholder", "< PnL Alert", 1, "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], [1, "form-select", "form-select-sm", "width120", 3, "ngModel", "ngModelChange", "change"], ["value", "NIFTY"], ["value", "BANKNIFTY"], ["value", "FINNIFTY"], ["value", "MIDCPNIFTY"], ["value", "SENSEX"], ["value", "USDINR"], ["for", "expiry", 1, "form-label"], ["type", "text", "id", "expiry", "placeholder", "Expiry", 1, "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["for", "timeToEnter", 1, "form-label"], ["type", "text", "id", "timeToEnter", "placeholder", "Time to Enter", 1, "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], [1, "width100"], ["for", "premiumSearch", 1, "form-label"], ["type", "number", "id", "premiumSearch", "placeholder", "Premium search", 1, "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["for", "qty", 1, "form-label"], ["type", "number", "id", "qty", "placeholder", "Qty", 1, "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["for", "tag", 1, "form-label"], ["type", "text", "id", "tag", "placeholder", "Tag", 1, "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], [1, "width110"], ["for", "distanceToSearch", 1, "form-label"], ["type", "number", "id", "distanceToSearch", "placeholder", "Distance to search", 1, "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], [1, ""], ["for", "includeGUIDs", 1, "form-label"], ["type", "text", "id", "includeGUIDs", "placeholder", "GUIDs", 1, "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["type", "checkbox", "value", "", "id", "hide_closed", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "hide_closed", 1, "form-check-label"], [1, "table", "table-sm", "table-bordered", "shadow", "text-center"], [1, "table-light"], ["scope", "col"], [3, "ngClass", 4, "ngFor", "ngForOf"], [1, "mt-2", "fw-bold"], [2, "display", "inline-block"], [3, "ngClass"], [2, "font-weight", "normal"], [1, "ms-4", "fw-normal", 2, "display", "inline-block"], [1, "form-check", "form-check-inline", "mt-4"], ["type", "checkbox", "value", "", "id", "show_log", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "show_log", 1, "form-check-label"], [4, "ngIf"], ["type", "number", "placeholder", "Qty", 1, "form-control", "form-control-sm", 3, "step", "ngModel", "ngClass", "ngModelChange"], [1, "fw-bold", "width48", 2, "padding-top", "8px"], ["type", "number", "placeholder", "Entry", 1, "form-control", "form-control-sm", 2, "max-width", "80px !important", 3, "ngModel", "ngModelChange"], [1, "nostretch"], [2, "display", "flex", "align-items", "center"], ["placeholder", "Scrip 11500CE", 1, "form-control", "form-control-sm", "me-2", "width80", 3, "ngModel", "ngModelChange"], [2, "display", "inline-block", "width", "60px"], ["type", "button", "class", "btn btn-link", 3, "click", 4, "ngIf"], ["type", "button", "class", "btn btn-link red", 3, "click", 4, "ngIf"], ["placeholder", "Scrip 11500CE", 1, "form-control", "form-control-sm", "me-2", "width80", 3, "ngModel", "ngModelChange", "keyup"], [2, "text-align", "left"], ["type", "button", 1, "btn", "btn-light", "btn-sm", 3, "click"], ["type", "number", "placeholder", "Exit", 1, "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["type", "number", "placeholder", "> Alert", 1, "form-control", "form-control-sm", "d-inline-block", "width80", 3, "ngModel", "ngModelChange"], [1, "text-danger", "ms-2"], ["type", "button", 1, "btn", "btn-link", 3, "click"], ["type", "button", 1, "btn", "btn-link", "red", 3, "click"], ["type", "radio", "value", "No", 1, "form-check-input", 3, "name", "id", "ngModel", "ngModelChange"], [1, "form-check-label", 3, "for"], ["type", "radio", "value", "In", 1, "form-check-input", 3, "name", "id", "ngModel", "ngModelChange"], ["type", "radio", "value", "Out", 1, "form-check-input", 3, "name", "id", "ngModel", "ngModelChange"], [1, "form-check", "form-check-inline", "ms-2", "me-1"], ["type", "checkbox", "value", "", "id", "override", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "override", 1, "form-check-label"], ["type", "number", "placeholder", "SL1", 1, "form-control", "form-control-sm", "d-inline-block", "width80", 3, "ngModel", "ngModelChange"], ["type", "number", "placeholder", "SL2", 1, "form-control", "form-control-sm", "d-inline-block", "width80", "ms-2", 3, "ngModel", "ngModelChange"], ["type", "number", "placeholder", "Premium", 1, "form-control", "form-control-sm", "d-inline-block", "width80", 3, "ngModel", "ngModelChange"], ["type", "text", "placeholder", "Strike", 1, "form-control", "form-control-sm", "d-inline-block", "width80", "ms-2", 3, "ngModel", "ngModelChange"]], template: function AlgoComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](2, "h2", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](3, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](4, " Intraday Strangle ");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](5, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](6, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](7, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](8, "input", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_8_listener($event) { return ctx.enable_algo = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](9, "label", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](10, "Enable Algo");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](11, "button", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function AlgoComponent_Template_button_click_11_listener() { return ctx.initNow(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](12, "Init Now");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](13, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](14, "input", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_14_listener($event) { return ctx.split_qty = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](15, "label", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](16, "Split Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](17, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](18, "label", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](19, "PnL Alert");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](20, "input", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_20_listener($event) { return ctx.pnl_alert = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](21, "select", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_select_ngModelChange_21_listener($event) { return ctx.instru = $event; })("change", function AlgoComponent_Template_select_change_21_listener($event) { return ctx.onInstruChange($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](22, "option", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](23, "NIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](24, "option", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](25, "BANKNIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](26, "option", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](27, "FINNIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](28, "option", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](29, "MIDCPNIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](30, "option", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](31, "SENSEX");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](32, "option", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](33, "USDINR");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](34, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](35, "label", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](36, "Expiry");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](37, "input", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_37_listener($event) { return ctx.expiry = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](38, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](39, "label", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](40, "Time to Enter");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](41, "input", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_41_listener($event) { return ctx.timeToEnter = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](42, "div", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](43, "label", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](44, "Premium search");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](45, "input", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_45_listener($event) { return ctx.premiumSearch = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](46, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](47, "label", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](48, "Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](49, "input", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_49_listener($event) { return ctx.qty = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](50, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](51, "label", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](52, "Tag");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](53, "input", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_53_listener($event) { return ctx.tag = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](54, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](55, "label", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](56, "Distance to search");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](57, "input", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_57_listener($event) { return ctx.distanceToSearch = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](58, "div", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](59, "label", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](60, "Include extra orders (comma separated GUIDs)");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](61, "input", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_61_listener($event) { return ctx.includeGUIDs = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](62, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](63, "input", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_63_listener($event) { return ctx.hide_closed = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](64, "label", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](65, "Hide Closed");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](66, "button", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function AlgoComponent_Template_button_click_66_listener() { return ctx.export(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](67, "Export");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](68, "button", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("click", function AlgoComponent_Template_button_click_68_listener() { return ctx.reset(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](69, "Reset");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](70, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](71, "table", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](72, "thead", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](73, "tr");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](74, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](75, "Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](76, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](77, "PnL");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](78, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](79, "Entry");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](80, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](81, "Strike");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](82, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](83, "Roll");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelement"](84, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](85, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](86, "Exit");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](87, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](88, "Alert");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](89, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](90, "Rolled");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](91, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](92, "SL");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](93, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](94, "Roll Out");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](95, "th", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](96, "Roll In");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](97, "tbody");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](98, AlgoComponent_tr_98_Template, 38, 27, "tr", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](99, "div", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](100, " Total PnL: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](101, "div", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](102, "span", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](103);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](104, "span", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](105);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](106, "div", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](107);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](108, "div", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](109, "input", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵlistener"]("ngModelChange", function AlgoComponent_Template_input_ngModelChange_109_listener($event) { return ctx.show_log = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementStart"](110, "label", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtext"](111, "Show Log");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtemplate"](112, AlgoComponent_div_112_Template, 2, 1, "div", 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.enable_algo);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.split_qty);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.pnl_alert);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.instru);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](16);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.expiry);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.timeToEnter);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.premiumSearch);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.qty);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.tag);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.distanceToSearch);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.includeGUIDs);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.hide_closed);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](35);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngForOf", ctx.algo_positions);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵpureFunction2"](19, _c2, ctx.strategyPnl < 0, ctx.strategyPnl > 0));
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"](" ", ctx.getStrategyPnL(), " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"](" (", ctx.getStrategyPnLAfterCharges(), ") ");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵtextInterpolate1"]("Margin: ", ctx.margin, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngModel", ctx.show_log);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵproperty"]("ngIf", ctx.show_log);
    } }, directives: [_angular_forms__WEBPACK_IMPORTED_MODULE_8__.CheckboxControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NgModel, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NumberValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.SelectControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.NgSelectOption, _angular_forms__WEBPACK_IMPORTED_MODULE_8__["ɵNgSelectMultipleOption"], _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgForOf, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgClass, _angular_common__WEBPACK_IMPORTED_MODULE_9__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_8__.RadioControlValueAccessor], styles: ["[_nghost-%COMP%], input[_ngcontent-%COMP%], .input-group-text[_ngcontent-%COMP%], select[_ngcontent-%COMP%], button[_ngcontent-%COMP%] {\n  font-size: 12px !important;\n}\n\n.btn-height-override-32[_ngcontent-%COMP%] {\n  height: 32px;\n}\n\n.use-hypo-future-class[_ngcontent-%COMP%] {\n  margin-bottom: 15px;\n}\n\n.chart-flex-container[_ngcontent-%COMP%] {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n}\n\n.posCheckbox[_ngcontent-%COMP%] {\n  margin: 8px auto !important;\n  padding-left: 8px;\n}\n\n.simulateDate[_ngcontent-%COMP%] {\n  width: 20%;\n  display: inline-block;\n}\n\n.simulateTimeAdv[_ngcontent-%COMP%], .simulateTimeMins[_ngcontent-%COMP%] {\n  width: 10%;\n  display: inline-block;\n}\n\n.cursor-pointer[_ngcontent-%COMP%] {\n  cursor: pointer;\n}\n\n.ocInputs[_ngcontent-%COMP%] {\n  display: inline-block;\n  width: 70px;\n}\n\n.ocStrategyStrikeQty[_ngcontent-%COMP%] {\n  font-size: 0.6rem;\n  color: black;\n}\n\n.oc-strike[_ngcontent-%COMP%] {\n  background-color: #e9ecef;\n  width: 60px;\n}\n\n.oc-strike-spot[_ngcontent-%COMP%] {\n  width: 60px;\n  margin: 0 auto;\n}\n\n.oc-col-actions[_ngcontent-%COMP%] {\n  width: 19rem;\n}\n\n.oc-col[_ngcontent-%COMP%] {\n  width: 5rem;\n}\n\n.ocStrikeStrategyCE[_ngcontent-%COMP%] {\n  background-color: #ccffc9 !important;\n}\n\n.ocStrikeStrategyPE[_ngcontent-%COMP%] {\n  background-color: #ffdede !important;\n}\n\n.width32[_ngcontent-%COMP%] {\n  width: 32px !important;\n}\n\n.width48[_ngcontent-%COMP%] {\n  width: 48px !important;\n}\n\n.width80[_ngcontent-%COMP%] {\n  width: 80px !important;\n}\n\n.width100[_ngcontent-%COMP%] {\n  width: 100px !important;\n}\n\n.width110[_ngcontent-%COMP%] {\n  width: 110px !important;\n}\n\n.width120[_ngcontent-%COMP%] {\n  width: 120px !important;\n}\n\n.nostretch[_ngcontent-%COMP%] {\n  white-space: nowrap;\n  width: 1%;\n}\n\n.charts-heading[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: center;\n  font-size: 24px;\n  font-weight: bold;\n  margin: 4px;\n}\n\n.opt_chart[_ngcontent-%COMP%] {\n  position: relative;\n}\n\n.opt_chart-0[_ngcontent-%COMP%] {\n  margin-bottom: 4px;\n  position: relative;\n}\n\n.chart-border-green[_ngcontent-%COMP%] {\n  border: 2px solid green;\n}\n\n.chart-border-red[_ngcontent-%COMP%] {\n  border: 2px solid red;\n}\n\n.opt_chart_wrapper_parent[_ngcontent-%COMP%] {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.opt_chart_wrapper[_ngcontent-%COMP%] {\n  display: flex;\n  margin-right: 12px;\n  margin-bottom: 12px;\n}\n\n.opt_chart_wrapper-0[_ngcontent-%COMP%] {\n  display: flex;\n  margin-right: 4px;\n  margin-bottom: 4px;\n  flex-direction: column;\n}\n\n.charts-inputs[_ngcontent-%COMP%] {\n  width: 10%;\n  display: inline-block;\n}\n\n.chart-legend[_ngcontent-%COMP%] {\n  position: absolute;\n  left: 4px;\n  top: 2px;\n  z-index: 2;\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 300;\n  color: black;\n}\n\n.chart-legend-qty[_ngcontent-%COMP%] {\n  position: absolute;\n  left: 92px;\n  top: 2px;\n  z-index: 2;\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 300;\n  color: black;\n}\n\n.chart-legend-0[_ngcontent-%COMP%] {\n  position: absolute;\n  left: 4px;\n  top: 2px;\n  z-index: 2;\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: 300;\n  color: black;\n}\n\n.chart-legend-values[_ngcontent-%COMP%] {\n  position: absolute;\n  left: 4px;\n  top: 18px;\n  z-index: 2;\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: 300;\n  color: black;\n}\n\n.strategy_alert_field[_ngcontent-%COMP%] {\n  width: 100px;\n  display: inline-block;\n}\n\n.alert_field[_ngcontent-%COMP%] {\n  width: 10%;\n  display: inline-block;\n}\n\n.chart-positions[_ngcontent-%COMP%] {\n  \n  \n  min-width: 400px;\n  display: flex;\n  padding-right: 8px;\n}\n\n.chart-finchart[_ngcontent-%COMP%] {\n  min-width: 700px;\n}\n\n#payOffExpiry[_ngcontent-%COMP%] {\n  width: 20%;\n}\n\n.positionExited[_ngcontent-%COMP%] {\n  background-color: rgba(148, 159, 177, 0.2);\n  \n}\n\n.hidePositionRow[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.strategy_instru[_ngcontent-%COMP%] {\n  width: 20%;\n  display: inline-block;\n}\n\n#payOffExpiry[_ngcontent-%COMP%] {\n  display: inline-block;\n}\n\n.positions-roll-sugg[_ngcontent-%COMP%] {\n  text-align: left !important;\n}\n\n.green[_ngcontent-%COMP%] {\n  color: green;\n}\n\n.red[_ngcontent-%COMP%] {\n  color: #ff6347;\n}\n\n.blue[_ngcontent-%COMP%] {\n  color: blue;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFsZ28uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQ0E7RUFDSSwwQkFBQTtBQUFKOztBQUdBO0VBQ0ksWUFBQTtBQUFKOztBQUdBO0VBQ0ksbUJBQUE7QUFBSjs7QUFHQTtFQUNJLGFBQUE7RUFDQSxlQUFBO0VBQ0Esc0JBQUE7QUFBSjs7QUFHQTtFQUNJLDJCQUFBO0VBQ0EsaUJBQUE7QUFBSjs7QUFHQTtFQUNJLFVBQUE7RUFDQSxxQkFBQTtBQUFKOztBQUdBO0VBQ0ksVUFBQTtFQUNBLHFCQUFBO0FBQUo7O0FBR0E7RUFDSSxlQUFBO0FBQUo7O0FBR0E7RUFDSSxxQkFBQTtFQUNBLFdBQUE7QUFBSjs7QUFHQTtFQUNJLGlCQUFBO0VBQ0EsWUFBQTtBQUFKOztBQUdBO0VBQ0kseUJBQUE7RUFDQSxXQUFBO0FBQUo7O0FBR0E7RUFDSSxXQUFBO0VBQ0EsY0FBQTtBQUFKOztBQUdBO0VBQ0ksWUFBQTtBQUFKOztBQUdBO0VBQ0ksV0FBQTtBQUFKOztBQUdBO0VBQ0ksb0NBQUE7QUFBSjs7QUFHQTtFQUNJLG9DQUFBO0FBQUo7O0FBR0E7RUFDSSxzQkFBQTtBQUFKOztBQUdBO0VBQ0ksc0JBQUE7QUFBSjs7QUFHQTtFQUNJLHNCQUFBO0FBQUo7O0FBR0E7RUFDSSx1QkFBQTtBQUFKOztBQUdBO0VBQ0ksdUJBQUE7QUFBSjs7QUFHQTtFQUNJLHVCQUFBO0FBQUo7O0FBR0E7RUFDSSxtQkFBQTtFQUNBLFNBQUE7QUFBSjs7QUFHQTtFQUNJLGFBQUE7RUFDQSx1QkFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLFdBQUE7QUFBSjs7QUFHQTtFQUNJLGtCQUFBO0FBQUo7O0FBR0E7RUFDSSxrQkFBQTtFQUNBLGtCQUFBO0FBQUo7O0FBR0E7RUFDSSx1QkFBQTtBQUFKOztBQUdBO0VBQ0kscUJBQUE7QUFBSjs7QUFHQTtFQUNJLGFBQUE7RUFDQSxlQUFBO0FBQUo7O0FBR0E7RUFDSSxhQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQkFBQTtBQUFKOztBQUdBO0VBQ0ksYUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxzQkFBQTtBQUFKOztBQUdBO0VBQ0ksVUFBQTtFQUNBLHFCQUFBO0FBQUo7O0FBR0E7RUFDQyxrQkFBQTtFQUNBLFNBQUE7RUFDQSxRQUFBO0VBQ0EsVUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0csWUFBQTtBQUFKOztBQUdBO0VBQ0ksa0JBQUE7RUFDSCxVQUFBO0VBQ0EsUUFBQTtFQUNBLFVBQUE7RUFDQSxlQUFBO0VBQ0EsaUJBQUE7RUFDQSxnQkFBQTtFQUNHLFlBQUE7QUFBSjs7QUFHQTtFQUNDLGtCQUFBO0VBQ0EsU0FBQTtFQUNBLFFBQUE7RUFDQSxVQUFBO0VBQ0EsZUFBQTtFQUNBLGlCQUFBO0VBQ0EsZ0JBQUE7RUFDRyxZQUFBO0FBQUo7O0FBR0E7RUFDQyxrQkFBQTtFQUNBLFNBQUE7RUFDQSxTQUFBO0VBQ0EsVUFBQTtFQUNBLGVBQUE7RUFDQSxpQkFBQTtFQUNBLGdCQUFBO0VBQ0csWUFBQTtBQUFKOztBQUdBO0VBQ0ksWUFBQTtFQUNBLHFCQUFBO0FBQUo7O0FBR0E7RUFDSSxVQUFBO0VBQ0EscUJBQUE7QUFBSjs7QUFHQTtFQUNJLGFBQUE7RUFDQSx3QkFBQTtFQUNBLGdCQUFBO0VBRUEsYUFBQTtFQUNBLGtCQUFBO0FBREo7O0FBSUE7RUFDSSxnQkFBQTtBQURKOztBQUlBO0VBQ0ksVUFBQTtBQURKOztBQUlBO0VBQ0ksMENBQUE7RUFBeUMsYUFBQTtBQUE3Qzs7QUFHQTtFQUNJLGFBQUE7QUFBSjs7QUFHQTtFQUNJLFVBQUE7RUFDQSxxQkFBQTtBQUFKOztBQUdBO0VBQ0kscUJBQUE7QUFBSjs7QUFHQTtFQUNJLDJCQUFBO0FBQUo7O0FBR0E7RUFDSSxZQUFBO0FBQUo7O0FBR0E7RUFDSSxjQUFBO0FBQUo7O0FBR0E7RUFDSSxXQUFBO0FBQUoiLCJmaWxlIjoiYWxnby5jb21wb25lbnQuc2NzcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG46aG9zdCwgaW5wdXQsIC5pbnB1dC1ncm91cC10ZXh0LCBzZWxlY3QsIGJ1dHRvbiB7XHJcbiAgICBmb250LXNpemU6IDEycHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLmJ0bi1oZWlnaHQtb3ZlcnJpZGUtMzIge1xyXG4gICAgaGVpZ2h0OiAzMnB4O1xyXG59XHJcblxyXG4udXNlLWh5cG8tZnV0dXJlLWNsYXNzIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XHJcbn1cclxuXHJcbi5jaGFydC1mbGV4LWNvbnRhaW5lciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgZmxleC13cmFwOiB3cmFwO1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuLnBvc0NoZWNrYm94IHtcclxuICAgIG1hcmdpbjogOHB4IGF1dG8gIWltcG9ydGFudDtcclxuICAgIHBhZGRpbmctbGVmdDogOHB4O1xyXG59XHJcblxyXG4uc2ltdWxhdGVEYXRlIHtcclxuICAgIHdpZHRoOiAyMCU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi5zaW11bGF0ZVRpbWVBZHYsIC5zaW11bGF0ZVRpbWVNaW5zIHtcclxuICAgIHdpZHRoOiAxMCU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi5jdXJzb3ItcG9pbnRlciB7XHJcbiAgICBjdXJzb3I6IHBvaW50ZXI7XHJcbn1cclxuXHJcbi5vY0lucHV0cyB7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgICB3aWR0aDogNzBweDtcclxufVxyXG5cclxuLm9jU3RyYXRlZ3lTdHJpa2VRdHkge1xyXG4gICAgZm9udC1zaXplOiAwLjZyZW07XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5vYy1zdHJpa2Uge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U5ZWNlZjtcclxuICAgIHdpZHRoOiA2MHB4O1xyXG59XHJcblxyXG4ub2Mtc3RyaWtlLXNwb3Qge1xyXG4gICAgd2lkdGg6IDYwcHg7XHJcbiAgICBtYXJnaW46IDAgYXV0bztcclxufVxyXG5cclxuLm9jLWNvbC1hY3Rpb25zIHtcclxuICAgIHdpZHRoOiAxOXJlbTtcclxufVxyXG5cclxuLm9jLWNvbCB7XHJcbiAgICB3aWR0aDogNXJlbTtcclxufVxyXG5cclxuLm9jU3RyaWtlU3RyYXRlZ3lDRSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjY2NmZmM5ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi5vY1N0cmlrZVN0cmF0ZWd5UEUge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZGVkZSAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ud2lkdGgzMiB7XHJcbiAgICB3aWR0aDogMzJweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ud2lkdGg0OCB7XHJcbiAgICB3aWR0aDogNDhweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ud2lkdGg4MCB7XHJcbiAgICB3aWR0aDogODBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ud2lkdGgxMDAge1xyXG4gICAgd2lkdGg6IDEwMHB4ICFpbXBvcnRhbnQ7XHJcbn1cclxuXHJcbi53aWR0aDExMCB7XHJcbiAgICB3aWR0aDogMTEwcHggIWltcG9ydGFudDtcclxufVxyXG5cclxuLndpZHRoMTIwIHtcclxuICAgIHdpZHRoOiAxMjBweCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4ubm9zdHJldGNoIHtcclxuICAgIHdoaXRlLXNwYWNlOiBub3dyYXA7XHJcbiAgICB3aWR0aDogMSU7XHJcbn1cclxuXHJcbi5jaGFydHMtaGVhZGluZyB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBmb250LXNpemU6IDI0cHg7XHJcbiAgICBmb250LXdlaWdodDogYm9sZDtcclxuICAgIG1hcmdpbjogNHB4O1xyXG59XHJcblxyXG4ub3B0X2NoYXJ0IHtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLm9wdF9jaGFydC0wIHtcclxuICAgIG1hcmdpbi1ib3R0b206IDRweDtcclxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcclxufVxyXG5cclxuLmNoYXJ0LWJvcmRlci1ncmVlbiB7XHJcbiAgICBib3JkZXI6IDJweCBzb2xpZCBncmVlbjtcclxufVxyXG5cclxuLmNoYXJ0LWJvcmRlci1yZWQge1xyXG4gICAgYm9yZGVyOiAycHggc29saWQgcmVkO1xyXG59XHJcblxyXG4ub3B0X2NoYXJ0X3dyYXBwZXJfcGFyZW50IHtcclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBmbGV4LXdyYXA6IHdyYXA7XHJcbn1cclxuXHJcbi5vcHRfY2hhcnRfd3JhcHBlciB7XHJcbiAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAxMnB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTJweDtcclxufVxyXG5cclxuLm9wdF9jaGFydF93cmFwcGVyLTAge1xyXG4gICAgZGlzcGxheTogZmxleDtcclxuICAgIG1hcmdpbi1yaWdodDogNHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNHB4O1xyXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxufVxyXG5cclxuLmNoYXJ0cy1pbnB1dHMge1xyXG4gICAgd2lkdGg6IDEwJTtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuLmNoYXJ0LWxlZ2VuZCB7XHJcblx0cG9zaXRpb246IGFic29sdXRlO1xyXG5cdGxlZnQ6IDRweDtcclxuXHR0b3A6IDJweDtcclxuXHR6LWluZGV4OiAyO1xyXG5cdGZvbnQtc2l6ZTogMThweDtcclxuXHRsaW5lLWhlaWdodDogMjhweDtcclxuXHRmb250LXdlaWdodDogMzAwO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4uY2hhcnQtbGVnZW5kLXF0eSB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcblx0bGVmdDogOTJweDtcclxuXHR0b3A6IDJweDtcclxuXHR6LWluZGV4OiAyO1xyXG5cdGZvbnQtc2l6ZTogMThweDtcclxuXHRsaW5lLWhlaWdodDogMjhweDtcclxuXHRmb250LXdlaWdodDogMzAwO1xyXG4gICAgY29sb3I6IGJsYWNrO1xyXG59XHJcblxyXG4uY2hhcnQtbGVnZW5kLTAge1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRsZWZ0OiA0cHg7XHJcblx0dG9wOiAycHg7XHJcblx0ei1pbmRleDogMjtcclxuXHRmb250LXNpemU6IDE0cHg7XHJcblx0bGluZS1oZWlnaHQ6IDE2cHg7XHJcblx0Zm9udC13ZWlnaHQ6IDMwMDtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG5cclxuLmNoYXJ0LWxlZ2VuZC12YWx1ZXMge1xyXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcclxuXHRsZWZ0OiA0cHg7XHJcblx0dG9wOiAxOHB4O1xyXG5cdHotaW5kZXg6IDI7XHJcblx0Zm9udC1zaXplOiAxNHB4O1xyXG5cdGxpbmUtaGVpZ2h0OiAxNnB4O1xyXG5cdGZvbnQtd2VpZ2h0OiAzMDA7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5zdHJhdGVneV9hbGVydF9maWVsZCB7XHJcbiAgICB3aWR0aDogMTAwcHg7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn1cclxuXHJcbi5hbGVydF9maWVsZCB7XHJcbiAgICB3aWR0aDogMTAlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4uY2hhcnQtcG9zaXRpb25zIHtcclxuICAgIC8qIGZsZXg6IDI7ICovXHJcbiAgICAvKiBtYXJnaW4tcmlnaHQ6IDIwcHg7ICovXHJcbiAgICBtaW4td2lkdGg6IDQwMHB4O1xyXG5cclxuICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiA4cHg7XHJcbn1cclxuXHJcbi5jaGFydC1maW5jaGFydCB7XHJcbiAgICBtaW4td2lkdGg6IDcwMHB4O1xyXG59XHJcblxyXG4jcGF5T2ZmRXhwaXJ5IHtcclxuICAgIHdpZHRoOiAyMCU7XHJcbn1cclxuXHJcbi5wb3NpdGlvbkV4aXRlZCB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDE0OCwxNTksMTc3LDAuMik7IC8qICNmOGY5ZmE7ICovXHJcbn1cclxuXHJcbi5oaWRlUG9zaXRpb25Sb3cge1xyXG4gICAgZGlzcGxheTogbm9uZTtcclxufVxyXG5cclxuLnN0cmF0ZWd5X2luc3RydSB7XHJcbiAgICB3aWR0aDogMjAlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcblxyXG4jcGF5T2ZmRXhwaXJ5IHtcclxuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxufVxyXG5cclxuLnBvc2l0aW9ucy1yb2xsLXN1Z2cge1xyXG4gICAgdGV4dC1hbGlnbjogbGVmdCAhaW1wb3J0YW50O1xyXG59XHJcblxyXG4uZ3JlZW4ge1xyXG4gICAgY29sb3I6IGdyZWVuO1xyXG59XHJcblxyXG4ucmVkIHtcclxuICAgIGNvbG9yOiAjZmY2MzQ3O1xyXG59XHJcblxyXG4uYmx1ZSB7XHJcbiAgICBjb2xvcjogYmx1ZTtcclxufSJdfQ== */"] });


/***/ }),

/***/ 3263:
/*!*************************************!*\
  !*** ./src/app/algo/algo.module.ts ***!
  \*************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AlgoModule": () => (/* binding */ AlgoModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common */ 6362);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/forms */ 587);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/platform-browser */ 318);
/* harmony import */ var highcharts_angular__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! highcharts-angular */ 3094);
/* harmony import */ var ng2_charts__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ng2-charts */ 3808);
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../app-routing.module */ 158);
/* harmony import */ var _algo_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./algo.component */ 2098);
/* harmony import */ var _algo_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./algo.service */ 6272);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);










class AlgoModule {
}
AlgoModule.ɵfac = function AlgoModule_Factory(t) { return new (t || AlgoModule)(); };
AlgoModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineNgModule"]({ type: AlgoModule });
AlgoModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjector"]({ providers: [_algo_service__WEBPACK_IMPORTED_MODULE_2__.AlgoService], imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule,
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__.BrowserModule,
            _app_routing_module__WEBPACK_IMPORTED_MODULE_0__.AppRoutingModule,
            _angular_common_http__WEBPACK_IMPORTED_MODULE_6__.HttpClientModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormsModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_7__.ReactiveFormsModule,
            ng2_charts__WEBPACK_IMPORTED_MODULE_8__.ChartsModule,
            highcharts_angular__WEBPACK_IMPORTED_MODULE_9__.HighchartsChartModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵsetNgModuleScope"](AlgoModule, { declarations: [_algo_component__WEBPACK_IMPORTED_MODULE_1__.AlgoComponent], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_4__.CommonModule,
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_5__.BrowserModule,
        _app_routing_module__WEBPACK_IMPORTED_MODULE_0__.AppRoutingModule,
        _angular_common_http__WEBPACK_IMPORTED_MODULE_6__.HttpClientModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_7__.FormsModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_7__.ReactiveFormsModule,
        ng2_charts__WEBPACK_IMPORTED_MODULE_8__.ChartsModule,
        highcharts_angular__WEBPACK_IMPORTED_MODULE_9__.HighchartsChartModule], exports: [_algo_component__WEBPACK_IMPORTED_MODULE_1__.AlgoComponent] }); })();


/***/ }),

/***/ 6272:
/*!**************************************!*\
  !*** ./src/app/algo/algo.service.ts ***!
  \**************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AlgoService": () => (/* binding */ AlgoService)
/* harmony export */ });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _common_application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/application.constant */ 8001);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _common_map_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/map.service */ 397);
/* harmony import */ var _common_zerodha_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/zerodha.service */ 1102);
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../app.service */ 900);







class AlgoService {
    constructor(http, mapService, zerodhaService, appService) {
        this.http = http;
        this.mapService = mapService;
        this.zerodhaService = zerodhaService;
        this.appService = appService;
        this.initSchedule = null;
        this.chartFetchSchedule = null;
    }
    initScheduler() {
        this.initSchedule = setInterval(() => {
            console.log('initScheduler', new Date().getSeconds());
            let curr_date = new Date();
            if (curr_date.getHours() == 10 && curr_date.getMinutes() == 10 && curr_date.getSeconds() == 0) {
                clearInterval(this.initSchedule);
                let istrangle_instru = 'BANKNIFTY';
                let distance_to_search = 500;
                let strike_diff = 50;
                if (istrangle_instru === 'BANKNIFTY') {
                    strike_diff = 100;
                    distance_to_search = 2000;
                }
                else if (istrangle_instru === 'FINNIFTY') {
                    strike_diff = 50;
                }
                else if (istrangle_instru === 'MIDCPNIFTY') {
                    strike_diff = 25;
                }
                else if (istrangle_instru === 'SENSEX') {
                    strike_diff = 100;
                }
                else if (istrangle_instru === 'BANKEX') {
                    strike_diff = 100;
                }
                else if (istrangle_instru === 'USDINR') {
                    strike_diff = 0.25;
                }
                let atm = this.mapService.getScripLTP(null, null, 'BANKNIFTY', null);
                atm = (Math.round(atm / strike_diff) * strike_diff);
                let ce_strike = this.findPremiumStrike('BANKNIFTY', '2023-06-01', atm, 'CE', strike_diff, 25, distance_to_search);
                let pe_strike = this.findPremiumStrike('BANKNIFTY', '2023-06-01', atm, 'PE', strike_diff, 25, distance_to_search);
                // execute 
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isIStrangleInit = true;
                setTimeout(() => {
                    this.scheduler();
                }, 2000);
            }
        }, 1000); // every second
    }
    initNow() {
        if (!_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isIStrangleInit) {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isIStrangleInit = true;
            clearInterval(this.initSchedule);
            setTimeout(() => {
                this.scheduler();
            }, 2000);
        }
    }
    scheduler() {
        this.chartFetchSchedule = setInterval(() => {
            if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isIStrangleEnabled && _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isIStrangleInit) {
                console.log('scheduler', new Date().getSeconds());
                let curr_date = new Date();
                if (curr_date.getSeconds() == 0) {
                    let obj = this.mapService.getSubscriptionObject('44900CE', 'BANKNIFTY', '2023-06-01');
                    let element = this.zerodhaService.findStrikeInMasters(obj);
                    console.log('scheduler element', element);
                    if (element && element.token) {
                        this.getZerodhaChartData(element.token, '44900CE');
                    }
                }
            }
        }, 1000); // every second
    }
    getZerodhaChartData(token, strike) {
        let yday = this.appService.getLastWorkingDay(new Date());
        let from_date = '' + yday.getFullYear() + '-' + ('0' + (yday.getMonth() + 1)).slice(-2) + '-' + ('0' + yday.getDate()).slice(-2);
        let today = new Date();
        let to_date = '' + today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);
        const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
            'authorization': _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth,
        });
        let httpOptions = {
            responseType: 'json',
            headers: headers
        };
        let url = 'https://kite.zerodha.com/oms/instruments/historical/' + token + '/minute?user_id=' + _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.zerodhaUserId + '&oi=1&from=' + from_date + '&to=' + to_date;
        this.http.get(url, httpOptions).subscribe((res) => {
            if (res.data.candles) {
                let arr = res.data.candles;
                let data = [];
                let obj = [];
                for (let j = 0; j < arr.length; j++) {
                    let element = arr[j];
                    let d = element[0].replace('+0530', 'Z'); // changing 2018-06-25T09:15:00+0530 to 2018-06-25T09:15:00Z
                    obj.push([d, element[1], element[2], element[3], element[4], element[5], element[6]]);
                    let data_entry = { time: new Date(Date.parse(d)), open: element[1], high: element[2], low: element[3], close: element[4] };
                    data.push(data_entry);
                }
                // console.log('getZerodhaChartData candles:', Object.keys(data).length);
                console.log('getZerodhaChartData current data', strike, data[data.length - 1]);
            }
        }, error => {
            console.log('getZerodhaChartData fetch chart error', error);
        });
    }
    findPremiumStrike(instru, expiry, atm_strike, type, strike_diff, premium_to_find, distance_to_search) {
        let selected_strike;
        let selected_premium;
        let min_diff = 99999999;
        if (type === 'CE') {
            for (let strike = atm_strike; strike <= atm_strike + distance_to_search; strike += strike_diff) {
                let ltp = this.mapService.getScripLTP(instru, new Date(expiry), strike, 'CE');
                let diff = Math.abs(ltp - premium_to_find);
                if (diff < min_diff) {
                    min_diff = diff;
                    selected_strike = strike;
                    selected_premium = ltp;
                }
            }
        }
        else if (type === 'PE') {
            for (let strike = atm_strike; strike >= atm_strike - distance_to_search; strike -= strike_diff) {
                let ltp = this.mapService.getScripLTP(instru, new Date(expiry), strike, 'PE');
                let diff = Math.abs(ltp - premium_to_find);
                if (diff < min_diff) {
                    min_diff = diff;
                    selected_strike = strike;
                    selected_premium = ltp;
                }
            }
        }
        console.log('findPremiumStrike', selected_strike, type, selected_premium);
        return selected_strike;
    }
}
AlgoService.ɵfac = function AlgoService_Factory(t) { return new (t || AlgoService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_common_zerodha_service__WEBPACK_IMPORTED_MODULE_2__.ZerodhaService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_app_service__WEBPACK_IMPORTED_MODULE_3__.AppService)); };
AlgoService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: AlgoService, factory: AlgoService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 158:
/*!***************************************!*\
  !*** ./src/app/app-routing.module.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppRoutingModule": () => (/* binding */ AppRoutingModule)
/* harmony export */ });
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/router */ 2816);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @angular/core */ 3184);



const routes = [];
class AppRoutingModule {
}
AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) { return new (t || AppRoutingModule)(); };
AppRoutingModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineNgModule"]({ type: AppRoutingModule });
AppRoutingModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵdefineInjector"]({ imports: [[_angular_router__WEBPACK_IMPORTED_MODULE_1__.RouterModule.forRoot(routes, { relativeLinkResolution: 'legacy' })], _angular_router__WEBPACK_IMPORTED_MODULE_1__.RouterModule] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_0__["ɵɵsetNgModuleScope"](AppRoutingModule, { imports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__.RouterModule], exports: [_angular_router__WEBPACK_IMPORTED_MODULE_1__.RouterModule] }); })();


/***/ }),

/***/ 5041:
/*!**********************************!*\
  !*** ./src/app/app.component.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppComponent": () => (/* binding */ AppComponent)
/* harmony export */ });
/* harmony import */ var _common_application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/application.constant */ 8001);
/* harmony import */ var _common_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/models */ 8077);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_router__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/router */ 2816);
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ 900);
/* harmony import */ var _common_map_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/map.service */ 397);
/* harmony import */ var _common_websocket_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/websocket.service */ 4440);
/* harmony import */ var _chart_chart_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./chart/chart.service */ 2118);
/* harmony import */ var _common_angel_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common/angel.service */ 1580);
/* harmony import */ var _common_angelwebsocket_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common/angelwebsocket.service */ 4991);
/* harmony import */ var _common_holdings_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./common/holdings.service */ 3609);
/* harmony import */ var _common_zerodha_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./common/zerodha.service */ 1102);
/* harmony import */ var _common_zerodha_websocket_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./common/zerodha-websocket.service */ 38);
/* harmony import */ var _algo_algo_service__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./algo/algo.service */ 6272);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/common */ 6362);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! @angular/forms */ 587);
/* harmony import */ var _chart_chart_component__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./chart/chart.component */ 8748);


















function AppComponent_p_2_Template(rf, ctx) { if (rf & 1) {
    const _r18 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "p");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "ngb-alert", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("closed", function AppComponent_p_2_Template_ngb_alert_closed_1_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r18); const alert_r16 = restoredCtx.$implicit; const ctx_r17 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r17.close(alert_r16); });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const alert_r16 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("type", alert_r16.type);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](alert_r16.message);
} }
function AppComponent_span_32_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1, "https://api.kite.trade/instruments");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} }
function AppComponent_span_33_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1, "https://v2api.aliceblueonline.com/restpy/contract_master?exch=NFO");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} }
function AppComponent_button_39_Template(rf, ctx) { if (rf & 1) {
    const _r20 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_button_39_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r20); const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r19.login(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1, "Login");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} }
function AppComponent_span_41_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1, "Websocket is connected");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} }
function AppComponent_span_42_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1, "Websocket is not connected");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} }
function AppComponent_button_43_Template(rf, ctx) { if (rf & 1) {
    const _r22 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "button", 5);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_button_43_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r22); const ctx_r21 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r21.closeWebsocket(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1, "Close & reopen");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} }
const _c0 = function (a0) { return { "hidePositionRow": a0 }; };
const _c1 = function (a0, a1) { return { "red": a0, "blue": a1 }; };
function AppComponent_tbody_118_tr_1_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "tr", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](5, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](7, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](9, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](10);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r24 = ctx.$implicit;
    const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](7, _c0, ctx_r23.hide_exited_positions && pos_r24.netQty === 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](pos_r24.instru);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](pos_r24.scrip);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction2"](9, _c1, pos_r24.netQty < 0, pos_r24.netQty > 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](pos_r24.netQty);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](pos_r24.buyAvg);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](pos_r24.sellAvg);
} }
function AppComponent_tbody_118_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "tbody");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](1, AppComponent_tbody_118_tr_1_Template, 11, 12, "tr", 119);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngForOf", ctx_r9.positions);
} }
function AppComponent_tbody_167_tr_1_span_16_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ord_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"]("(", ord_r27.triggerPrice, ")");
} }
const _c2 = function (a0) { return { "green": a0 }; };
function AppComponent_tbody_167_tr_1_Template(rf, ctx) { if (rf & 1) {
    const _r32 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](2, "div", 121);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "input", 122);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_tbody_167_tr_1_Template_input_ngModelChange_3_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r32); const ord_r27 = restoredCtx.$implicit; return ord_r27.addToOrders = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](4, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](6, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](8, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](10, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](11);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](12, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](13);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](14, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](15);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](16, AppComponent_tbody_167_tr_1_span_16_Template, 2, 1, "span", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](17, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](18);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](19, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](20);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](21, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](22);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](23, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](24);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ord_r27 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ord_r27.addToOrders);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ord_r27.time);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ord_r27.expiry);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ord_r27.instru);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ord_r27.scrip);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction2"](14, _c1, ord_r27.qty < 0, ord_r27.qty > 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ord_r27.qty);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"]("", ord_r27.tradedPrice, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", ord_r27.triggerPrice != 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](17, _c2, ord_r27.status == "COMPLETE"));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ord_r27.status);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ord_r27.tags);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ord_r27.guid);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ord_r27.message);
} }
function AppComponent_tbody_167_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "tbody");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](1, AppComponent_tbody_167_tr_1_Template, 25, 19, "tr", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r10 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngForOf", ctx_r10.orders.slice(0, ctx_r10.orders_rows));
} }
function AppComponent_div_168_span_5_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "span", 129);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const sug_r35 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate4"](" ", sug_r35.strikeCE, "CE ", sug_r35.ltpCE, " , ", sug_r35.strikePE, "PE ", sug_r35.ltpPE, " ");
} }
function AppComponent_div_168_span_6_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "span", 129);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const sug_r37 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate3"](" ", sug_r37.action, ": ", sug_r37.strike, " ", sug_r37.ltp, " ");
} }
const _c3 = function (a0, a1) { return { "text-danger": a0, "text-success": a1 }; };
function AppComponent_div_168_Template(rf, ctx) { if (rf & 1) {
    const _r40 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "div", 123);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "span", 124);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](2, " Strategy PnL: ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "span", 125);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](5, AppComponent_div_168_span_5_Template, 2, 4, "span", 126);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](6, AppComponent_div_168_span_6_Template, 2, 3, "span", 126);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](7, "span", 127);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](9, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](10, " Combined SL: ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](11, "input", 128);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_div_168_Template_input_ngModelChange_11_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r40); const ctx_r39 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r39.combined_SL = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction2"](7, _c3, ctx_r11.getStrategyPnL() < 0, ctx_r11.getStrategyPnL() > 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate2"](" ", ctx_r11.getStrategyPnL(), " , ", ctx_r11.strategyPointsProfit, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngForOf", ctx_r11.suggestions);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngForOf", ctx_r11.adjust_sugg);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"]("Current Premium: ", ctx_r11.combined_premium, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx_r11.combined_SL);
} }
function AppComponent_th_252_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "th", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1, "Greeks");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} }
function AppComponent_th_259_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "th", 86);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1, "Greeks");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} }
const _c4 = function (a0) { return { "ocStrikeStrategyCE": a0 }; };
function AppComponent_tr_265_td_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "span", 142);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "span", 142);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](5, "span", 142);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](7, "span", 142);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const oc_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](5, _c4, oc_r41.inCurrStrategyCE));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" D: ", oc_r41.deltaCE, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" G: ", oc_r41.gammaCE, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" V: ", oc_r41.vegaCE, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" T: ", oc_r41.thetaCE, " ");
} }
function AppComponent_tr_265_div_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "div", 143);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const oc_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate2"](" ", oc_r41.qtyCE, " (", oc_r41.costCE, ") ");
} }
function AppComponent_tr_265_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "div", 144);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r45 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" ", ctx_r45.getSpotValue(), " ");
} }
function AppComponent_tr_265_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "div", 145);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1, " N ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} }
function AppComponent_tr_265_div_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "div", 143);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const oc_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate2"](" ", oc_r41.qtyPE, " (", oc_r41.costPE, ") ");
} }
const _c5 = function (a0) { return { "ocStrikeStrategyPE": a0 }; };
function AppComponent_tr_265_td_25_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "span", 142);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "span", 142);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](5, "span", 142);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](7, "span", 142);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const oc_r41 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](5, _c5, oc_r41.inCurrStrategyPE));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" D: ", oc_r41.deltaPE, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" G: ", oc_r41.gammaPE, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" V: ", oc_r41.vegaPE, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" T: ", oc_r41.thetaPE, " ");
} }
const _c6 = function (a0, a1) { return { "table-warning": a0, "oc-strike": a1 }; };
function AppComponent_tr_265_Template(rf, ctx) { if (rf & 1) {
    const _r54 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](2, "div", 130);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "div", 131);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](4, "input", 132);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_tr_265_Template_input_ngModelChange_4_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r54); const oc_r41 = restoredCtx.$implicit; return oc_r41.addCEToOrders = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](5, "input", 133);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_tr_265_Template_input_ngModelChange_5_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r54); const oc_r41 = restoredCtx.$implicit; return oc_r41.qtyInputCE = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](6, "button", 134);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_tr_265_Template_button_click_6_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r54); const oc_r41 = restoredCtx.$implicit; const ctx_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r56.addToStrategyBuilder(oc_r41, "CE"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](7, "SB");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](8, "button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_tr_265_Template_button_click_8_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r54); const oc_r41 = restoredCtx.$implicit; const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r57.addToChart(oc_r41, "CE"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](9, "C");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](10, "td", 135);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](11);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](12, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](13);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](14, AppComponent_tr_265_td_14_Template, 9, 7, "td", 136);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](15, "td", 137);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](16);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](17, AppComponent_tr_265_div_17_Template, 2, 2, "div", 138);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](18, "td", 139);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](19);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](20, AppComponent_tr_265_div_20_Template, 2, 1, "div", 140);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](21, AppComponent_tr_265_div_21_Template, 2, 0, "div", 141);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](22, "td", 137);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](23);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](24, AppComponent_tr_265_div_24_Template, 2, 2, "div", 138);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](25, AppComponent_tr_265_td_25_Template, 9, 7, "td", 136);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](26, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](27);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](28, "td", 135);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](29);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](30, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](31, "div", 130);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](32, "div", 131);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](33, "input", 132);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_tr_265_Template_input_ngModelChange_33_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r54); const oc_r41 = restoredCtx.$implicit; return oc_r41.addPEToOrders = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](34, "input", 133);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_tr_265_Template_input_ngModelChange_34_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r54); const oc_r41 = restoredCtx.$implicit; return oc_r41.qtyInputPE = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](35, "button", 134);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_tr_265_Template_button_click_35_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r54); const oc_r41 = restoredCtx.$implicit; const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r60.addToStrategyBuilder(oc_r41, "PE"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](36, "SB");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](37, "button", 74);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_tr_265_Template_button_click_37_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r54); const oc_r41 = restoredCtx.$implicit; const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"](); return ctx_r61.addToChart(oc_r41, "PE"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](38, "C");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const oc_r41 = ctx.$implicit;
    const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](28, _c4, oc_r41.inCurrStrategyCE));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", oc_r41.addCEToOrders);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpropertyInterpolate1"]("id", "oc-qty-CE-", oc_r41.symbol, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", oc_r41.qtyInputCE);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](30, _c4, oc_r41.inCurrStrategyCE));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](oc_r41.inlineStrategyPnLCE);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](32, _c4, oc_r41.inCurrStrategyCE));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](oc_r41.volumeCE);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", ctx_r14.show_greeks);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](34, _c4, oc_r41.inCurrStrategyCE));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" ", oc_r41.ltpCE, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", oc_r41.inCurrStrategyCE);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction2"](36, _c6, oc_r41.isSpot, !oc_r41.isSpot));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" ", oc_r41.strike, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", oc_r41.isSpot);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", oc_r41.showNudge);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](39, _c5, oc_r41.inCurrStrategyPE));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"](" ", oc_r41.ltpPE, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", oc_r41.inCurrStrategyPE);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", ctx_r14.show_greeks);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](41, _c5, oc_r41.inCurrStrategyPE));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](oc_r41.volumePE);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](43, _c5, oc_r41.inCurrStrategyPE));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](oc_r41.inlineStrategyPnLPE);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](45, _c5, oc_r41.inCurrStrategyPE));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", oc_r41.addPEToOrders);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpropertyInterpolate1"]("id", "oc-qty-PE-", oc_r41.symbol, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", oc_r41.qtyInputPE);
} }
const _c7 = function (a0) { return { "stockHolding": a0 }; };
const _c8 = function (a0, a1, a2) { return { "green": a0, "red": a1, "bold-higher": a2 }; };
function AppComponent_tr_355_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](5, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](7, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](9, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](10);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](11, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](12);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](13, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](14);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](15, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](16);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](17, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](18);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](19, "td", 120);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](20);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](21, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](22);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
} if (rf & 2) {
    const h_r62 = ctx.$implicit;
    const ctx_r15 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction1"](20, _c7, ctx_r15.isStockHolding(h_r62.scrip)));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](h_r62.scrip);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](h_r62.ltp);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction3"](22, _c8, h_r62.oned > 0, h_r62.oned < 0, h_r62.oned > 2 || h_r62.oned < -2));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](h_r62.oned);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction3"](26, _c8, h_r62.onew > 0, h_r62.onew < 0, h_r62.onew > 5 || h_r62.onew < -5));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](h_r62.onew);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction3"](30, _c8, h_r62.onem > 0, h_r62.onem < 0, h_r62.onem > 7 || h_r62.onem < -7));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](h_r62.onem);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction3"](34, _c8, h_r62.threem > 0, h_r62.threem < 0, h_r62.threem > 10 || h_r62.threem < -10));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](h_r62.threem);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction3"](38, _c8, h_r62.fiftytwow > 0, h_r62.fiftytwow < 0, h_r62.fiftytwow > 10 || h_r62.fiftytwow < -10));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](h_r62.fiftytwow);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction3"](42, _c8, h_r62.avgp > 0, h_r62.avgp < 0, h_r62.avgp > 5 || h_r62.avgp < -5));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](h_r62.avgp);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction3"](46, _c8, h_r62.support > 0, h_r62.support < 0, h_r62.support > 5 || h_r62.support < -5));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](h_r62.support);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵpureFunction3"](50, _c8, h_r62.resistance > 0, h_r62.resistance < 0, h_r62.resistance > 5 || h_r62.resistance < -5));
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](h_r62.resistance);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](h_r62.buyvalue);
} }
class AppComponent {
    /* monthsMapping = {
      'JAN' : '1',
      'FEB' : '2',
      'MAR' : '3',
      'APR' : '4',
      'MAY' : '5',
      'JUN' : '6',
      'JUL' : '7',
      'AUG' : '8',
      'SEP' : '9',
      'OCT' : '10',
      'NOV' : '11',
      'DEC' : '12'
    }; */
    constructor(route, appService, mapService, websocketService, chartService, angelService, angelWS, holdingsService, zerodhaService, zerodhaWebsocketService, algoService) {
        this.route = route;
        this.appService = appService;
        this.mapService = mapService;
        this.websocketService = websocketService;
        this.chartService = chartService;
        this.angelService = angelService;
        this.angelWS = angelWS;
        this.holdingsService = holdingsService;
        this.zerodhaService = zerodhaService;
        this.zerodhaWebsocketService = zerodhaWebsocketService;
        this.algoService = algoService;
        this.title = 'Trades';
        this.access_token = null;
        this.user_id = null;
        this.auth_code = null;
        this.lastRequestStatus = null;
        this.positions = [];
        this.orders = [];
        this.log_ws_feed = false;
        this.hide_positions = false;
        this.hide_exited_positions = true;
        this.hide_orders = false;
        this.disable_order_buttons = true;
        this.lastPositionsUpdateTime = '';
        this.lastOrdersUpdateTime = '';
        this.positionsPnL = 0;
        this.stranglePositions = [];
        this.debitSpreadPositions = [];
        this.newexpiry = 'NIFTY20618';
        this.newstrike = 10000;
        this.newoption = 'CE';
        this.newqty = 50;
        this.newblock = 0;
        this.newlimit = 0;
        this.newstop = 0;
        this.newProductType = 'INTRADAY';
        this.newOrderType = 2;
        this.nifty_oc_check = true;
        this.usdinr_oc_check = false;
        this.oc_instru = 'NIFTY';
        this.oc_year = 2021;
        this.oc_month = 6;
        this.oc_date = 3;
        // is_monthly_expiry = false;
        this.show_greeks = false;
        this.checked_instrument = 'USDINR';
        this.oc_range_higher = 16000; // 24200
        this.oc_range_lower = 14000; // 21000
        this.oc_range_multiple = 50;
        this.oc_strikes = [];
        this.oc_product_type = 'MARGIN';
        this.ws_vendor = 'zerodha'; //aliceblue
        this.auth_acc = '1';
        this.auth_acc_1 = '';
        this.auth_acc_2 = '';
        this.mean = 0;
        this.variance = 1;
        this.ws_access_token = 'yriZAzfnEWhCaAWh3JUuSqqL2ZtjX3dWv317ooTmhh78YCsdK3mkgz1dMdrKvyv7rRrU5WRvUnVf3gsoFiUQbATK32G6drt3CVbiqMVExLn0Hi51JdMIryRHPp2nHrso'; //'A8E8eGyqMug7VOXnvx2dPjf9pWbf8KKgfn9RQy9EVyA.KqVXmuGCRCQ2wEf95iFEtVjQxs0_LoL9FyZ86bPJlFg';
        this.strategyPnL = 0;
        this.strategyPointsProfit = 0;
        this.suggestions = [];
        this.adjust_sugg = [];
        this.portfolio_return = 0;
        this.holdings = [];
        this.total_inv = 0;
        this.current_val = 0;
        this.combined_SL = 0;
        this.combined_premium = 0;
        this.maxProfit = 0;
        this.maxLoss = 0;
        this.profitLossRatio = 0;
        this.qty_default = 200;
        this.qty_strategy_pts = 400;
        this.diff_strategy_pts = 200;
        this.strategy_pts = false;
        this.alerts = [];
        this.fetchNSEOC_secs = null;
        this.latest_ten = true;
        this.orders_rows = 9;
        this.orders_update = false;
        this.completeOrders = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.completeOrders;
        this.baby_name = '';
        this.baby_surname = 'bhadane';
        this.babyNameNumber = 0;
        this.historical_instru = 'NIFTY';
        this.historical_append = 'WK';
        this.historical_date = '2023-03-29';
        this.historical_upper = 18500;
        this.historical_lower = 16000;
        this.zerodha_auth = 'enctoken Sr2gbgdlEM7yRuGdXWtOu9YrTyyuMHHqBJ+F4N1UXSDmSpEH8UrrAkE9Ii7DCbAb3CkRMtRVhbcnC9Qv+rY7LcLVgyz2lGZg4VqnFFnl19PrXXPH7qxXuA==';
        this.zerodha_marketwatch = '{"status":"success","data":[{"id":108696388,"name":"1","items":[{"id":673211353,"weight":1,"tradingsymbol":"INDIA VIX","instrument_token":264969,"segment":"INDICES","exchange":"NSE","expiry":""},{"id":816421144,"weight":2,"tradingsymbol":"NIFTY 50","instrument_token":256265,"segment":"INDICES","exchange":"NSE","expiry":""},{"id":903805357,"weight":6,"tradingsymbol":"NIFTYBEES","instrument_token":2707457,"segment":"NSE","exchange":"NSE","expiry":""},{"id":915508605,"weight":7,"tradingsymbol":"ICICINIFTY","instrument_token":7565569,"segment":"NSE","exchange":"NSE","expiry":""},{"id":915630019,"weight":8,"tradingsymbol":"KOTAKBKETF","instrument_token":1497857,"segment":"NSE","exchange":"NSE","expiry":""},{"id":915630692,"weight":9,"tradingsymbol":"KOTAKNIFTY","instrument_token":4634113,"segment":"NSE","exchange":"NSE","expiry":""},{"id":916079116,"weight":10,"tradingsymbol":"SETFNIF50","instrument_token":2605057,"segment":"NSE","exchange":"NSE","expiry":""},{"id":2963445776,"weight":11,"tradingsymbol":"LIQUIDBEES","instrument_token":2817537,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3185499175,"weight":12,"tradingsymbol":"BANKBEES","instrument_token":2928385,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3325591374,"weight":13,"tradingsymbol":"NIFTY BANK","instrument_token":260105,"segment":"INDICES","exchange":"NSE","expiry":""}]},{"id":108696392,"name":"Watchlist 2","items":[{"id":2542203093,"weight":19,"tradingsymbol":"INDIA VIX","instrument_token":264969,"segment":"INDICES","exchange":"NSE","expiry":""},{"id":3380116369,"weight":20,"tradingsymbol":"BANKNIFTY2211340400CE","instrument_token":11244546,"segment":"NFO-OPT","exchange":"NFO","expiry":"2022-01-13"},{"id":3384256979,"weight":21,"tradingsymbol":"BANKNIFTY2211340500CE","instrument_token":11245570,"segment":"NFO-OPT","exchange":"NFO","expiry":"2022-01-13"},{"id":3384259326,"weight":22,"tradingsymbol":"BANKNIFTY2211340600CE","instrument_token":11246082,"segment":"NFO-OPT","exchange":"NFO","expiry":"2022-01-13"},{"id":3384262349,"weight":23,"tradingsymbol":"BANKNIFTY2211340700CE","instrument_token":11246594,"segment":"NFO-OPT","exchange":"NFO","expiry":"2022-01-13"},{"id":3384265324,"weight":24,"tradingsymbol":"BANKNIFTY2211340800CE","instrument_token":11247106,"segment":"NFO-OPT","exchange":"NFO","expiry":"2022-01-13"},{"id":3384267715,"weight":25,"tradingsymbol":"BANKNIFTY2211340900CE","instrument_token":11249922,"segment":"NFO-OPT","exchange":"NFO","expiry":"2022-01-13"},{"id":3384270013,"weight":26,"tradingsymbol":"BANKNIFTY2211341000CE","instrument_token":11250434,"segment":"NFO-OPT","exchange":"NFO","expiry":"2022-01-13"}]},{"id":108696391,"name":"3","items":[]},{"id":108696390,"name":"4","items":[{"id":3350520016,"weight":3,"tradingsymbol":"USDINR22107FUT","instrument_token":1838339,"segment":"CDS-FUT","exchange":"CDS","expiry":"2022-01-07"},{"id":3352324563,"weight":4,"tradingsymbol":"USDINR2210774.75CE","instrument_token":2084099,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3352325735,"weight":5,"tradingsymbol":"USDINR22JAN74.75CE","instrument_token":2331907,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-27"},{"id":3357694089,"weight":6,"tradingsymbol":"USDINR2210774PE","instrument_token":2082819,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3352326484,"weight":6,"tradingsymbol":"USDINR2211474.75CE","instrument_token":2277379,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-14"},{"id":3352327889,"weight":7,"tradingsymbol":"USDINR22JAN74.5CE","instrument_token":2331395,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-27"},{"id":3352328068,"weight":8,"tradingsymbol":"USDINR2210774.5CE","instrument_token":2083587,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3352328218,"weight":9,"tradingsymbol":"USDINR2211474.5CE","instrument_token":2274563,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-14"},{"id":3352330098,"weight":10,"tradingsymbol":"USDINR22JAN74.25PE","instrument_token":2331139,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-27"},{"id":3352330606,"weight":11,"tradingsymbol":"USDINR2210774.25PE","instrument_token":2083331,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3352330853,"weight":12,"tradingsymbol":"USDINR2211474.25PE","instrument_token":2228483,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-14"},{"id":3352331692,"weight":13,"tradingsymbol":"USDINR22JAN74.5PE","instrument_token":2331651,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-27"},{"id":3352331872,"weight":14,"tradingsymbol":"USDINR2210774.5PE","instrument_token":2083843,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3352332088,"weight":15,"tradingsymbol":"USDINR2211474.5PE","instrument_token":2275843,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-14"}]},{"id":108696389,"name":"5","items":[{"id":3348892336,"weight":0,"tradingsymbol":"USDINR2210775.5CE","instrument_token":2085635,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348944443,"weight":1,"tradingsymbol":"USDINR2210775CE","instrument_token":2084611,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348963455,"weight":2,"tradingsymbol":"USDINR2210776.5CE","instrument_token":2087683,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348963507,"weight":3,"tradingsymbol":"USDINR2210776.25CE","instrument_token":2087171,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348963586,"weight":4,"tradingsymbol":"USDINR2210776CE","instrument_token":2086659,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348963744,"weight":5,"tradingsymbol":"USDINR2210775.75CE","instrument_token":2086147,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348963890,"weight":6,"tradingsymbol":"USDINR2210775.25CE","instrument_token":2085123,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964092,"weight":7,"tradingsymbol":"USDINR2210774.25CE","instrument_token":2083075,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964200,"weight":8,"tradingsymbol":"USDINR2210774.75CE","instrument_token":2084099,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964250,"weight":9,"tradingsymbol":"USDINR2210774.5CE","instrument_token":2083587,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964298,"weight":10,"tradingsymbol":"USDINR2210774CE","instrument_token":2082563,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964379,"weight":11,"tradingsymbol":"USDINR2210773.75CE","instrument_token":2082051,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964434,"weight":12,"tradingsymbol":"USDINR2210773.5CE","instrument_token":2081539,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964547,"weight":13,"tradingsymbol":"USDINR2210773.25CE","instrument_token":2081027,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964591,"weight":14,"tradingsymbol":"USDINR2210773CE","instrument_token":2080515,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964657,"weight":15,"tradingsymbol":"USDINR2210772.75CE","instrument_token":2080003,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964687,"weight":16,"tradingsymbol":"USDINR2210772.5CE","instrument_token":2079491,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964729,"weight":17,"tradingsymbol":"USDINR2210772.25CE","instrument_token":2078979,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348967699,"weight":18,"tradingsymbol":"USDINR2210776.25PE","instrument_token":2087427,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348965608,"weight":18,"tradingsymbol":"USDINR2210776PE","instrument_token":2086915,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348964780,"weight":18,"tradingsymbol":"USDINR2210772CE","instrument_token":2078467,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348965675,"weight":19,"tradingsymbol":"USDINR2210775.75PE","instrument_token":2086403,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348967763,"weight":19,"tradingsymbol":"USDINR2210776.5PE","instrument_token":2087939,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348965724,"weight":20,"tradingsymbol":"USDINR2210775.5PE","instrument_token":2085891,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348965816,"weight":21,"tradingsymbol":"USDINR2210775.25PE","instrument_token":2085379,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348965993,"weight":22,"tradingsymbol":"USDINR2210775PE","instrument_token":2084867,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966094,"weight":23,"tradingsymbol":"USDINR2210774.75PE","instrument_token":2084355,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966143,"weight":24,"tradingsymbol":"USDINR2210774.5PE","instrument_token":2083843,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966207,"weight":25,"tradingsymbol":"USDINR2210774.25PE","instrument_token":2083331,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966278,"weight":26,"tradingsymbol":"USDINR2210774PE","instrument_token":2082819,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966366,"weight":27,"tradingsymbol":"USDINR2210773.75PE","instrument_token":2082307,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966427,"weight":28,"tradingsymbol":"USDINR2210773.5PE","instrument_token":2081795,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966465,"weight":29,"tradingsymbol":"USDINR2210773.25PE","instrument_token":2081283,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966553,"weight":30,"tradingsymbol":"USDINR2210773PE","instrument_token":2080771,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966621,"weight":31,"tradingsymbol":"USDINR2210772.75PE","instrument_token":2080259,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966683,"weight":32,"tradingsymbol":"USDINR2210772.5PE","instrument_token":2079747,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966740,"weight":33,"tradingsymbol":"USDINR2210772.25PE","instrument_token":2079235,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3348966840,"weight":34,"tradingsymbol":"USDINR2210772PE","instrument_token":2078723,"segment":"CDS-OPT","exchange":"CDS","expiry":"2022-01-07"},{"id":3349002726,"weight":35,"tradingsymbol":"USDINR22107FUT","instrument_token":1838339,"segment":"CDS-FUT","exchange":"CDS","expiry":"2022-01-07"}]},{"id":1432148480,"name":"MW 6","items":[{"id":3153225189,"weight":4,"tradingsymbol":"INDIA VIX","instrument_token":264969,"segment":"INDICES","exchange":"NSE","expiry":""}]},{"id":1439682075,"name":"MW 7","items":[{"id":3160458234,"weight":1,"tradingsymbol":"INDIA VIX","instrument_token":264969,"segment":"INDICES","exchange":"NSE","expiry":""},{"id":3186435109,"weight":2,"tradingsymbol":"NIFTYBEES","instrument_token":2707457,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186401941,"weight":3,"tradingsymbol":"CIPLA","instrument_token":177665,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186406251,"weight":4,"tradingsymbol":"DIVISLAB","instrument_token":2800641,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186408123,"weight":5,"tradingsymbol":"TCS","instrument_token":2953217,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186408254,"weight":6,"tradingsymbol":"INFY","instrument_token":408065,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186414542,"weight":7,"tradingsymbol":"TECHM","instrument_token":3465729,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186425692,"weight":8,"tradingsymbol":"RELIANCE","instrument_token":738561,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186409602,"weight":9,"tradingsymbol":"ASIANPAINT","instrument_token":60417,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186428516,"weight":10,"tradingsymbol":"BHARTIARTL","instrument_token":2714625,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186410885,"weight":11,"tradingsymbol":"POWERGRID","instrument_token":3834113,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186411996,"weight":12,"tradingsymbol":"NESTLEIND","instrument_token":4598529,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186427537,"weight":13,"tradingsymbol":"KOTAKBANK","instrument_token":492033,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3186565769,"weight":14,"tradingsymbol":"BAJAJFINSV","instrument_token":4268801,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3261642640,"weight":15,"tradingsymbol":"SBILIFE","instrument_token":5582849,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3261648555,"weight":16,"tradingsymbol":"LT","instrument_token":2939649,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3261672641,"weight":17,"tradingsymbol":"GRASIM","instrument_token":315393,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3261674006,"weight":18,"tradingsymbol":"TITAN","instrument_token":897537,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3261755095,"weight":19,"tradingsymbol":"BANKBEES","instrument_token":2928385,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3262029921,"weight":20,"tradingsymbol":"VBL","instrument_token":4843777,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3262031465,"weight":21,"tradingsymbol":"RADICO","instrument_token":2813441,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3380025273,"weight":22,"tradingsymbol":"PIDILITIND","instrument_token":681985,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3380026008,"weight":23,"tradingsymbol":"SUNPHARMA","instrument_token":857857,"segment":"NSE","exchange":"NSE","expiry":""},{"id":3380027033,"weight":24,"tradingsymbol":"DMART","instrument_token":5097729,"segment":"NSE","exchange":"NSE","expiry":""}]}]}';
        this.zerodha_from_date = '2021-12-08';
        this.zerodha_to_date = '2022-01-07';
        this.zerodha_expiry_date = 'Jan-07-2021';
        this.nextGreeksTime = new Date();
        this.greeksData = new Map();
        this.initialGreeksData = new Map();
        this.route.queryParams.subscribe(params => {
            console.log('params', params);
            if (params && params.access_token) {
                this.access_token = params.access_token;
                // console.log('access_token', this.access_token);
                /*  this.getFunds();
                 this.getPositions();
                 this.getOrders(); */
                // this.getPayoff();
                // this.appService.getMastersContract();
                // this.angelLogin();
            }
            if (params && params.user_id) {
                this.user_id = params.user_id;
            }
        });
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.subscribe(res => {
            console.log('app requestStatusEvent: ', res);
            this.lastRequestStatus = res;
            let status = res['status']; // success info warning danger primary secondary light dark
            let message = res['message'];
            let alert = {
                type: status,
                message: message,
            };
            this.alerts.unshift(alert);
            setTimeout(() => {
                this.alerts.splice(this.alerts.indexOf(alert), 1);
            }, 5000);
        });
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.websocketEvent$.subscribe(res => {
            console.log('app websocketEvent: ', res);
            if (res === 'connected') {
                this.refreshAll();
                this.subscribeUSDINR();
                // this.subscribePositionsFeed();
                /* setTimeout(() => {
                  this.startMonitoringGreeks();
                }, 10000); */
            }
        });
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.miscEvent$.subscribe(res => {
            console.log('app miscEvent: ', res);
            if (res === 'refreshAll') {
                this.refreshAll();
            }
        });
    }
    log_ws_feed_change() {
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.logWSFeed = this.log_ws_feed;
    }
    subscribeUSDINR() {
        let sub = [];
        let expiry = this.mapService.findCurrExpiryForDisplay(_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.usdinrExpiries);
        let expiryString = this.mapService.getExpiry(expiry, 'USDINR');
        sub.push(this.mapService.getSubscriptionObjectForFuture('USDINR' + expiryString + 'FUT', 'CDS'));
        console.log('subscribeUSDINR feed', sub);
        this.appService.sendSubscriptions(sub);
    }
    close(alert) {
        this.alerts.splice(this.alerts.indexOf(alert), 1);
    }
    changeLatestTen(event) {
        if (event.target.checked) {
            this.orders_rows = 10;
        }
        else {
            this.orders_rows = 1000;
        }
    }
    getInstruLTP(instru) {
        return this.mapService.getScripLTP(null, null, instru, null);
    }
    auth_change(event) {
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth = event;
        console.log('auth change', event);
        localStorage.setItem('broker_auth', JSON.stringify(event));
    }
    auth_change_num(event, num) {
        // AppConstants.broker_auth = event;
        console.log('auth_change_num', event, num);
        localStorage.setItem('broker_auth_' + num, JSON.stringify(event));
        if (num == this.auth_acc) {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth = event;
        }
    }
    auth_radio_change(event) {
        console.log('auth_radio_change', event);
        if (this.auth_acc == '1') {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth = this.auth_acc_1;
        }
        else if (this.auth_acc == '2') {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth = this.auth_acc_2;
        }
        console.log('AppConstants.broker_auth', _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth);
    }
    calcBabyName(event) {
        console.log(event, this.baby_name, this.baby_surname);
        let babyNumber = 0;
        for (let c of this.baby_name) {
            if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.babyNamesLetters[c.toUpperCase()]) {
                babyNumber += _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.babyNamesLetters[c.toUpperCase()];
            }
            console.log(babyNumber, c, _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.babyNamesLetters[c.toUpperCase()]);
        }
        for (let c of this.baby_surname) {
            if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.babyNamesLetters[c.toUpperCase()]) {
                babyNumber += _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.babyNamesLetters[c.toUpperCase()];
            }
            console.log(babyNumber, c, _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.babyNamesLetters[c.toUpperCase()]);
        }
        this.babyNameNumber = 0;
        while (babyNumber) {
            this.babyNameNumber += babyNumber % 10;
            babyNumber = Math.floor(babyNumber / 10);
        }
        if (this.babyNameNumber >= 10) {
            let twodigit = this.babyNameNumber;
            this.babyNameNumber = 0;
            while (twodigit) {
                this.babyNameNumber += twodigit % 10;
                twodigit = Math.floor(twodigit / 10);
            }
        }
        //console.log(this.babyNameNumber);
    }
    test1() {
        /* let obj = this.mapService.getSubscriptionObject('44900CE', 'BANKNIFTY', '2023-06-08');
        let element = this.zerodhaService.findStrikeInMasters(obj);
        console.log('scheduler element', element);
        if (element && element.token) {
          this.algoService.getZerodhaChartData(element.token, '44900CE');
          this.algoService.getZerodhaChartData(element.token, '44900CE');
        } */
        this.refreshAll();
        this.refreshAll();
    }
    ngOnInit() {
        this.auth_acc_1 = JSON.parse(localStorage.getItem('broker_auth_1'));
        this.auth_acc_2 = JSON.parse(localStorage.getItem('broker_auth_2'));
        if (this.auth_acc == '1') {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth = this.auth_acc_1;
        }
        else if (this.auth_acc == '2') {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth = this.auth_acc_2;
        }
        // AppConstants.broker_auth = JSON.parse(localStorage.getItem('broker_auth'));
        this.zerodha_auth = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth;
        //this.zerodhaWebsocketService.connect();
        //console.log(sha256('AB03397849LHZEV09feJdK7c59mzI4vxZOpJ0McPVg6aYP0kKmnMq1Gbn3DQMBOAb8xE7b6EJCkOspKl1EBljBUEmVppzSTT39G7rd9gIy01cWqzZTocnuCHXpBSj14TiyP0SDF80B9E4QG3EXTP2M2UXGQ6TYCUD2FQAHNT'));
        // this.appService.dummyRequest();
        //this.startMonitoringGreeks();
        // this.getNSE_OC();
        this.calcBabyName(null);
        //this.zerodhaService.historical('14208002', '5minute', '2023-01-01', '2023-02-01', '0', '1');
        // Setting dummy values for indices for Payoff to work even if websocket is not working
        this.mapService.setLtp('NIFTY50', 18000);
        this.mapService.setLtp('BANKNIFTY', 40000);
        this.mapService.setLtp('FINNIFTY', 18500);
        this.mapService.setLtp('MIDCPNIFTY', 8000);
        this.mapService.setLtp('SENSEX', 65000);
        this.mapService.setLtp('BANKEX', 50000);
        if (window.location.href.includes('localhost')) {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isProduction = false;
        }
        console.log(window.location.href, _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isProduction);
        // AppConstants.FINNIFTY_FUT_MONTH = this.findCurrExpiryMonth(AppConstants.monthlyExpiryDatesFINNIFTY);
        // AppConstants.USDINR_FUT_MONTH = this.findCurrExpiryMonth(AppConstants.monthlyExpiryDatesUSDINR);
        this.zerodha_expiry_date = this.mapService.findCurrExpiryForDisplay(_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.niftyExpiries);
        this.zerodha_to_date = this.mapService.findCurrExpiryForDisplay(_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.niftyExpiries);
        let zerodha_from_date = new Date(this.mapService.findCurrExpiryForDisplay(_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.niftyExpiries));
        zerodha_from_date.setDate(zerodha_from_date.getDate() - 10);
        this.zerodha_from_date = '' + zerodha_from_date.getFullYear() + '-' + ('0' + (zerodha_from_date.getMonth() + 1)).slice(-2) + '-' + ('0' + zerodha_from_date.getDate()).slice(-2);
        // console.log(AppConstants.FINNIFTY_FUT_MONTH, AppConstants.USDINR_FUT_MONTH)
        let refresh_interval = setInterval(() => {
            this.updateSpotStrike();
            this.updateOCValues();
        }, 5000);
        let autoSuggest_interval = setInterval(() => {
            // this.autoSuggest();
        }, 2000);
        this.chartService.strategyPnLEvent$.subscribe(res => {
            // console.log('received:', res);
            this.strategyPnL = res[0];
            this.strategyPointsProfit = res[1];
        });
        this.chartService.optionChainEvent$.subscribe(res => {
            console.log('received oc:', res);
            let instru = res[0];
            let expiryDate = res[1];
            this.processOCRequest(instru, expiryDate);
        });
        let orders_interval = setInterval(() => {
            if (this.orders_update) {
                this.getOrders();
            }
        }, 10000);
        let export_interval = setInterval(() => {
            if (!_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isHistoricalRunning) {
                let d = new Date();
                if ((d.getHours() === 15 && d.getMinutes() >= 31) || d.getHours() >= 16) {
                    let expiryString = '' + d.getFullYear() + '-' + ('0' + (d.getMonth() + 1)).slice(-2) + '-' + ('0' + d.getDate()).slice(-2);
                    let today_done = JSON.parse(localStorage.getItem('export_' + expiryString));
                    if (today_done !== 'true') {
                        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isHistoricalRunning = true;
                        let append = 'WK';
                        let daysToRetrieve = 10;
                        if (this.mapService.isMonthlyExpiry(expiryString, 'NIFTY') || this.mapService.isMonthlyExpiry(expiryString, 'FINNIFTY')
                            || this.mapService.isMonthlyExpiry(expiryString, 'MIDCPNIFTY') || this.mapService.isMonthlyExpiry(expiryString, 'SENSEX') || this.mapService.isMonthlyExpiry(expiryString, 'BANKEX')
                            || this.mapService.isMonthlyExpiry(expiryString, 'USDINR')) {
                            append = '';
                            daysToRetrieve = 30;
                        }
                        let from_date = new Date(d);
                        from_date.setDate(d.getDate() - daysToRetrieve);
                        let fromString = '' + from_date.getFullYear() + '-' + ('0' + (from_date.getMonth() + 1)).slice(-2) + '-' + ('0' + from_date.getDate()).slice(-2);
                        console.log('Starting to fetch expiry data');
                        this.holdingsService.getZerodhaInstruments(append, _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth, fromString, expiryString, expiryString);
                    }
                }
            }
        }, 10000);
    }
    ngAfterViewInit() {
        setTimeout(() => {
        });
        /* this.cdr.detectChanges(); */
    }
    fetchHistorical() {
        // this.holdingsService.fetchCandles(this.historical_append, this.zerodha_auth, this.zerodha_marketwatch, this.zerodha_from_date, this.zerodha_to_date, this.zerodha_expiry_date);
        this.holdingsService.getZerodhaInstruments(this.historical_append, this.zerodha_auth, this.zerodha_from_date, this.zerodha_to_date, this.zerodha_expiry_date);
    }
    fetchHistoricalThirdParty() {
        this.holdingsService.getDataFromThirdParty(this.historical_instru, this.historical_append, this.zerodha_from_date, this.zerodha_to_date, this.zerodha_expiry_date, this.historical_date, this.historical_upper, this.historical_lower);
    }
    exportHistorical() {
        this.holdingsService.exportToCSV();
    }
    processOCRequest(instru, expiryDate) {
        this.oc_instru = instru;
        let expiry = new Date(expiryDate);
        this.oc_year = expiry.getFullYear();
        this.oc_month = expiry.getMonth() + 1;
        this.oc_date = expiry.getDate();
        if (this.oc_instru === 'NIFTY') {
            this.oc_range_multiple = 50;
            let spot = this.mapService.getScripLTP(null, null, 'NIFTY50', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 500;
            this.oc_range_lower = spotStrike - 500;
        }
        else if (this.oc_instru === 'BANKNIFTY') {
            this.oc_range_multiple = 100;
            let spot = this.mapService.getScripLTP(null, null, 'BANKNIFTY', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 1500;
            this.oc_range_lower = spotStrike - 1500;
        }
        else if (this.oc_instru === 'FINNIFTY') {
            this.oc_range_multiple = 50;
            let spot = this.mapService.getScripLTP(null, null, 'FINNIFTY', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 500;
            this.oc_range_lower = spotStrike - 500;
        }
        else if (this.oc_instru === 'MIDCPNIFTY') {
            this.oc_range_multiple = 25;
            let spot = this.mapService.getScripLTP(null, null, 'MIDCPNIFTY', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 500;
            this.oc_range_lower = spotStrike - 500;
        }
        else if (this.oc_instru === 'SENSEX') {
            this.oc_range_multiple = 100;
            let spot = this.mapService.getScripLTP(null, null, 'SENSEX', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 1500;
            this.oc_range_lower = spotStrike - 1500;
        }
        else if (this.oc_instru === 'BANKEX') {
            this.oc_range_multiple = 100;
            let spot = this.mapService.getScripLTP(null, null, 'BANKEX', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 1500;
            this.oc_range_lower = spotStrike - 1500;
        }
        else if (this.oc_instru === 'USDINR') {
            this.oc_range_multiple = 0.25;
            let spot = this.mapService.getScripLTP(null, null, 'USDINR', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 2;
            this.oc_range_lower = spotStrike - 2;
        }
        this.updateOCRange();
    }
    getStrategyPnL() {
        return this.strategyPnL;
    }
    /* getIV(symbol, strike, type) {
      let date_expiry = new Date(this.oc_year, this.oc_month - 1, this.oc_date);
      if (this.oc_instru === 'USDINR') {
        date_expiry.setHours(12, 30, 0);
      } else {
        date_expiry.setHours(15, 30, 0);
      }
  
      let underlying = 'NIFTY50';
      if (this.oc_instru === 'BANKNIFTY') {
        underlying = 'BANKNIFTY';
      } else if (this.oc_instru === 'FINNIFTY') {
        underlying = 'FINNIFTY';
      } else if (this.oc_instru === 'USDINR') {
        underlying = 'USDINR';
      }
      let spot = this.mapService.getScripLTP(null, null, underlying, null);
  
      let mkt_price = this.getLtp(symbol + type); this.mapService.getScripLTP(null, null, 'NIFTY50', null);
  
      let typet0 = null;
      if (type === 'CE') {
        typet0 = PositionTypeForPayOff.CE;
      }
      if (type === 'PE') {
        typet0 = PositionTypeForPayOff.PE;
      }
  
      let iv = this.appService.calculateIV(this.oc_instru, spot, strike, AppConstants.INTEREST_RATE, date_expiry, typet0, mkt_price);
  
      return iv;
    } */
    getGreeks(strike, type) {
        let ltp = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), strike, type);
        let expiry = new Date(this.oc_year, this.oc_month - 1, this.oc_date);
        let greeks = this.appService.getGreeks(this.oc_instru, strike, type, expiry, ltp, _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isSimulatedStrategy, _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.simulateCurrDateObj);
        return greeks;
    }
    /* getUSDINRMonth() {
      return AppConstants.USDINR_FUT_MONTH;
    } */
    checkNifty() {
        if (this.nifty_oc_check) {
            this.usdinr_oc_check = false;
            this.checked_instrument = 'NIFTY';
        }
        else {
            this.usdinr_oc_check = true;
            this.checked_instrument = 'USDINR';
        }
    }
    checkUSDINR() {
        if (this.usdinr_oc_check) {
            this.nifty_oc_check = false;
            this.checked_instrument = 'USDINR';
        }
        else {
            this.nifty_oc_check = true;
            this.checked_instrument = 'NIFTY';
        }
    }
    login() {
        this.auth();
    }
    auth() {
        this.appService.auth().subscribe((res) => {
            console.log('app auth', res);
            if (res) {
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(res);
                if (res.authorization_code) {
                    this.auth_code = res.authorization_code;
                    this.generateAccessToken();
                }
            }
        }, error => {
            console.log('app auth error', error);
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(error.error.message + ', ' + error.message);
        });
    }
    generateAccessToken() {
        if (this.auth_code) {
            let tokenUrl = this.appService.getTokenUrl(this.auth_code, _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.fyersAppId);
            console.log('tokenUrl', tokenUrl);
            // window.location.href = tokenUrl;
            let wnd = window.open(tokenUrl /* , '_self' */);
        }
    }
    getFunds() {
        console.log('app getting Funds');
        this.appService.getFunds(this.access_token).subscribe((res) => {
            console.log('app getFunds', res);
            if (res) {
                this.totalBalance = res.fund_limit[8].equityAmount.toLocaleString();
                this.availableBalance = res.fund_limit[9].equityAmount.toLocaleString();
                this.utilizedBalance = res.fund_limit[6].equityAmount.toLocaleString();
            }
        }, error => {
            console.log('app getPositions error', error);
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(error.error.message + ', ' + error.message);
        });
    }
    includePosPnLInSum1(pos) {
        pos.includeInSum1 = !pos.includeInSum1;
    }
    includePosPnLInSum2(pos) {
        pos.includeInSum2 = !pos.includeInSum2;
    }
    includePosPnLInSum3(pos) {
        pos.includeInSum3 = !pos.includeInSum3;
    }
    includePosPnLInSum4(pos) {
        pos.includeInSum4 = !pos.includeInSum4;
    }
    getPositionsPnLSum(num) {
        let sum = 0;
        if (this.positions) {
            this.positions.forEach(pos => {
                if (num === 1 && pos.includeInSum1) {
                    sum += pos.pnl;
                }
                if (num === 2 && pos.includeInSum2) {
                    sum += pos.pnl;
                }
                if (num === 3 && pos.includeInSum3) {
                    sum += pos.pnl;
                }
                if (num === 4 && pos.includeInSum4) {
                    sum += pos.pnl;
                }
            });
            sum = Math.round((sum + 0.00001) * 100) / 100; // round to 2 decimal places
            this.positionsPnL = sum;
        }
        return sum;
    }
    /*
      subscribePositionsFeed() {
        let sub = [];
        this.positions.forEach(pos => {
          let symbol = pos.scrip;
          symbol = symbol.replace('NSE:', '');
          let instru = '';
          if (symbol.startsWith('NIFTY')) {
            instru = 'NIFTY';
            symbol = symbol.replace('NIFTY', '');
          }
          if (symbol.startsWith('BANKNIFTY')) {
            instru = 'BANKNIFTY';
            symbol = symbol.replace('BANKNIFTY', '');
          }
          if (symbol.startsWith('FINNIFTY')) {
            instru = 'FINNIFTY';
            symbol = symbol.replace('FINNIFTY', '');
          }
          if (symbol.startsWith('USDINR')) {
            instru = 'USDINR';
            symbol = symbol.replace('USDINR', '');
          }
          let type = '';
          if (symbol.includes('CE')) {
            type = 'CE';
          }
          if (symbol.includes('PE')) {
            type = 'PE';
          }
          console.log('subscribePositionsFeed symbol: ' + symbol);
          symbol = symbol.slice(0, -2); // remove CE PE at end
          let strike = symbol.substring(5);
          let expiry = symbol.substring(0, 5); // 20N08 20JUN 20911
          // 20O0812000CE 2091012000CE
          let expiryDate = '';
          if (isNaN(expiry as any)) { // 20N08 20JUN
    
            if (isNaN(parseInt(expiry[4]))) { // 20JUN // checking whether last character is number or not - 20N08 20JUN
              if (instru === 'NIFTY' || instru === 'BANKNIFTY') {
                expiryDate = AppConstants.monthlyExpiryDates[expiry].toDateString();
              }
              if (instru === 'FINNIFTY') {
                expiryDate = AppConstants.monthlyExpiryDatesFINNIFTY[expiry].toDateString();
              }
              if (instru === 'USDINR') {
                expiryDate = AppConstants.monthlyExpiryDatesUSDINR[expiry].toDateString();
              }
            } else { // 20N08
              let year = Number(expiry.substring(0, 2)) + 2000;
              let month = null;
              if (expiry[2] === 'O') {
                month = 9;
              } else if (expiry[2] === 'N') {
                month = 10;
              } else if (expiry[2] === 'D') {
                month = 11;
              }
              let date = Number(expiry.substring(3, 5));
              console.log('subscribePositionsFeed oct nov dec: ', year, month, date);
              expiryDate = new Date(year, month, date).toDateString();
            }
            // console.log('expiryDate', expiryDate);
          } else { // 20618
            let year = Number(expiry.substring(0, 2)) + 2000;
            let month = Number(expiry.substring(2, 3)) - 1;
            let date = Number(expiry.substring(3, 5));
            console.log('subscribePositionsFeed: ', year, month, date);
            expiryDate = new Date(year, month, date).toDateString();
          }
    
          sub.push(this.mapService.getSubscriptionObject(strike + type, instru, expiryDate));
        });
        console.log('positions feed', sub);
        this.appService.sendSubscriptions(sub);
      } */
    getMastersStatus() {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.size) {
            return 'Masters Contract is available';
        }
        return 'Masters Contract not available yet';
    }
    uploadExpiryFile(fileInput) {
    }
    import_establishWSVendor(fileInput) {
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode = this.ws_vendor;
        let fileReaded = fileInput.target.files[0];
        let reader = new FileReader();
        reader.readAsText(fileReaded);
        reader.onload = e => {
            // let csv: string = String(reader.result);
            // let jsonObj = JSON.parse(reader.result.toString());
            console.log('imported master', reader.result);
            this.appService.uploadedMastersContract(reader.result);
        };
    }
    establishWSVendor() {
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode = this.ws_vendor;
        this.appService.getMastersContract(this.ws_access_token);
    }
    closeWebsocket() {
        this.appService.closeWebsocket();
    }
    reopenWebsocket() {
        this.appService.reopenWebsocket();
    }
    getZerodhaInstruments() {
        this.appService.getZerodhaInstruments();
    }
    uploadNames(fileInput) {
        let arr = [];
        let filename = fileInput.target.files[0].name;
        let fileReaded = fileInput.target.files[0];
        let reader = new FileReader();
        reader.readAsText(fileReaded);
        reader.onload = e => {
            let text = String(reader.result);
            let allTextLines_all_data = text.split(/\r|\n|\r/);
            let allTextLines = allTextLines_all_data.filter(function (elem) {
                return elem !== '';
            });
            // console.log('allTextLines: ', allTextLines);
            for (let index = 0; index < allTextLines.length; index++) {
                this.baby_name = allTextLines[index];
                this.baby_surname = 'bhadane';
                this.calcBabyName(null);
                arr.push([allTextLines[index], this.babyNameNumber]);
            }
            console.log('arr', arr);
            let str = '';
            // str += 'Ticker,Date/Time,Open,High,Low,Close,Volume,Open Interest\r\n';
            for (let index = 0; index < arr.length; index++) {
                let row = '';
                row += arr[index][0] + ',Bhadane,' + arr[index][1];
                str += row + '\r\n';
            }
            const downloadFile = new Blob([str], {
                type: 'application/x-msdownload',
            });
            /* if (window.navigator && window.navigator.msSaveOrOpenBlob) { // for IE
              window.navigator.msSaveOrOpenBlob(downloadFile, export_file_name);
            } else { */
            const fileURL = URL.createObjectURL(downloadFile);
            const link = document.createElement('a');
            link.href = fileURL;
            link.target = '_blank';
            document.body.appendChild(link);
            link.download = 'only_boys.csv';
            link.click();
            link.parentNode.removeChild(link);
        };
    }
    uploadNSEOC(fileInput) {
        let filename = fileInput.target.files[0].name;
        let instru = 'NIFTY';
        if (filename.includes('BANKNIFTY')) {
            instru = 'BANKNIFTY';
        }
        if (filename.includes('FINNIFTY')) {
            instru = 'FINNIFTY';
        }
        let f = filename.replace('.csv', '');
        let expiry = f.slice('-11'); // expiry name: 03-Jan-2023
        console.log('nse oc file', filename, expiry, instru);
        let fileReaded = fileInput.target.files[0];
        let reader = new FileReader();
        reader.readAsText(fileReaded);
        reader.onload = e => {
            let csv = String(reader.result);
            // console.log('csv:', csv);
            this.parseNSEOC(csv, instru, expiry);
        };
    }
    parseNSEOC(importData, instru, expiry_string) {
        let allTextLines_all_data = importData.split(/\r|\n|\r/);
        let allTextLines = allTextLines_all_data.filter(function (elem) {
            return elem !== '';
        });
        // console.log('allTextLines: ', allTextLines);
        for (let index = 2; index < allTextLines.length; index++) { // ignore first two lines - headers
            // ,"3,889","3,238","12,458",27.91,0.85,-0.20,320,0.60,0.80,200,"20,500.00","1,600","1,122.50","1,642.20","1,600",-,-,-,-,-,-,
            // let split = allTextLines[index].split(',');
            let split = allTextLines[index].match(/(".*?"|[^",\s]+)(?=\s*,|\s*$)/g);
            // console.log('split', split);
            //let split2 = allTextLines[index].match(/,(?=(?:(?:[^"]*"){2})*[^"]*$)/);
            //console.log('split2', split2);
            let call_ltp = Number(split[4].replaceAll('"', '').replace(',', '').replace('-', '0'));
            let put_ltp = Number(split[16].replaceAll('"', '').replace(',', '').replace('-', '0'));
            let strike = Number(split[10].replaceAll('"', '').replace(',', '').replace('-', '0'));
            // console.log(call_ltp, strike, put_ltp);
            this.appService.parseAndSetMaps(instru, expiry_string, strike, 'CE', call_ltp);
            this.appService.parseAndSetMaps(instru, expiry_string, strike, 'PE', put_ltp);
        }
    }
    getNSE_OC(instru) {
        this.appService.getNSE_OC(instru);
        /* this.appService.getNSE_OC('BANKNIFTY');
        setTimeout(() => {
          this.appService.getNSE_OC('NIFTY50');
        }, 2000);
        setTimeout(() => {
          this.appService.getNSE_OC('FINNIFTY');
        }, 4000); */
        /* if (this.fetchNSEOC_secs) {
          setTimeout(() => {
            this.getNSE_OC();
          }, this.fetchNSEOC_secs * 1000);
        } */
    }
    isSocketConnected() {
        return this.appService.isSocketConnected();
    }
    getPositions() {
        console.log('app getting Positions');
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'zerodha') {
            if (this.positionsSubscription) {
                this.positionsSubscription.unsubscribe();
            }
            this.positionsSubscription = this.zerodhaService.getPositions().subscribe((res) => {
                console.log('zerodha getPositions response', res);
                this.mapPositions(res);
                this.positionsSubscription.unsubscribe();
                // AppConstants.requestStatusEvent$.next({'status': 'success', 'message': 'Positions Fetched'});
            }, error => {
                console.log('zerodha getPositions error', error);
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next({ 'status': 'danger', 'message': 'Positions Fetch Failed' });
            });
        }
        else {
            this.appService.getPositions(this.access_token).subscribe((res) => {
                console.log('app getPositions', res);
                if (res) {
                    this.lastPositionsUpdateTime = new Date().toLocaleTimeString();
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(res);
                    this.mapPositions(res);
                }
            }, error => {
                console.log('app getPositions error', error);
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(error.error.message + ', ' + error.message);
            });
        }
    }
    mapPositions(res) {
        this.positions = [];
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'zerodha') {
            let arr = res.data.net;
            arr.forEach(pos => {
                let p = new _common_models__WEBPACK_IMPORTED_MODULE_1__.Position();
                p.id = pos.id;
                let symbol = pos.tradingsymbol;
                let parsed = this.mapService.parseSymbol(symbol);
                p.instru = parsed.instru;
                p.scrip = parsed.strike + parsed.type;
                let fromMasters = this.zerodhaService.findInMastersByToken(pos.instrument_token);
                if (fromMasters && fromMasters.expiry) {
                    p.expiry = fromMasters.expiry;
                }
                p.netQty = pos.quantity;
                p.buyAvg = pos.buy_price;
                p.sellAvg = pos.sell_price;
                // p.type = pos.productType;
                //p.realizedProfit = pos.realizedProfit;
                p.pnl = pos.pnl;
                this.positions.push(p);
            });
            this.sortPositions();
            console.log('positions', this.positions);
        }
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'fyers') {
            if (res.netPositions instanceof Array) {
                res.netPositions.forEach(pos => {
                    let p = new _common_models__WEBPACK_IMPORTED_MODULE_1__.Position();
                    p.id = pos.id;
                    p.scrip = pos.symbol;
                    p.netQty = pos.netQty;
                    p.buyAvg = pos.buyAvg;
                    p.sellAvg = pos.sellAvg;
                    p.type = pos.productType;
                    p.realizedProfit = pos.realizedProfit;
                    p.pnl = pos.pl;
                    this.positions.push(p);
                });
                // this.subscribePositionsFeed();
            }
        }
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.fetchedPositions = this.positions;
    }
    sortPositions() {
        this.positions.sort((a, b) => {
            // -1 means a should come before b
            // 1 means a should come after b
            if (a.instru !== b.instru) {
                return a.instru.localeCompare(b.instru);
            }
            let a_symbol = a.scrip.slice(0, -2);
            let b_symbol = b.scrip.slice(0, -2);
            if (a_symbol === b_symbol && a.scrip.includes('CE') && b.scrip.includes('PE')) { // same strike CE PE, CE should occur first
                return -1;
            }
            if (a_symbol === b_symbol && a.scrip.includes('PE') && b.scrip.includes('CE')) { // same strike CE PE, CE should occur first
                return 1;
            }
            if (a_symbol === b_symbol && (a.scrip.includes('CE') && b.scrip.includes('CE') || a.scrip.includes('PE') && b.scrip.includes('PE'))) { // same strike and type with different expiries
                let d1 = new Date(a.expiry);
                let d2 = new Date(b.expiry);
                if (d1 < d2) {
                    return -1;
                }
                return 1;
            }
            //return b.scrip.localeCompare(a.scrip); // negative if a is before b
            return this.compareForSorting(a.scrip, b.scrip);
        });
    }
    compareForSorting(ascrip, bscrip) {
        // All CE strikes to be before PE
        if (ascrip.includes('CE') && bscrip.includes('PE')) { // CE should occur first
            return -1;
        }
        if (ascrip.includes('PE') && bscrip.includes('CE')) { // CE should occur first
            return 1;
        }
        // same type of options
        let a_symbol = ascrip.slice(0, -2);
        let b_symbol = bscrip.slice(0, -2);
        if (a_symbol > b_symbol) {
            return -1;
        }
        return 1;
    }
    getOrders() {
        console.log('app getting Orders');
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'zerodha') {
            if (this.ordersSubscription) {
                this.ordersSubscription.unsubscribe();
            }
            this.ordersSubscription = this.zerodhaService.getOrders().subscribe((res) => {
                console.log('zerodha getOrders response', res);
                this.mapOrders(res);
                this.ordersSubscription.unsubscribe();
                // AppConstants.requestStatusEvent$.next({'status': 'success', 'message': 'Orders Fetched'});
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.miscEvent$.next('ordersReceived');
            }, error => {
                console.log('zerodha getOrder error', error);
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next({ 'status': 'danger', 'message': 'Orders Fetch Failed' });
            });
        }
        else {
            this.appService.getOrders(this.access_token).subscribe((res) => {
                console.log('app getOrders', res);
                if (res) {
                    this.lastOrdersUpdateTime = new Date().toLocaleTimeString();
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(res);
                    this.mapOrders(res);
                }
            }, error => {
                console.log('app getOrders error', error);
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(error.error.message + ', ' + error.message);
            });
        }
    }
    sortOrders() {
        this.orders.sort((a, b) => {
            // -1 means a should come before b
            // 1 means a should come after b
            return a['time'] > b['time'] ? -1 : a['time'] < b['time'] ? 1 : 0;
        });
    }
    mapOrders(res) {
        this.orders = [];
        let anyPending = false;
        let earlierCompleteOrders = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.completeOrders;
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.completeOrders = 0;
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'zerodha') {
            let arr = res.data;
            // states:
            /*
            CANCELLED
            CANCEL PENDING
            MODIFIED
            MODIFY PENDING
            MODIFY VALIDATION PENDING
            TRIGGER PENDING
            OPEN PENDING
            VALIDATION PENDING
            PUT ORDER REQ RECEIVED
            */
            arr.forEach(element => {
                let o = new _common_models__WEBPACK_IMPORTED_MODULE_1__.ZerodhaOrder();
                o.addToOrders = false;
                o.guid = element.guid;
                o.id = element.order_id;
                o.time = element.order_timestamp.split(' ')[1];
                let symbol = element.tradingsymbol;
                let parsed = this.mapService.parseSymbol(symbol);
                o.instru = parsed.instru;
                o.scrip = parsed.strike + parsed.type;
                let fromMasters = this.zerodhaService.findInMastersByToken(element.instrument_token);
                if (fromMasters && fromMasters.expiry) {
                    o.expiry = fromMasters.expiry;
                }
                o.qty = element.quantity;
                if (element.transaction_type === 'SELL') {
                    o.qty = -o.qty;
                }
                o.triggerPrice = element.trigger_price;
                if (o.triggerPrice) {
                    o.tradedPrice = element.price;
                }
                else {
                    o.tradedPrice = /* element.price != 0 ? element.price : */ element.average_price;
                }
                o.status = element.status;
                if (o.status === 'COMPLETE') {
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.completeOrders += 1;
                }
                if (o.status.includes('PENDING') && o.status !== 'TRIGGER PENDING') {
                    anyPending = true;
                }
                o.message = element.status_message;
                o.tradingsymbol = element.tradingsymbol;
                if (element.tags) {
                    o.tags = '';
                    element.tags.forEach(e => {
                        o.tags += e + ',';
                    });
                    o.tags = o.tags.replace(/,\s*$/, '');
                }
                else {
                    o.tags = '';
                }
                this.orders.push(o);
            });
            this.sortOrders();
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.orders = this.orders;
        }
        this.completeOrders = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.completeOrders;
        if (earlierCompleteOrders + _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.placedOrders > this.completeOrders) {
            // AppConstants.requestStatusEvent$.next({'status': 'warning', 'message': 'Orders mismatch. Refetching...'});
        }
        else {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.placedOrders = 0;
        }
        if (anyPending) {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next({ 'status': 'warning', 'message': 'Order Pending. Refetching...' });
            setTimeout(() => {
                this.refreshAll();
            }, 2000);
        }
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'fyers') {
            if (res.orderBook instanceof Array) {
                res.orderBook.forEach(order => {
                    let o = new _common_models__WEBPACK_IMPORTED_MODULE_1__.Order();
                    o.id = order.id;
                    o.scrip = order.symbol;
                    o.qty = order.qty;
                    o.status = order.status;
                    o.message = order.message;
                    o.type = order.type;
                    o.limit = order.limitPrice;
                    o.stop = order.stopPrice;
                    o.tradedPrice = order.tradedPrice;
                    o.side = order.side;
                    o.orderDateTime = order.orderDateTime;
                    this.orders.push(o);
                });
            }
        }
    }
    getCMP() {
        return 0.0;
    }
    getOrderStatus(status) {
        if (status === 1) {
            return 'Cancelled';
        }
        else if (status === 2) {
            return 'Filled';
        }
        else if (status === 3) {
            return 'Unknown';
        }
        else if (status === 4) {
            return 'Transit';
        }
        else if (status === 5) {
            return 'Rejected';
        }
        else if (status === 6) {
            return 'Pending';
        }
    }
    getOrderType(type) {
        if (type === 1) {
            return 'Limit';
        }
        else if (type === 2) {
            return 'Market';
        }
        else if (type === 3) {
            return 'SL-M';
        }
        else if (type === 4) {
            return 'SL';
        }
    }
    newOrder(side) {
        let symbol = 'NSE:' + this.newexpiry + this.newstrike + this.newoption;
        this.appService.placeOrder(this.access_token, symbol, this.newqty, this.newOrderType, side, this.newProductType, this.newlimit, this.newstop)
            .subscribe((res) => {
            console.log('app newOrder', res);
            this.refreshAll();
            if (res) {
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(res);
            }
        }, error => {
            console.log('app newOrder error', error);
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(error.error.message + ', ' + error.message);
            this.refreshAll();
        });
    }
    resetNewOrder() {
        this.newexpiry = 'NIFTY20618';
        this.newstrike = 10000;
        this.newoption = 'CE';
        this.newqty = 50;
        this.newblock = 0;
        this.newOrderType = 2;
        this.newProductType = 'INTRADAY';
        this.newlimit = 0;
        this.newstop = 0;
    }
    exitSelected() {
        if (this.positions) {
            if (confirm('Exit Selected?')) {
                this.positions.forEach(pos => {
                    if (pos.includeInSum1 || pos.includeInSum2 || pos.includeInSum3 || pos.includeInSum4) {
                        this.exitPosition(pos, true);
                    }
                });
            }
        }
    }
    exitPosition(pos, isExitSelected = false) {
        let qty = Number((document.getElementById('pos-qty-' + pos.id)).value);
        /* let limit = ((document.getElementById('pos-limit-' + pos.id)) as HTMLInputElement).value; */
        if (!qty) {
            qty = Math.abs(pos.netQty);
        }
        let buysell = 0;
        if (pos.netQty > 0) {
            buysell = -1;
        }
        else if (pos.netQty < 0) {
            buysell = 1;
        }
        let orderType = 2; // MARKET
        console.log('placing order: ', pos.scrip, qty, orderType, buysell, pos.type, 0);
        let user_confirm = isExitSelected;
        if (isExitSelected === false) {
            user_confirm = confirm('Exit ' + qty + ' Qty with ' + (buysell === -1 ? 'Sell order' : 'Buy order') + ' Sure?');
        }
        if (user_confirm) {
            this.appService.placeOrder(this.access_token, pos.scrip, qty, orderType, buysell, pos.type, 0, 0)
                .subscribe((res) => {
                console.log('app exitPosition', res);
                this.refreshAll();
                if (res) {
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(res);
                    this.appService.playAudio('success');
                }
            }, error => {
                console.log('app exitPosition error', error);
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(error.error.message + ', ' + error.message);
                this.refreshAll();
                this.appService.playAudio('error');
            });
        }
    }
    refreshAll() {
        // this.getFunds();
        this.getPositions();
        this.getOrders();
    }
    addToStrategyBuilder(oc, type) {
        this.appService.payOffEvent$.next({ symbol: oc.symbol + type, ltp: this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), oc.strike, type), qty: this.qty_default });
    }
    addToChart(oc, type) {
        this.appService.chartEvent$.next({ symbol: oc.symbol + type, type: type });
    }
    getQtyOfStrikeInStrategy(strike) {
        let curr_positions_trades = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.curr_positions_trades;
        if (curr_positions_trades) {
            for (let i = 0; i < curr_positions_trades.length; i++) {
                let element = curr_positions_trades[i];
                /* {
                  qty: 50,
                  scrip: '11150CE',
                  expiry: '01OCT2020',
                  entry: 50,
                  exit: 0,
                }, */
                let ocDate = new Date(this.oc_year, this.oc_month - 1, this.oc_date);
                let strikeExpiry = new Date(element.expiry);
                if (ocDate.getDate() === strikeExpiry.getDate() && element.scrip === strike && element.exit === 0) {
                    return element.qty;
                }
            }
            return null;
        }
    }
    getCostOfStrikeInStrategy(strike) {
        let curr_positions_trades = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.curr_positions_trades;
        if (curr_positions_trades) {
            for (let i = 0; i < curr_positions_trades.length; i++) {
                let element = curr_positions_trades[i];
                /* {
                  qty: 50,
                  scrip: '11150CE',
                  expiry: '01OCT2020',
                  entry: 50,
                  exit: 0,
                }, */
                let ocDate = new Date(this.oc_year, this.oc_month - 1, this.oc_date);
                let strikeExpiry = new Date(element.expiry);
                if (ocDate.getDate() === strikeExpiry.getDate() && element.scrip === strike && element.exit === 0) {
                    return element.entry;
                }
            }
            return null;
        }
    }
    isStrikeInCurrStrategy(strike) {
        let curr_positions_trades = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.curr_positions_trades;
        if (curr_positions_trades) {
            for (let i = 0; i < curr_positions_trades.length; i++) {
                let element = curr_positions_trades[i];
                /* {
                  qty: 50,
                  scrip: '11150CE',
                  expiry: '01OCT2020',
                  entry: 50,
                  exit: 0,
                }, */
                let ocDate = new Date(this.oc_year, this.oc_month - 1, this.oc_date);
                let strikeExpiry = new Date(element.expiry);
                if (element.exit === 0 && ocDate.getDate() === strikeExpiry.getDate() && element.scrip === strike) {
                    return true;
                }
            }
            return false;
        }
    }
    ocOrder(buysell, optionType, oc) {
        let symbol = 'NSE:' + oc.symbol + optionType;
        let strike = oc.strike;
        let productType = this.oc_product_type;
        let limit;
        console.log('ocOrder qty: ' + 'oc-qty-' + optionType + '-' + oc.symbol);
        let qty = Number(document.getElementById('oc-qty-' + optionType + '-' + oc.symbol).value);
        limit = document.getElementById('oc-limit-' + optionType + '-' + oc.symbol).value;
        /* let block = (document.getElementById('oc-block-' + optionType + '-' + oc.symbol) as HTMLInputElement).value; */
        let orderType = 2; // MARKET
        if (limit) {
            orderType = 1; // LIMIT
        }
        else {
            limit = 0;
        }
        console.log('placing order: ', symbol, qty, (orderType === 2 ? 'Market' : 'Limit'), buysell, productType, limit);
        if (true /* confirm(qty + ' Qty, ' + limit + ' Limit, ' + (orderType === 2 ? 'Market' : 'Limit') + ' order ' + 'Sure?') */) {
            this.appService.placeOrder(this.access_token, symbol, qty, orderType, buysell, productType, limit, 0)
                .subscribe((res) => {
                console.log('app ocOrder', res);
                this.refreshAll();
                if (res) {
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(symbol + ' ' + qty + ' ' + (orderType === 2 ? 'Market' : 'Limit') + ' ' + res);
                    // Order submitted successfully. Your Order Ref. No.220091778602
                    this.appService.playAudio('success');
                }
            }, error => {
                console.log('app ocOrder error', error);
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next(error.error.message + ', ' + error.message);
                this.refreshAll();
                this.appService.playAudio('error');
            });
        }
    }
    isAnyOpenPosition() {
        let curr_positions_trades = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.curr_positions_trades;
        if (curr_positions_trades) {
            for (let i = 0; i < curr_positions_trades.length; i++) {
                let element = curr_positions_trades[i];
                /* {
                  qty: 50,
                  scrip: '11150CE',
                  expiry: '01OCT2020',
                  entry: 50,
                  exit: 0,
                }, */
                if (element.exit === 0) {
                    return true;
                }
            }
        }
        return false;
    }
    autoSuggest() {
        this.findInitialPositions();
        this.checkAdjustments();
    }
    findInitialPositions() {
        this.suggestions = [];
        if (!this.isAnyOpenPosition()) {
            for (let index = this.oc_range_lower; index <= this.oc_range_higher; index += this.oc_range_multiple) {
                //this.oc_strikes.push({symbol: this.oc_instru + this.getExpiry() + index, strike: index, ltp: 0, delta: 0 }); // symbol: NIFTY2061810000 NIFTY20JUN10000
                // let symbol = this.oc_instru + this.getExpiry() + index;
                let ltp = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), index, 'CE');
                if (ltp >= 16 && ltp <= 28) {
                    let delta = this.getGreeks(index, 'CE')['delta'];
                    if (delta > 0 && Math.abs(delta) < 1) { // on 0DTE, delta is not calculated correctly
                        //console.log(index, ltp, delta);
                        for (let index1 = this.oc_range_lower; index1 <= this.oc_range_higher; index1 += this.oc_range_multiple) {
                            // let symbol1 = this.oc_instru + this.getExpiry() + index1;
                            let delta1 = this.getGreeks(index1, 'PE')['delta'];
                            if (Math.abs(delta + delta1) <= 0.025) {
                                let ltp1 = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), index1, 'PE');
                                if (ltp1) {
                                    this.suggestions.push({ strikeCE: index, deltaCE: delta, ltpCE: ltp, strikePE: index1, deltaPE: delta1, ltpPE: ltp1 });
                                }
                            }
                        }
                    }
                }
            }
            // console.log(this.suggestions);
        }
    }
    checkAdjustments() {
        let curr_positions_trades = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.curr_positions_trades;
        let ceDelta = 0;
        let cePremium = 0;
        let ceQty = 0;
        let peDelta = 0;
        let pePremium = 0;
        let peQty = 0;
        this.adjust_sugg = [];
        this.combined_premium = 0;
        if (curr_positions_trades) {
            for (let i = 0; i < curr_positions_trades.length; i++) {
                let element = curr_positions_trades[i];
                /* {
                  qty: 50,
                  scrip: '11150CE',
                  expiry: '01OCT2020',
                  entry: 50,
                  exit: 0,
                }, */
                let ocDate = new Date(this.oc_year, this.oc_month - 1, this.oc_date);
                let strikeExpiry = new Date(element.expiry);
                if (element.exit === 0 && element.qty < 0) { // calculating delta and premiums of only sold positions
                    let type = '';
                    if (element.scrip.includes('CE')) {
                        type = 'CE';
                    }
                    if (element.scrip.includes('PE')) {
                        type = 'PE';
                    }
                    let index = element.scrip.slice(0, -2);
                    // let symbol = this.oc_instru + this.getExpiry() + index;
                    let delta = this.getGreeks(index, type)['delta'] * element.qty;
                    let ltp = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), index, type) * element.qty;
                    if (type === 'CE') {
                        cePremium += ltp;
                        ceDelta += delta;
                        ceQty += element.qty;
                    }
                    else if (type === 'PE') {
                        pePremium += ltp;
                        peDelta += delta;
                        peQty += element.qty;
                    }
                }
            }
            if (cePremium !== 0 && pePremium !== 0) {
                cePremium = cePremium / ceQty;
                pePremium = pePremium / peQty;
                this.combined_premium = cePremium + pePremium;
                this.combined_premium = (Math.round((this.combined_premium + 0.00001) * 100) / 100);
                if (this.combined_SL && this.combined_premium >= this.combined_SL) {
                    this.appService.playAudio('warn');
                }
            }
            if (ceDelta !== 0 && peDelta !== 0 && cePremium && pePremium) {
                ceDelta = ceDelta / ceQty;
                peDelta = peDelta / peQty;
                if (Math.abs(ceDelta + peDelta) > 0.04) {
                    // console.log('mismatch');
                    this.roll('CE', peDelta);
                    this.roll('PE', ceDelta);
                }
                // console.log(ceDelta, peDelta, cePremium, pePremium);
            }
        }
    }
    roll(type, delta) {
        for (let index1 = this.oc_range_lower; index1 <= this.oc_range_higher; index1 += this.oc_range_multiple) {
            let symbol1 = this.oc_instru + this.mapService.getExpiry(new Date(this.oc_year, this.oc_month - 1, this.oc_date), this.oc_instru) + index1;
            let delta1 = this.getGreeks(index1, type)['delta'];
            ;
            if (Math.abs(delta + delta1) <= 0.025) {
                let ltp1 = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), index1, type);
                if (ltp1) {
                    this.adjust_sugg.push({ action: 'Adjust ' + type, strike: index1 + type, ltp: ltp1 });
                }
            }
        }
    }
    sortTableColumn(colName) {
        console.log('sort');
        this.holdings.sort((a, b) => {
            // console.log(a['scrip'], b['scrip']);
            if (a['scrip'] === 'NIFTYBEES') {
                return -1;
            }
            if (b['scrip'] === 'NIFTYBEES') {
                return 1;
            }
            return a[colName] > b[colName] ? -1 : a[colName] < b[colName] ? 1 : 0;
            // 1 means b before a
            // -1 means a before b
        });
    }
    fetchStocks() {
        this.holdingsService.fetchStocksData();
    }
    loadHoldings() {
        let r = this.holdingsService.loadHoldings();
        this.portfolio_return = r['portfolio_return'];
        this.holdings = r['holdings'];
        this.total_inv = r['total_inv'];
        this.current_val = r['current_val'];
        console.log('stocks:', this.holdings);
    }
    backtestStocks() {
        this.holdingsService.backtestStocks();
    }
    exportBacktest() {
        this.holdingsService.exportBacktest();
    }
    isStockHolding(scrip) {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[scrip].avgp) {
            return true;
        }
        else {
            return false;
        }
    }
    updateOCRange() {
        this.oc_strikes = [];
        for (let index = this.oc_range_lower; index <= this.oc_range_higher; index += this.oc_range_multiple) {
            this.oc_strikes.push({ symbol: this.oc_instru + this.mapService.getExpiry(new Date(this.oc_year, this.oc_month - 1, this.oc_date), this.oc_instru) + index, strike: index, inCurrStrategyCE: false, inCurrStrategyPE: false, addCEToOrders: false, addPEToOrders: false, qtyInputCE: 200, qtyInputPE: 200,
                volumeCE: 0, volumePE: 0,
                deltaCE: 0, gammaCE: 0, vegaCE: 0, thetaCE: 0, deltaPE: 0, gammaPE: 0, vegaPE: 0, thetaPE: 0,
                ltpCE: 0, ltpPE: 0, qtyCE: 0, qtyPE: 0, costCE: 0, costPE: 0, inlineStrategyPnLCE: '', inlineStrategyPnLPE: '', isSpot: false, showNudge: false }); // symbol: NIFTY2061810000 NIFTY20JUN10000
        }
        if (!_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isSimulatedStrategy) {
            let sub = [];
            this.oc_strikes.forEach(oc => {
                sub.push(this.mapService.getSubscriptionObject(oc.strike + 'CE', this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date).toDateString()));
                sub.push(this.mapService.getSubscriptionObject(oc.strike + 'PE', this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date).toDateString()));
            });
            console.log('updateOCRange Subscriptions: ' + sub);
            this.appService.sendSubscriptions(sub);
        }
    }
    updateOCValues() {
        if (this.oc_strikes && this.oc_strikes.length > 0) {
            this.oc_strikes.forEach(oc => {
                oc.inCurrStrategyCE = this.isStrikeInCurrStrategy(oc.strike + 'CE');
                oc.inCurrStrategyPE = this.isStrikeInCurrStrategy(oc.strike + 'PE');
                oc.volumeCE = this.getVolume(oc.symbol + 'CE');
                oc.volumePE = this.getVolume(oc.symbol + 'PE');
                //oc.deltaCE = this.getDelta(oc.symbol, oc.strike, 'CE');
                //oc.deltaPE = this.getDelta(oc.symbol, oc.strike, 'PE');
                oc.ltpCE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), oc.strike, 'CE');
                oc.ltpPE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), oc.strike, 'PE');
                oc.qtyCE = this.getQtyOfStrikeInStrategy(oc.strike + 'CE');
                oc.qtyPE = this.getQtyOfStrikeInStrategy(oc.strike + 'PE');
                oc.costCE = this.getCostOfStrikeInStrategy(oc.strike + 'CE');
                oc.costPE = this.getCostOfStrikeInStrategy(oc.strike + 'PE');
                oc.isSpot = this.isSpotStrike(oc.strike);
                oc.showNudge = this.showOILimit(this.oc_instru, oc.strike);
                if (this.show_greeks) {
                    let greeksCE = this.getGreeks(oc.strike, 'CE');
                    oc.deltaCE = greeksCE['delta'];
                    oc.gammaCE = greeksCE['gamma'];
                    oc.vegaCE = greeksCE['vega'];
                    oc.thetaCE = greeksCE['theta'];
                    let greeksPE = this.getGreeks(oc.strike, 'PE');
                    oc.deltaPE = greeksPE['delta'];
                    oc.gammaPE = greeksPE['gamma'];
                    oc.vegaPE = greeksPE['vega'];
                    oc.thetaPE = greeksPE['theta'];
                }
            });
        }
    }
    showOILimit(instru, strike) {
        if (instru === 'NIFTY' && _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.nfCEOILimit && _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.nfPEOILimit) {
            if (strike > _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.nfCEOILimit || strike < _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.nfPEOILimit) {
                return true;
            }
        }
        if (instru === 'BANKNIFTY' && _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.bnfCEOILimit && _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.bnfPEOILimit) {
            if (strike > _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.bnfCEOILimit || strike < _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.bnfPEOILimit) {
                return true;
            }
        }
        return false;
    }
    refreshInlineStategyPnL() {
        if (this.oc_strikes && this.oc_strikes.length > 0) {
            this.oc_strikes.forEach(oc => {
                oc.inCurrStrategyCE = this.isStrikeInCurrStrategy(oc.strike + 'CE');
                oc.inCurrStrategyPE = this.isStrikeInCurrStrategy(oc.strike + 'PE');
                oc.volumeCE = this.getVolume(oc.symbol + 'CE');
                oc.volumePE = this.getVolume(oc.symbol + 'PE');
                oc.deltaCE = this.getGreeks(oc.strike, 'CE')['delta'];
                oc.deltaPE = this.getGreeks(oc.strike, 'PE')['delta'];
                oc.ltpCE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), oc.strike, 'CE');
                oc.ltpPE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), oc.strike, 'PE');
                oc.qtyCE = this.getQtyOfStrikeInStrategy(oc.strike + 'CE');
                oc.qtyPE = this.getQtyOfStrikeInStrategy(oc.strike + 'PE');
                oc.costCE = this.getCostOfStrikeInStrategy(oc.strike + 'CE');
                oc.costPE = this.getCostOfStrikeInStrategy(oc.strike + 'PE');
                oc.isSpot = this.isSpotStrike(oc.strike);
                let currLtpCE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), oc.strike, 'CE');
                let currLtpPE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), oc.strike, 'PE');
                //let leg1symbolCE = this.oc_instru + this.getExpiry() + (oc.strike + this.diff_strategy_pts) + 'CE';
                //let leg1symbolPE = this.oc_instru + this.getExpiry() + (oc.strike - this.diff_strategy_pts) + 'PE';
                let leg1LTPCE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), (oc.strike + this.diff_strategy_pts), 'CE');
                let leg1LTPPE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), (oc.strike - this.diff_strategy_pts), 'PE');
                let leg2symbolCE = this.oc_instru + this.mapService.getExpiry(new Date(this.oc_year, this.oc_month - 1, this.oc_date), this.oc_instru) + (oc.strike - this.diff_strategy_pts) + 'CE';
                let leg2symbolPE = this.oc_instru + this.mapService.getExpiry(new Date(this.oc_year, this.oc_month - 1, this.oc_date), this.oc_instru) + (oc.strike + this.diff_strategy_pts) + 'PE';
                let leg2LTPCE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), (oc.strike - this.diff_strategy_pts), 'CE');
                let leg2LTPPE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), (oc.strike + this.diff_strategy_pts), 'PE');
                let ds_currPremiumCE = (currLtpCE * this.qty_strategy_pts) + (leg1LTPCE * -this.qty_strategy_pts);
                let ds_currPremiumPE = (currLtpPE * this.qty_strategy_pts) + (leg1LTPPE * -this.qty_strategy_pts);
                let ds_maxLossCE = Math.round(ds_currPremiumCE);
                let ds_maxLossPE = Math.round(ds_currPremiumPE);
                let ds_maxProfitCE = Math.round((this.diff_strategy_pts * this.qty_strategy_pts) - ds_maxLossCE);
                let ds_maxProfitPE = Math.round((this.diff_strategy_pts * this.qty_strategy_pts) - ds_maxLossPE);
                let bfly_currPremiumCE = (currLtpCE * -this.qty_strategy_pts) + (leg1LTPCE * this.qty_strategy_pts / 2) + (leg2LTPCE * this.qty_strategy_pts / 2);
                let bfly_currPremiumPE = (currLtpPE * -this.qty_strategy_pts) + (leg1LTPPE * this.qty_strategy_pts / 2) + (leg2LTPPE * this.qty_strategy_pts / 2);
                let bfly_maxLossCE = Math.round(bfly_currPremiumCE);
                let bfly_maxLossPE = Math.round(bfly_currPremiumPE);
                let bfly_maxProfitCE = Math.round((this.diff_strategy_pts * this.qty_strategy_pts / 2) - bfly_maxLossCE);
                let bfly_maxProfitPE = Math.round((this.diff_strategy_pts * this.qty_strategy_pts / 2) - bfly_maxLossPE);
                oc.inlineStrategyPnLCE = 'DS: ' + ds_maxProfitCE + ' , ' + ds_maxLossCE + '\nBfly: ' + bfly_maxProfitCE + ' , ' + bfly_maxLossCE;
                oc.inlineStrategyPnLPE = 'DS: ' + ds_maxProfitPE + ' , ' + ds_maxLossPE + '\nBfly: ' + bfly_maxProfitPE + ' , ' + bfly_maxLossPE;
                //console.log('oc inline1', oc.strike, currLtpCE, leg1symbolCE, leg1LTPCE, ds_currPremiumCE, ds_maxProfitCE);
                //console.log('oc inline2', oc.inlineStrategyPnLCE, oc.inlineStrategyPnLPE);
                /* this.oc_strikes.forEach(element => {
                  if (element.addCEToOrders) {
                    let curr_premium = element.ltpCE * element.qtyInputCE;
                    this.maxLoss += curr_premium;
                    if (Math.abs(element.qtyInputCE) < qty) {
                      qty = Math.abs(element.qtyInputCE);
                    }
                  }
                  if (element.addPEToOrders) {
                    let curr_premium = element.ltpPE * element.qtyInputPE;
                    this.maxLoss += curr_premium;
                    if (Math.abs(element.qtyInputPE) < qty) {
                      qty = Math.abs(element.qtyInputPE);
                    }
                  }
                });
          
                let maxDiff = -1;
                for (let i = 0; i < strikes.length - 1; i++) {
                  let diff = strikes[i] - strikes[i+1];
                  if (diff > maxDiff) {
                    maxDiff = diff;
                  }
                }
          
                this.maxProfit = (maxDiff * qty) - this.maxLoss;
          
                this.profitLossRatio = this.maxProfit / this.maxLoss;
                this.profitLossRatio = (Math.round((this.profitLossRatio + 0.00001) * 100) / 100); */
            });
        }
    }
    clearOC() {
        this.oc_strikes = [];
    }
    getSpotValue() {
        let underlying = '';
        if (this.oc_instru === 'NIFTY') {
            underlying = 'NIFTY50';
        }
        else if (this.oc_instru === 'BANKNIFTY') {
            underlying = 'BANKNIFTY';
        }
        else if (this.oc_instru === 'FINNIFTY') {
            underlying = 'FINNIFTY';
        }
        else if (this.oc_instru === 'MIDCPNIFTY') {
            underlying = 'MIDCPNIFTY';
        }
        else if (this.oc_instru === 'SENSEX') {
            underlying = 'SENSEX';
        }
        else if (this.oc_instru === 'BANKEX') {
            underlying = 'BANKEX';
        }
        else if (this.oc_instru === 'USDINR') {
            underlying = 'USDINR';
        }
        let e = this.mapService.getScripLTP(null, null, underlying, null);
        return e;
    }
    updateSpotStrike() {
        let underlying = '';
        if (this.oc_instru === 'NIFTY') {
            underlying = 'NIFTY50';
        }
        else if (this.oc_instru === 'BANKNIFTY') {
            underlying = 'BANKNIFTY';
        }
        else if (this.oc_instru === 'FINNIFTY') {
            underlying = 'FINNIFTY';
        }
        else if (this.oc_instru === 'MIDCPNIFTY') {
            underlying = 'MIDCPNIFTY';
        }
        else if (this.oc_instru === 'SENSEX') {
            underlying = 'SENSEX';
        }
        else if (this.oc_instru === 'BANKEX') {
            underlying = 'BANKEX';
        }
        else if (this.oc_instru === 'USDINR') {
            underlying = 'USDINR';
        }
        let e = this.mapService.getScripLTP(null, null, underlying, null);
        let spotStrike = (Math.round(e / this.oc_range_multiple) * this.oc_range_multiple);
        /* let symbol = this.oc_instru + this.getExpiry() + spotStrike;
    
        let ce_premium = this.getLtp(symbol + 'CE');
        let pe_premium = this.getLtp(symbol + 'PE');
        let targetStrike = ce_premium - pe_premium + spotStrike;
        targetStrike = (Math.round(targetStrike / this.oc_range_multiple) * this.oc_range_multiple); */
        // targetStrike:72.75 74.25 0.0975 0.15 74.25
        // console.log('oc targetStrike:' + symbol + ' ' + targetStrike + ' ' + ce_premium + ' ' + pe_premium + ' ' + spotStrike);
        this.ocSpotStrike = spotStrike; // targetStrike;
    }
    isSpotStrike(strike) {
        /* let underlying = '';
        if (this.oc_instru === 'NIFTY') {
          underlying = 'NIFTY50';
        } else if (this.oc_instru === 'BANKNIFTY') {
          underlying = 'BANKNIFTY';
        } else if (this.oc_instru === 'USDINR') {
          underlying = 'USDINR';
        }
        let e = this.getLtp(underlying);
        if ((Math.round(e / this.oc_range_multiple) * this.oc_range_multiple) === strike) {
          return true;
        }
        return false; */
        if (strike === this.ocSpotStrike) {
            return true;
        }
        return false;
    }
    /*   getPosLTP(position: Position) {
        let symbol = position.scrip;
        symbol = symbol.replace('NSE:', '');
        position.cmp = this.getLtp(symbol);
        return position.cmp;
      } */
    getPosPnL(position) {
        // return position.realizedProfit;
        if (position.cmp) {
            let pnl = null;
            let realizedProfit = 0;
            if (position.realizedProfit) {
                realizedProfit = position.realizedProfit;
            }
            if (position.netQty === 0) {
                return position.pnl;
            }
            if (position.netQty > 0) {
                let p = (position.cmp - position.buyAvg) * position.netQty;
                pnl = realizedProfit + p;
            }
            else if (position.netQty < 0) {
                let p = (position.sellAvg - position.cmp) * -position.netQty;
                pnl = realizedProfit + p;
            }
            if (position.scrip.includes('USDINR')) {
                pnl *= 1000;
            }
            position.pnl = (Math.round((pnl + 0.00001) * 100) / 100);
            return position.pnl;
        }
        else {
            return position.pnl;
        }
    }
    getAtp(strike) {
        return this.mapService.getAtp(strike);
    }
    getVolume(strike) {
        let volume = this.mapService.getVolume(strike);
        if (volume) {
            return volume.toLocaleString();
        }
        return volume;
    }
    getOI(strike) {
        this.mapService.getOI(strike);
    }
    getChgOI(strike) {
        this.mapService.getChgOI(strike);
    }
    connectWS() {
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode = this.ws_vendor;
        this.appService.connectWebsocket(this.ws_access_token);
    }
    addOrdersToStrategy() {
        let ord = [];
        this.orders.forEach(element => {
            if (element.addToOrders) {
                ord.push({ scrip: element.scrip, price: element.tradedPrice, qty: element.qty, expiry: element.expiry });
                // element.addToOrders = false;
            }
        });
        this.appService.payOffEvent$.next(ord);
    }
    addPlaceOrders() {
        let strikes = [];
        this.oc_strikes.forEach(element => {
            if (element.addCEToOrders) {
                strikes.push({ instru: this.oc_instru, strike: element.strike + 'CE' });
                element.addCEToOrders = false;
            }
            if (element.addPEToOrders) {
                strikes.push({ instru: this.oc_instru, strike: element.strike + 'PE' });
                element.addPEToOrders = false;
            }
        });
        this.appService.placeOrdersEvent$.next(strikes);
    }
    /* includeInStrangleFn(symbol) {
      if (this.stranglePositions.includes(symbol)) {
        this.stranglePositions = this.stranglePositions.filter(e => e !== symbol);
      } else {
        this.stranglePositions.push(symbol);
      }
    }
  
    includeInDebitSpreadFn(symbol) {
      if (this.debitSpreadPositions.includes(symbol)) {
        this.debitSpreadPositions = this.debitSpreadPositions.filter(e => e !== symbol);
      } else {
        this.debitSpreadPositions.push(symbol);
      }
    } */
    /*   getProfitForStrangle() {
        let pnl = 0.0;
        let lotsize = 0;
        if (this.oc_instru === 'NIFTY') {
          lotsize = 50;
        } else if (this.oc_instru === 'BANKNIFTY') {
          lotsize = 25;
        }  else if (this.oc_instru === 'FINNIFTY') {
          lotsize = 40;
        }else if (this.oc_instru === 'USDINR') {
          lotsize = 1000;
        }
    
        let credit = 0;
    
        this.stranglePositions.forEach(symbol => {
          let ltp = this.getLtp(symbol);
          credit += ltp;
          // console.log(symbol + ', ltp: ' + ltp);
          pnl += (ltp * lotsize);
        });
        credit = Math.round((credit + 0.00001) * 100) / 100; // round to 2 decimal places
        return credit + ' , ' + pnl;
      }
    
      getPnLForDebitSpread() {
        let profit = 0.0;
        let loss = 0.0;
        let lotsize = 0;
        let spread = 0;
        if (this.oc_instru === 'NIFTY') {
          lotsize = 50;
          spread = 50;
        } else if (this.oc_instru === 'BANKNIFTY') {
          lotsize = 25;
          spread = 100;
        } else if (this.oc_instru === 'FINNIFTY') {
          lotsize = 40;
          spread = 50;
        } else if (this.oc_instru === 'USDINR') {
          lotsize = 1000;
          spread = 0.25;
        }
        let pos = []
        this.debitSpreadPositions.forEach(symbol => {
          let ltp = this.getLtp(symbol);
          // console.log(symbol + ', ltp: ' + ltp);
          pos.push(ltp);
        });
        if (pos.length === 2) {
          let s1 = pos[0];
          let s2 = pos[1];
          let debit = Math.abs(s1 - s2);
          loss = debit * lotsize;
          profit = (spread - debit) * lotsize;
          /*
          Net Debit = Premium Paid for lower strike – Premium Received for higher strike
          Bull Call Spread Max loss = Net Debit of the Strategy
          Bull Call Spread Max Profit = Spread – Net Debit
          */
    /*     }
    
        //return [profit, loss];
     } */
    calcMaxProfitLoss() {
        let strikes = [];
        this.maxProfit = 0;
        this.maxLoss = 0;
        let qty = 1000000;
        this.oc_strikes.forEach(element => {
            if (element.addCEToOrders) {
                strikes.push(element.strike);
            }
            if (element.addPEToOrders) {
                strikes.push(element.strike);
            }
        });
        strikes.sort((a, b) => b - a);
        if (strikes.length === 2 || strikes.length === 3) { // Butterfly
            this.oc_strikes.forEach(element => {
                if (element.addCEToOrders) {
                    let curr_premium = element.ltpCE * element.qtyInputCE;
                    this.maxLoss += curr_premium;
                    if (Math.abs(element.qtyInputCE) < qty) {
                        qty = Math.abs(element.qtyInputCE);
                    }
                }
                if (element.addPEToOrders) {
                    let curr_premium = element.ltpPE * element.qtyInputPE;
                    this.maxLoss += curr_premium;
                    if (Math.abs(element.qtyInputPE) < qty) {
                        qty = Math.abs(element.qtyInputPE);
                    }
                }
            });
            let maxDiff = -1;
            for (let i = 0; i < strikes.length - 1; i++) {
                let diff = strikes[i] - strikes[i + 1];
                if (diff > maxDiff) {
                    maxDiff = diff;
                }
            }
            this.maxProfit = (maxDiff * qty) - this.maxLoss;
            this.profitLossRatio = this.maxProfit / this.maxLoss;
            this.profitLossRatio = (Math.round((this.profitLossRatio + 0.00001) * 100) / 100);
        }
        if (strikes.length === 4) { // IronFly
            this.oc_strikes.forEach(element => {
                if (element.addCEToOrders) {
                    let curr_premium = element.ltpCE * element.qtyInputCE;
                    this.maxProfit += curr_premium;
                    if (Math.abs(element.qtyInputCE) < qty) {
                        qty = Math.abs(element.qtyInputCE);
                    }
                }
                if (element.addPEToOrders) {
                    let curr_premium = element.ltpPE * element.qtyInputPE;
                    this.maxProfit += curr_premium;
                    if (Math.abs(element.qtyInputPE) < qty) {
                        qty = Math.abs(element.qtyInputPE);
                    }
                }
            });
            let maxDiff = -1;
            for (let i = 0; i < strikes.length - 1; i++) {
                let diff = strikes[i] - strikes[i + 1];
                if (diff > maxDiff) {
                    maxDiff = diff;
                }
            }
            console.log('strikes, maxdiff, qty', strikes, maxDiff, qty);
            this.maxProfit = Math.abs(this.maxProfit);
            this.maxLoss = (maxDiff * qty) - this.maxProfit;
            this.profitLossRatio = this.maxProfit / this.maxLoss;
            this.profitLossRatio = (Math.round((this.profitLossRatio + 0.00001) * 100) / 100);
        }
    }
    startMonitoringGreeks() {
        let startDate = new Date();
        startDate.setHours(19, 37, 0);
        this.greeksMonitoringIntervalInitial = setInterval(() => {
            let currDate = new Date();
            console.log('Finding greeks start time ', startDate, currDate);
            if (currDate >= startDate) {
                console.log('Found start time ', startDate);
                clearInterval(this.greeksMonitoringIntervalInitial);
                this.nextGreeksTime = currDate;
                this.nextGreeksTime.setMinutes(currDate.getMinutes() + 1, 0);
                this.setInitialGreeksData();
                this.recordGreeks();
            }
        }, 1000);
    }
    setInitialGreeksData() {
        let instru = 'NIFTY';
        let range_multiple = 50;
        let spot = this.mapService.getScripLTP(null, null, 'NIFTY50', null);
        let spotStrike = (Math.round(spot / range_multiple) * range_multiple);
        let symbol = instru + this.mapService.getExpiry(new Date(this.oc_year, this.oc_month - 1, this.oc_date), instru) + spotStrike;
        let greeksCE = this.getGreeks(spotStrike, 'CE');
        this.initialGreeksData.set('CE', greeksCE);
        let greeksPE = this.getGreeks(spotStrike, 'PE');
        this.initialGreeksData.set('PE', greeksPE);
        console.log('Initial greeks for ', spotStrike, this.initialGreeksData);
    }
    recordGreeks() {
        console.log('Recording greeks');
        this.greeksMonitoringIntervalInitial = setInterval(() => {
            let currDate = new Date();
            //console.log('Next greeks start time ', this.nextGreeksTime, currDate);
            if (currDate >= this.nextGreeksTime) {
                console.log('Found next time ', this.nextGreeksTime);
                this.nextGreeksTime.setMinutes(this.nextGreeksTime.getMinutes() + 1, 0);
                this.getGreeksSum();
            }
        }, 1000);
    }
    getGreeksSum() {
        let d = new Date();
        let dformat = [d.getHours(), d.getMinutes()].join(':');
        let instru = 'NIFTY';
        let range_multiple = 50;
        let spot = this.mapService.getScripLTP(null, null, 'NIFTY50', null);
        let spotStrike = (Math.round(spot / range_multiple) * range_multiple);
        let range_higher = spotStrike + 500;
        let range_lower = spotStrike - 500;
        let vega_sum_ce = 0;
        let vega_sum_pe = 0;
        let delta_sum_ce = 0;
        let delta_sum_pe = 0;
        let theta_sum_ce = 0;
        let theta_sum_pe = 0;
        for (let index = range_higher; index >= spotStrike; index -= range_multiple) {
            let symbol = instru + this.mapService.getExpiry(new Date(this.oc_year, this.oc_month - 1, this.oc_date), instru) + index;
            let greeks = this.getGreeks(index, 'CE');
            let vega_diff = this.initialGreeksData.get('CE')['vega'] - greeks['vega'];
            vega_sum_ce += vega_diff;
            let delta_diff = this.initialGreeksData.get('CE')['delta'] - greeks['delta'];
            delta_sum_ce += delta_diff;
            let theta_diff = this.initialGreeksData.get('CE')['theta'] - greeks['theta'];
            theta_sum_ce += theta_diff;
        }
        for (let index = range_lower; index <= spotStrike; index += range_multiple) {
            let symbol = instru + this.mapService.getExpiry(new Date(this.oc_year, this.oc_month - 1, this.oc_date), instru) + index;
            let greeks = this.getGreeks(index, 'PE');
            let vega_diff = this.initialGreeksData.get('PE')['vega'] - greeks['vega'];
            vega_sum_pe += vega_diff;
            let delta_diff = this.initialGreeksData.get('PE')['delta'] - greeks['delta'];
            delta_sum_pe += delta_diff;
            let theta_diff = this.initialGreeksData.get('PE')['theta'] - greeks['theta'];
            theta_sum_pe += theta_diff;
        }
        let greeks_sum = {
            'CE': { 'delta': delta_sum_ce, 'gamma': 0, 'vega': vega_sum_ce, 'theta': theta_sum_ce },
            'PE': { 'delta': delta_sum_pe, 'gamma': 0, 'vega': vega_sum_pe, 'theta': theta_sum_pe },
        };
        this.greeksData.set(dformat, greeks_sum);
        console.log('greeksData', this.greeksData);
    }
}
AppComponent.ɵfac = function AppComponent_Factory(t) { return new (t || AppComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_angular_router__WEBPACK_IMPORTED_MODULE_14__.ActivatedRoute), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_app_service__WEBPACK_IMPORTED_MODULE_2__.AppService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_common_map_service__WEBPACK_IMPORTED_MODULE_3__.MapService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_common_websocket_service__WEBPACK_IMPORTED_MODULE_4__.WebsocketService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_chart_chart_service__WEBPACK_IMPORTED_MODULE_5__.ChartService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_common_angel_service__WEBPACK_IMPORTED_MODULE_6__.AngelService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_common_angelwebsocket_service__WEBPACK_IMPORTED_MODULE_7__.AngelWebsocketService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_common_holdings_service__WEBPACK_IMPORTED_MODULE_8__.HoldingsService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_common_zerodha_service__WEBPACK_IMPORTED_MODULE_9__.ZerodhaService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_common_zerodha_websocket_service__WEBPACK_IMPORTED_MODULE_10__.ZerodhaWebsocketService), _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdirectiveInject"](_algo_algo_service__WEBPACK_IMPORTED_MODULE_11__.AlgoService)); };
AppComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵdefineComponent"]({ type: AppComponent, selectors: [["app-root"]], decls: 365, vars: 60, consts: [[1, "main-content"], [1, "alertMessage"], [4, "ngFor", "ngForOf"], [1, "top-content", "d-flex"], [1, "me-auto"], ["type", "button", 1, "btn", "btn-link", 3, "click"], ["type", "button", 1, "btn", "btn-light", "btn-sm", 3, "click"], ["type", "file", "name", "File Upload NSE OC", 2, "display", "none", 3, "change"], ["fileImportInputNSEOC", ""], [1, "confirmation-check", "form-check-inline", "mt-0"], ["type", "radio", "name", "ws_vendor", "value", "zerodha", "id", "zerodha_ws", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange"], ["for", "zerodha_ws", 1, "form-check-label"], ["type", "radio", "name", "ws_vendor", "value", "aliceblue", "id", "aliceblue_ws", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange"], ["for", "aliceblue_ws", 1, "form-check-label"], [4, "ngIf"], ["type", "file", "name", "File Upload Master Contract", 2, "display", "none", 3, "change"], ["fileImportInputExpiry", ""], ["type", "button", "class", "btn btn-link", 3, "click", 4, "ngIf"], [1, "confirmation-check", "form-check", "mt-2"], ["type", "radio", "name", "auth_radio", "value", "1", "id", "auth_select_1", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange", "change"], ["placeholder", "Authorization 1", 1, "form-control", "me-2", 2, "max-width", "1000px", "display", "inline-block", 3, "ngModel", "ngModelChange"], ["type", "radio", "name", "auth_radio", "value", "2", "id", "auth_select_2", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange", "change"], ["placeholder", "Authorization 2", 1, "form-control", "me-2", 2, "max-width", "1000px", "display", "inline-block", 3, "ngModel", "ngModelChange"], [1, "d-flex"], [1, ""], [1, "table", "table-sm", "table-bordered", "mb-0", 2, "width", "200px"], [2, "width", "50%"], [1, "ms-1"], [1, "form-check-inline", "mt-4"], ["type", "checkbox", "value", "", "name", "log_ws_feed", "id", "log_ws_feed", 1, "form-check-input", "me-2", 3, "ngModel", "ngModelChange", "change"], ["for", "log_ws_feed", 1, "form-check-label", "me-1"], [2, "margin-top", "0.5rem"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "refresh-btn", 3, "click"], [1, "flex-container"], [1, "positions_div"], [1, "table-title"], [1, "fw-bold"], [1, "ms-auto", "float-end"], [1, "form-check-inline"], ["for", "hide-positions", 1, "form-check-label", "me-1"], ["type", "checkbox", "value", "", "name", "hide-positions", "id", "hide-positions", 1, "form-check-input", "me-2", 3, "ngModel", "ngModelChange"], ["for", "hide-exited-positions", 1, "form-check-label", "me-1"], ["type", "checkbox", "value", "", "name", "hide-exited-ositions", "id", "hide-exited-positions", 1, "form-check-input", "me-2", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "refresh-btn", "me-1", 3, "click"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "refresh-btn", 3, "disabled", "click"], [1, "table", "table-sm", "table-bordered", "shadow", "text-center"], [1, "table-light"], ["scope", "col"], [1, "orderbook_div"], ["for", "hide-orders", 1, "form-check-label", "me-1"], ["type", "checkbox", "value", "", "id", "hide-orders", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "orders-update", 1, "form-check-label", "me-1"], ["type", "checkbox", "value", "", "id", "orders-updates", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "latest-ten", 1, "form-check-label", "me-1"], ["type", "checkbox", "value", "", "id", "latest-ten", 1, "form-check-input", 3, "ngModel", "change", "ngModelChange"], ["class", "algo-suggestions-main shadow-sm p-3 mb-5 bg-white", 4, "ngIf"], [2, "width", "50% !important"], [1, "option-chain"], [1, "new-input", "form-select", "form-select-sm", 3, "ngModel", "ngModelChange"], ["value", "NIFTY"], ["value", "BANKNIFTY"], ["value", "FINNIFTY"], ["value", "MIDCPNIFTY"], ["value", "SENSEX"], ["value", "USDINR"], ["id", "strategy-qty", "type", "number", "placeholder", "Qty Default", 1, "ms-2", "form-control", "form-control-sm", 2, "display", "inline", "width", "70px", 3, "ngModel", "ngModelChange"], [2, "display", "inline-block", "margin-left", "20px", "margin-right", "10px"], [1, "input-group", "input-group-sm", "new-input-prepend-expiry"], [1, "input-group-prepend"], [1, "input-group-text"], ["type", "number", 1, "form-control", 3, "ngModel", "ngModelChange"], [1, "input-group", "input-group-sm", "new-input-prepend-oc"], ["type", "number", "min", "0", "step", "50", 1, "form-control", 3, "ngModel", "ngModelChange"], ["type", "number", "min", "50", "step", "50", 1, "form-control", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", 3, "click"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "ms-1", 3, "click"], [1, "confirmation-check", "form-check-inline", "ms-2"], ["type", "checkbox", "value", "", "id", "show_greeks", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "show_greeks", 1, "form-check-label", "ms-1"], ["id", "strategypoints-qty", "type", "number", "placeholder", "Qty Points", 1, "me-1", "form-control", "form-control-sm", 2, "display", "inline", "width", "70px", 3, "ngModel", "ngModelChange"], ["id", "strategypoints-diff", "type", "number", "placeholder", "Diff Points", 1, "me-1", "form-control", "form-control-sm", 2, "display", "inline", "width", "70px", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "ms-1", "me-1", 3, "click"], [1, "table", "table-sm", "table-bordered", "shadow", "mb-0", "text-center"], [1, "text-center"], ["colspan", "4", "scope", "col"], ["scope", "col", 1, "oc-col-actions"], ["scope", "col", 1, "oc-col"], ["class", "oc-col", "scope", "col", 4, "ngIf"], ["scope", "col", 1, "text-center"], ["id", "accordionHistorical", 1, "accordion", "mb-2"], [1, "accordion-item"], ["id", "headingOne", 1, "accordion-header"], ["type", "button", "data-bs-toggle", "collapse", "data-bs-target", "#historicalSection", "aria-expanded", "false", "aria-controls", "historicalSection", 1, "accordion-button", "collapsed", "fw-bold"], ["id", "historicalSection", "aria-labelledby", "headingOne", "data-bs-parent", "#accordionHistorical", 1, "accordion-collapse", "collapse", "p-2"], [1, "historical_input", "mb-2"], ["for", "historical_append", 1, "historical_label"], ["name", "historical_append", "placeholder", "historical_append", 1, "me-2", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["for", "zerodha_auth", 1, "historical_label"], ["name", "zerodha_auth", "placeholder", "zerodha_auth", 1, "me-2", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["for", "zerodha_from_date", 1, "historical_label"], ["name", "zerodha_from_date", "placeholder", "zerodha_from_date", 1, "me-2", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["for", "zerodha_to_date", 1, "historical_label"], ["name", "zerodha_to_date", "placeholder", "zerodha_to_date", 1, "me-2", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["for", "zerodha_expiry_date", 1, "historical_label"], ["name", "zerodha_expiry_date", "placeholder", "zerodha_expiry_date", 1, "me-2", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], [1, "form-select", "form-select-sm", 3, "ngModel", "ngModelChange"], ["value", "CNXBAN"], ["value", "NIFFIN"], ["for", "historical_date", 1, "historical_label"], ["name", "historical_date", "placeholder", "historical_date", 1, "me-2", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["for", "historical_upper", 1, "historical_label"], ["name", "historical_upper", "type", "number", "placeholder", "historical_upper", 1, "me-2", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["for", "historical_lower", 1, "historical_label"], ["name", "historical_lower", "type", "number", "placeholder", "historical_lower", 1, "me-2", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["id", "accordionHoldings", 1, "accordion", "mb-2"], ["type", "button", "data-bs-toggle", "collapse", "data-bs-target", "#holdingsSection", "aria-expanded", "true", "aria-controls", "holdingsSection", 1, "accordion-button", "collapsed", "fw-bold"], ["id", "holdingsSection", "aria-labelledby", "headingOne", "data-bs-parent", "#accordionHoldings", 1, "accordion-collapse", "collapse", "p-2"], ["scope", "col", 1, "oc-col", 3, "click"], [3, "type", "closed"], [3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"], [1, "form-check-inline", "posCheckbox"], ["type", "checkbox", "value", "", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange"], [1, "algo-suggestions-main", "shadow-sm", "p-3", "mb-5", "bg-white"], [1, "me-2"], [1, "fw-bold", 3, "ngClass"], ["class", "suggest-positions", 4, "ngFor", "ngForOf"], [1, "ms-4", "me-3"], ["type", "number", "placeholder", "Combined SL", 1, "ms-2", "form-control", "form-control-sm", 2, "width", "70px", "display", "inline", 3, "ngModel", "ngModelChange"], [1, "suggest-positions"], [1, "positions-row-actions"], [1, "form-check-inline", "posCheckbox", "me-1"], ["type", "checkbox", "value", "", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["type", "number", "placeholder", "Qty", 1, "pos-input", "form-control", "form-control-sm", 3, "ngModel", "id", "ngModelChange"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "me-1", 3, "click"], [2, "white-space", "pre-line", "width", "124px", 3, "ngClass"], [3, "ngClass", 4, "ngIf"], [1, "text-primary", "fw-bold", 3, "ngClass"], ["class", "ocStrategyStrikeQty", 4, "ngIf"], [1, "fw-bold", "text-center", 3, "ngClass"], ["class", "ocStrategyStrikeQty oc-strike-spot", 4, "ngIf"], ["style", "color: orange;", 4, "ngIf"], [1, "greeksOC"], [1, "ocStrategyStrikeQty"], [1, "ocStrategyStrikeQty", "oc-strike-spot"], [2, "color", "orange"]], template: function AppComponent_Template(rf, ctx) { if (rf & 1) {
        const _r64 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵgetCurrentView"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](2, AppComponent_p_2_Template, 3, 2, "p", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](3, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](4, "Disclaimer: The application is only for my personal use and not for any commercial purposes.");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](5, "div", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](6, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](7, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](8, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](9, "Fetch NSE OC:");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](10, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_10_listener() { return ctx.getNSE_OC("NIFTY50"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](11, "NIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](12, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_12_listener() { return ctx.getNSE_OC("BANKNIFTY"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](13, "BANKNIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](14, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_14_listener() { return ctx.getNSE_OC("FINNIFTY"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](15, "FINNIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](16, "button", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_16_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r64); const _r1 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵreference"](19); return _r1.click(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](17, "\u2191");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](18, "input", 7, 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("change", function AppComponent_Template_input_change_18_listener($event) { return ctx.uploadNSEOC($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](20, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](21, "input", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_21_listener($event) { return ctx.ws_vendor = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](22, "label", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](23, "Zerodha");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](24, "div", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](25, "input", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_25_listener($event) { return ctx.ws_vendor = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](26, "label", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](27, "Aliceblue");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](28, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_28_listener() { return ctx.establishWSVendor(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](29, "Fetch & Connect");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](30, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_30_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵrestoreView"](_r64); const _r4 = _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵreference"](35); return _r4.click(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](31, "Import & Connect");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](32, AppComponent_span_32_Template, 2, 0, "span", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](33, AppComponent_span_33_Template, 2, 0, "span", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](34, "input", 15, 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("change", function AppComponent_Template_input_change_34_listener($event) { return ctx.import_establishWSVendor($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](36, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](37, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](38);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](39, AppComponent_button_39_Template, 2, 0, "button", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](40, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](41, AppComponent_span_41_Template, 2, 0, "span", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](42, AppComponent_span_42_Template, 2, 0, "span", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](43, AppComponent_button_43_Template, 2, 0, "button", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](44, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_44_listener() { return ctx.reopenWebsocket(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](45, "Connect");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](46, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](47, "input", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_47_listener($event) { return ctx.auth_acc = $event; })("change", function AppComponent_Template_input_change_47_listener($event) { return ctx.auth_radio_change($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](48, "input", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_48_listener($event) { return ctx.auth_change_num($event, "1"); })("ngModelChange", function AppComponent_Template_input_ngModelChange_48_listener($event) { return ctx.auth_acc_1 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](49, "div", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](50, "input", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_50_listener($event) { return ctx.auth_acc = $event; })("change", function AppComponent_Template_input_change_50_listener($event) { return ctx.auth_radio_change($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](51, "input", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_51_listener($event) { return ctx.auth_change_num($event, "2"); })("ngModelChange", function AppComponent_Template_input_ngModelChange_51_listener($event) { return ctx.auth_acc_2 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](52, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](53, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](54, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](55, "table", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](56, "tbody");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](57, "tr");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](58, "td", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](59, "Nifty");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](60, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](61);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](62, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](63, "table", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](64, "tbody");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](65, "tr");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](66, "td", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](67, "BNF");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](68, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](69);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](70, "div", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](71, "table", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](72, "tbody");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](73, "tr");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](74, "td", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](75, "Finnifty");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](76, "td");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](77);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](78, "div", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](79, "input", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_79_listener($event) { return ctx.log_ws_feed = $event; })("change", function AppComponent_Template_input_change_79_listener() { return ctx.log_ws_feed_change(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](80, "label", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](81, "Log WS Feed");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](82, "hr", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](83, "button", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_83_listener() { return ctx.refreshAll(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](84, "Refresh All");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](85, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](86);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](87, "div", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](88, "div", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](89, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](90, "span", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](91, "Positions");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](92, "div", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](93, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](94, "label", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](95, "Hide");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](96, "input", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_96_listener($event) { return ctx.hide_positions = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](97, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](98, "label", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](99, "Hide Exited");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](100, "input", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_100_listener($event) { return ctx.hide_exited_positions = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](101, "button", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_101_listener() { return ctx.getPositions(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](102, "Refresh");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](103, "button", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_103_listener() { return ctx.exitSelected(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](104, "Exit selected");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](105, "table", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](106, "thead", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](107, "tr");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](108, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](109, "Instru");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](110, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](111, "Scrip");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](112, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](113, "NetQty");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](114, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](115, "BuyAvg");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](116, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](117, "SellAvg");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](118, AppComponent_tbody_118_Template, 2, 1, "tbody", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](119, "div", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](120, "div", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](121, "div", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](122, "span", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](123, "Orders");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](124, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](125);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](126, "div", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](127, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](128, "label", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](129, "Hide");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](130, "input", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_130_listener($event) { return ctx.hide_orders = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](131, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](132, "label", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](133, "Auto-Update");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](134, "input", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_134_listener($event) { return ctx.orders_update = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](135, "div", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](136, "label", 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](137, "Latest 10");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](138, "input", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("change", function AppComponent_Template_input_change_138_listener($event) { return ctx.changeLatestTen($event); })("ngModelChange", function AppComponent_Template_input_ngModelChange_138_listener($event) { return ctx.latest_ten = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](139, "button", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_139_listener() { return ctx.getOrders(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](140, "Refresh");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](141, "button", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_141_listener() { return ctx.addOrdersToStrategy(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](142, "Add to Strategy");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](143, "table", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](144, "thead", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](145, "tr");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](146, "th");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](147, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](148, "Time");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](149, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](150, "Expiry");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](151, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](152, "Instru");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](153, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](154, "Scrip");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](155, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](156, "Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](157, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](158, "Price");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](159, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](160, "Status");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](161, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](162, "Tags");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](163, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](164, "GUID");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](165, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](166, "Message");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](167, AppComponent_tbody_167_Template, 2, 1, "tbody", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](168, AppComponent_div_168_Template, 12, 10, "div", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](169, "app-chart", 56);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](170, "hr");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](171, "div", 57);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](172, "select", 58);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_select_ngModelChange_172_listener($event) { return ctx.oc_instru = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](173, "option", 59);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](174, "NIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](175, "option", 60);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](176, "BANKNIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](177, "option", 61);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](178, "FINNIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](179, "option", 62);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](180, "MIDCPNIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](181, "option", 63);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](182, "SENSEX");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](183, "option", 64);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](184, "USDINR");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](185, "input", 65);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_185_listener($event) { return ctx.qty_default = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](186, "div", 66);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](187, "Expiry: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](188, "div", 67);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](189, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](190, "div", 69);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](191, "Year");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](192, "input", 70);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_192_listener($event) { return ctx.oc_year = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](193, "div", 67);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](194, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](195, "div", 69);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](196, "Month");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](197, "input", 70);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_197_listener($event) { return ctx.oc_month = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](198, "div", 67);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](199, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](200, "div", 69);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](201, "Date");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](202, "input", 70);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_202_listener($event) { return ctx.oc_date = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](203, "div", 66);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](204, "Strike range: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](205, "div", 71);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](206, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](207, "div", 69);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](208, "Higher");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](209, "input", 72);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_209_listener($event) { return ctx.oc_range_higher = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](210, "div", 71);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](211, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](212, "div", 69);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](213, "Lower");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](214, "input", 72);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_214_listener($event) { return ctx.oc_range_lower = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](215, "div", 71);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](216, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](217, "div", 69);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](218, "Multiple");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](219, "input", 73);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_219_listener($event) { return ctx.oc_range_multiple = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](220, "button", 74);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_220_listener() { return ctx.updateOCRange(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](221, "Update");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](222, "button", 75);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_222_listener() { return ctx.clearOC(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](223, "Clear");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](224, "button", 75);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_224_listener() { return ctx.addPlaceOrders(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](225, "Add - Place Orders");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](226, "div", 76);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](227, "input", 77);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_227_listener($event) { return ctx.show_greeks = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](228, "label", 78);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](229, "Greeks");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](230, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](231, "input", 79);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_231_listener($event) { return ctx.qty_strategy_pts = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](232, "input", 80);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_232_listener($event) { return ctx.diff_strategy_pts = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](233, "button", 74);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_233_listener() { return ctx.refreshInlineStategyPnL(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](234, "P&L");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](235, "button", 81);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_235_listener() { return ctx.calcMaxProfitLoss(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](236, "Sel. P&L");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](237, "span");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](238);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](239, "table", 82);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](240, "thead", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](241, "tr", 83);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](242, "th", 84);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](243, "Calls");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](244, "th", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](245, "th", 84);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](246, "Puts");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](247, "tr");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](248, "th", 85);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](249, "th", 86);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](250, "th", 86);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](251, "Volume");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](252, AppComponent_th_252_Template, 2, 0, "th", 87);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](253, "th", 86);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](254, "LTP");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](255, "th", 88);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](256, "Strike");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](257, "th", 86);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](258, "LTP");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](259, AppComponent_th_259_Template, 2, 0, "th", 87);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](260, "th", 86);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](261, "Volume");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](262, "th", 86);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](263, "th", 85);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](264, "tbody");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](265, AppComponent_tr_265_Template, 39, 47, "tr", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](266, "hr");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](267, "div", 89);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](268, "div", 90);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](269, "h2", 91);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](270, "button", 92);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](271, " Historical ");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](272, "div", 93);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](273, " For Weekly expiry, enter WK in append field. By default, Nifty/BNF expiries dates will be shown. For Finnifty, update the date fields. ");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](274, "div", 94);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](275, "label", 95);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](276, "Append");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](277, "input", 96);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_277_listener($event) { return ctx.historical_append = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](278, "div", 94);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](279, "label", 97);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](280, "Authorization");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](281, "input", 98);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_281_listener($event) { return ctx.zerodha_auth = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](282, "div", 94);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](283, "label", 99);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](284, "From Date");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](285, "input", 100);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_285_listener($event) { return ctx.zerodha_from_date = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](286, "div", 94);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](287, "label", 101);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](288, "To Date");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](289, "input", 102);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_289_listener($event) { return ctx.zerodha_to_date = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](290, "div", 94);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](291, "label", 103);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](292, "Expiry Date");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](293, "input", 104);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_293_listener($event) { return ctx.zerodha_expiry_date = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](294, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](295, "Third Party: Update Append, Expiry date, instru, Date, upper range and lower range. See the range of instru for the period you want. In one call, 2.5 days data is received. See the day upto which data is received in response payload. Then update \"Date\" to this date.");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](296, "select", 105);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_select_ngModelChange_296_listener($event) { return ctx.historical_instru = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](297, "option", 59);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](298, "NIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](299, "option", 106);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](300, "BANKNIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](301, "option", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](302, "FINNIFTY");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](303, "div", 94);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](304, "label", 108);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](305, "Date");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](306, "input", 109);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_306_listener($event) { return ctx.historical_date = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](307, "div", 94);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](308, "label", 110);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](309, "Upper Range");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](310, "input", 111);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_310_listener($event) { return ctx.historical_upper = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](311, "div", 94);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](312, "label", 112);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](313, "Lower Range");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](314, "input", 113);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("ngModelChange", function AppComponent_Template_input_ngModelChange_314_listener($event) { return ctx.historical_lower = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](315, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_315_listener() { return ctx.fetchHistorical(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](316, "Fetch Historical");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](317, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_317_listener() { return ctx.fetchHistoricalThirdParty(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](318, "Fetch Historical Third Party");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](319, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_319_listener() { return ctx.exportHistorical(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](320, "Export");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](321, "div", 114);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](322, "div", 90);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](323, "h2", 91);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](324, "button", 115);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](325, " Stocks ");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](326, "div", 116);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](327, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](328);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](329, "table", 82);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](330, "thead", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](331, "tr");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](332, "th", 86);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](333, "Scrip");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](334, "th", 86);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](335, "LTP");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](336, "th", 117);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_th_click_336_listener() { return ctx.sortTableColumn("oned"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](337, "1D%");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](338, "th", 117);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_th_click_338_listener() { return ctx.sortTableColumn("onew"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](339, "1W%");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](340, "th", 117);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_th_click_340_listener() { return ctx.sortTableColumn("onem"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](341, "1M%");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](342, "th", 117);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_th_click_342_listener() { return ctx.sortTableColumn("threem"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](343, "3M%");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](344, "th", 117);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_th_click_344_listener() { return ctx.sortTableColumn("fiftytwow"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](345, "52W H%");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](346, "th", 117);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_th_click_346_listener() { return ctx.sortTableColumn("avgp"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](347, "Avg%");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](348, "th", 117);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_th_click_348_listener() { return ctx.sortTableColumn("support"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](349, "Support");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](350, "th", 117);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_th_click_350_listener() { return ctx.sortTableColumn("resistance"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](351, "Resistance");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](352, "th", 117);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_th_click_352_listener() { return ctx.sortTableColumn("buyvalue"); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](353, "BuyValue");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](354, "tbody");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtemplate"](355, AppComponent_tr_355_Template, 23, 54, "tr", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](356, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_356_listener() { return ctx.fetchStocks(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](357, "Fetch Stocks data");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](358, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_358_listener() { return ctx.loadHoldings(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](359, "Load");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](360, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_360_listener() { return ctx.backtestStocks(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](361, "Backtest");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementStart"](362, "button", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵlistener"]("click", function AppComponent_Template_button_click_362_listener() { return ctx.exportBacktest(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtext"](363, "Export Backtest");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵelement"](364, "router-outlet");
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngForOf", ctx.alerts);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](19);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.ws_vendor);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.ws_vendor);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", ctx.ws_vendor === "zerodha");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", ctx.ws_vendor === "aliceblue");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ctx.getMastersStatus());
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", !ctx.access_token);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", ctx.isSocketConnected());
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", !ctx.isSocketConnected());
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", ctx.isSocketConnected());
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.auth_acc);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.auth_acc_1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.auth_acc);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.auth_acc_2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ctx.getInstruLTP("NIFTY50"));
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ctx.getInstruLTP("BANKNIFTY"));
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate"](ctx.getInstruLTP("FINNIFTY"));
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.log_ws_feed);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate2"]("Positions last update: ", ctx.lastPositionsUpdateTime, " | Orders last update: ", ctx.lastOrdersUpdateTime, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.hide_positions);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.hide_exited_positions);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("disabled", ctx.disable_order_buttons);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](15);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", !ctx.hide_positions);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate1"]("\u00A0 (", ctx.completeOrders, ")");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.hide_orders);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.orders_update);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.latest_ten);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](29);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", !ctx.hide_orders);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.oc_instru);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](13);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.qty_default);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.oc_year);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.oc_month);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.oc_date);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.oc_range_higher);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.oc_range_lower);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.oc_range_multiple);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.show_greeks);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.qty_strategy_pts);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.diff_strategy_pts);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate3"]("Profit: ", ctx.maxProfit, ", Loss: ", ctx.maxLoss, ", Ratio: ", ctx.profitLossRatio, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](14);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", ctx.show_greeks);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngIf", ctx.show_greeks);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngForOf", ctx.oc_strikes);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](12);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.historical_append);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.zerodha_auth);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.zerodha_from_date);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.zerodha_to_date);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.zerodha_expiry_date);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.historical_instru);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](10);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.historical_date);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.historical_upper);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngModel", ctx.historical_lower);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](14);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵtextInterpolate3"]("Portfolio return: ", ctx.portfolio_return, "% Total inv.: ", ctx.total_inv, " Current val.: ", ctx.current_val, "");
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵadvance"](27);
        _angular_core__WEBPACK_IMPORTED_MODULE_13__["ɵɵproperty"]("ngForOf", ctx.holdings);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_15__.NgForOf, _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_16__.NgbAlert, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.RadioControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.NgModel, _angular_common__WEBPACK_IMPORTED_MODULE_15__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.CheckboxControlValueAccessor, _angular_common__WEBPACK_IMPORTED_MODULE_15__.NgClass, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.NumberValueAccessor, _chart_chart_component__WEBPACK_IMPORTED_MODULE_12__.ChartComponent, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.SelectControlValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_17__.NgSelectOption, _angular_forms__WEBPACK_IMPORTED_MODULE_17__["ɵNgSelectMultipleOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_17__.MinValidator, _angular_router__WEBPACK_IMPORTED_MODULE_14__.RouterOutlet], styles: ["[_nghost-%COMP%], input[_ngcontent-%COMP%], .input-group-text[_ngcontent-%COMP%], select[_ngcontent-%COMP%], button[_ngcontent-%COMP%] {\n  font-size: 12px !important;\n}\n\nbutton[_ngcontent-%COMP%] {\n  margin-top: -4px;\n}\n\n.greeksOC[_ngcontent-%COMP%] {\n  display: block;\n}\n\n.alertMessage[_ngcontent-%COMP%] {\n  \n  position: fixed;\n  bottom: 0;\n  right: 0;\n  z-index: 999;\n}\n\n.stockHolding[_ngcontent-%COMP%] {\n  color: blue;\n}\n\n.green[_ngcontent-%COMP%] {\n  color: green;\n}\n\n.red[_ngcontent-%COMP%] {\n  color: #ff6347;\n}\n\n.blue[_ngcontent-%COMP%] {\n  color: blue;\n}\n\n.bold-higher[_ngcontent-%COMP%] {\n  font-weight: bold;\n  font-size: 12px !important;\n}\n\n.historical_label[_ngcontent-%COMP%] {\n  margin-bottom: 0 !important;\n}\n\n.algo-suggestions-main[_ngcontent-%COMP%] {\n  position: -webkit-sticky;\n  position: sticky;\n  top: 0;\n  z-index: 999;\n}\n\n.suggest-positions[_ngcontent-%COMP%] {\n  border: 1px solid #b5b5b5;\n  padding: 5px;\n  border-radius: 5px;\n  margin-right: 15px;\n  font-weight: bold;\n}\n\ntable[_ngcontent-%COMP%] {\n  background-color: white;\n  border: 2px solid #dee2e6;\n}\n\n\n\n.posCheckbox[_ngcontent-%COMP%] {\n  \n}\n\n.ocStrategyStrikeQty[_ngcontent-%COMP%] {\n  font-size: 0.6rem;\n  color: black;\n}\n\n.oc-strike[_ngcontent-%COMP%] {\n  background-color: #e9ecef;\n  width: 60px;\n}\n\n.oc-strike-spot[_ngcontent-%COMP%] {\n  width: 60px;\n  margin: 0 auto;\n}\n\n.oc-col-actions[_ngcontent-%COMP%] {\n  width: 19rem;\n}\n\n.oc-col[_ngcontent-%COMP%] {\n  width: 5rem;\n}\n\n.lastRequestStatus[_ngcontent-%COMP%] {\n  margin-top: 10px;\n}\n\n.main-content[_ngcontent-%COMP%] {\n  padding: 10px;\n  background-color: #f8f9fa;\n}\n\n.flex-container[_ngcontent-%COMP%] {\n  margin-top: 10px;\n  display: flex;\n}\n\n.positions_div[_ngcontent-%COMP%] {\n  flex: 1;\n  margin-right: 20px;\n}\n\n.orderbook_div[_ngcontent-%COMP%] {\n  flex: 2;\n}\n\n.pos-input[_ngcontent-%COMP%] {\n  width: 60px;\n  display: inline-block;\n  margin-right: 5px;\n}\n\n.positions-row-actions[_ngcontent-%COMP%] {\n  \n}\n\n.refresh-btn[_ngcontent-%COMP%] {\n  \n  margin-right: 5px;\n  margin-bottom: 5px;\n}\n\n.table-title[_ngcontent-%COMP%] {\n  margin-bottom: 5px;\n}\n\n.new-input[_ngcontent-%COMP%] {\n  margin-top: 5px;\n  margin-right: 5px;\n  width: 120px;\n  display: inline-block;\n}\n\n.new-input-prepend[_ngcontent-%COMP%] {\n  margin-top: 5px;\n  margin-right: 5px;\n  width: 150px;\n  display: inline-flex;\n}\n\n.new-input-prepend-expiry[_ngcontent-%COMP%] {\n  margin-top: 5px;\n  margin-right: 5px;\n  width: 120px;\n  display: inline-flex;\n}\n\n.new-input-prepend-oc[_ngcontent-%COMP%] {\n  margin-top: 5px;\n  margin-right: 5px;\n  width: 130px;\n  display: inline-flex;\n}\n\n.new-input-btn[_ngcontent-%COMP%] {\n  margin-right: 5px;\n  margin-top: 5px;\n}\n\n.confirmation-check[_ngcontent-%COMP%] {\n  margin-top: 15px;\n}\n\n.new-order-div[_ngcontent-%COMP%] {\n  padding: 10px;\n  border: 1px solid #ccc;\n  border-radius: 5px;\n  background-color: white;\n}\n\n.ocStrikeStrategyCE[_ngcontent-%COMP%] {\n  background-color: #ccffc9 !important;\n}\n\n.ocStrikeStrategyPE[_ngcontent-%COMP%] {\n  background-color: #ffdede !important;\n}\n\n.hidePositionRow[_ngcontent-%COMP%] {\n  display: none;\n}\n/*# sourceMappingURL=data:application/json;base64, */"] });


/***/ }),

/***/ 6747:
/*!*******************************!*\
  !*** ./src/app/app.module.ts ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppModule": () => (/* binding */ AppModule)
/* harmony export */ });
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/platform-browser */ 318);
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app-routing.module */ 158);
/* harmony import */ var _app_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./app.component */ 5041);
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./app.service */ 900);
/* harmony import */ var _common_fyers_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/fyers.service */ 6982);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @angular/forms */ 587);
/* harmony import */ var _chart_chart_module__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./chart/chart.module */ 6534);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common */ 6362);
/* harmony import */ var _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @ng-bootstrap/ng-bootstrap */ 7544);
/* harmony import */ var _common_httpInterceptor_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common/httpInterceptor.service */ 2604);
/* harmony import */ var _algo_algo_module__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./algo/algo.module */ 3263);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/core */ 3184);













class AppModule {
}
AppModule.ɵfac = function AppModule_Factory(t) { return new (t || AppModule)(); };
AppModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineNgModule"]({ type: AppModule, bootstrap: [_app_component__WEBPACK_IMPORTED_MODULE_1__.AppComponent] });
AppModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵdefineInjector"]({ providers: [_app_service__WEBPACK_IMPORTED_MODULE_2__.AppService, _common_fyers_service__WEBPACK_IMPORTED_MODULE_3__.FyersService,
        [{ provide: _angular_common_http__WEBPACK_IMPORTED_MODULE_8__.HTTP_INTERCEPTORS, useClass: _common_httpInterceptor_service__WEBPACK_IMPORTED_MODULE_5__.HttpCustomInterceptor, multi: true }],], imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_9__.CommonModule,
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_10__.BrowserModule,
            _app_routing_module__WEBPACK_IMPORTED_MODULE_0__.AppRoutingModule,
            _angular_common_http__WEBPACK_IMPORTED_MODULE_8__.HttpClientModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormsModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_11__.ReactiveFormsModule,
            _chart_chart_module__WEBPACK_IMPORTED_MODULE_4__.ChartModule,
            _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_12__.NgbModule,
            _algo_algo_module__WEBPACK_IMPORTED_MODULE_6__.AlgoModule
            /* HighchartsChartModule */
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_7__["ɵɵsetNgModuleScope"](AppModule, { declarations: [_app_component__WEBPACK_IMPORTED_MODULE_1__.AppComponent], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_9__.CommonModule,
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_10__.BrowserModule,
        _app_routing_module__WEBPACK_IMPORTED_MODULE_0__.AppRoutingModule,
        _angular_common_http__WEBPACK_IMPORTED_MODULE_8__.HttpClientModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_11__.FormsModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_11__.ReactiveFormsModule,
        _chart_chart_module__WEBPACK_IMPORTED_MODULE_4__.ChartModule,
        _ng_bootstrap_ng_bootstrap__WEBPACK_IMPORTED_MODULE_12__.NgbModule,
        _algo_algo_module__WEBPACK_IMPORTED_MODULE_6__.AlgoModule
        /* HighchartsChartModule */
    ] }); })();


/***/ }),

/***/ 900:
/*!********************************!*\
  !*** ./src/app/app.service.ts ***!
  \********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppService": () => (/* binding */ AppService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! rxjs */ 2218);
/* harmony import */ var _common_application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./common/application.constant */ 8001);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _common_models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./common/models */ 8077);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _common_fyers_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./common/fyers.service */ 6982);
/* harmony import */ var _common_aliceblue_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./common/aliceblue.service */ 7023);
/* harmony import */ var _common_angel_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./common/angel.service */ 1580);
/* harmony import */ var _common_angelwebsocket_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./common/angelwebsocket.service */ 4991);
/* harmony import */ var _common_map_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./common/map.service */ 397);
/* harmony import */ var _common_zerodha_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./common/zerodha.service */ 1102);












class AppService {
    constructor(http, fyersService, aliceblueService, angelService, angelWS, mapService, zerodhaService) {
        this.http = http;
        this.fyersService = fyersService;
        this.aliceblueService = aliceblueService;
        this.angelService = angelService;
        this.angelWS = angelWS;
        this.mapService = mapService;
        this.zerodhaService = zerodhaService;
        this.payOffEvent$ = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();
        this.chartEvent$ = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();
        this.stockChartEvent$ = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();
        this.placeOrdersEvent$ = new rxjs__WEBPACK_IMPORTED_MODULE_8__.Subject();
        this.mean = 0;
        this.variance = 1;
    }
    dummyRequest() {
        let url = 'https://httpstat.us/200?sleep=10000';
        url = 'https://www.nseindia.com/api/option-chain-indices?symbol=BANKNIFTY';
        console.log('making dummy request');
        this.http.get(url)
            .subscribe(response => {
            console.log('success', response);
        }, error => {
            console.log('error', error);
            let errmsg = 'Error (mostly timeout)';
            if (error.error && error.error.message) {
                errmsg = error.error.message;
            }
            else {
                errmsg = error.message;
            }
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next({ 'status': 'danger', 'message': errmsg });
            //this.playAudio('error');
        });
    }
    getZerodhaInstruments() {
        let httpOptions = {
            responseType: 'text'
        };
        let url = 'https://api.kite.trade/instruments';
        this.http.get(url, httpOptions).subscribe((res) => {
            console.log('zerodha instruments', res);
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next({ 'status': 'success', 'message': 'Fetched Zerodha instruments' });
            let allTextLines_all_data = res.split(/\r|\n|\r/);
            let allTextLines = allTextLines_all_data.filter(function (elem) {
                return elem !== '';
            });
            // console.log('allTextLines_all_data', allTextLines_all_data);
            for (let index = 1; index < allTextLines.length; index++) { // ignore first line - headers
                // 10698242,41790,BANKNIFTY2310544000CE,"BANKNIFTY",0,2023-01-05,44000,0.05,25,CE,NFO-OPT,NFO
                let split = allTextLines[index].split(',');
                let instru_token = split[0];
                let exchg_token = split[1];
                let tradingsymbol = split[2];
                let name = split[3].replaceAll('"', '');
                let last_price = split[4];
                let expiry = split[5];
                let strike = split[6];
                let type = split[9];
                if (name === 'NIFTY' || name === 'BANKNIFTY' || name === 'FINNIFTY' || name === 'SENSEX' || name === 'BANKEX' || name === 'MIDCPNIFTY') {
                    this.parseAndSetMaps(name, expiry, strike, type, last_price);
                }
                if (name === 'NIFTY 50') {
                    this.mapService.setLtp('NIFTY50', last_price);
                }
                if (name === 'NIFTY BANK') {
                    this.mapService.setLtp('BANKNIFTY', last_price);
                }
                if (name === 'NIFTY FIN SERVICE') {
                    this.mapService.setLtp('FINNIFTY', last_price);
                }
                if (name === 'NIFTY MIDCAP SELECT (MIDCPNIFTY)') {
                    this.mapService.setLtp('MIDCPNIFTY', last_price);
                }
                if (tradingsymbol === 'SENSEX') {
                    this.mapService.setLtp('SENSEX', last_price);
                }
                if (tradingsymbol === 'BANKEX') {
                    this.mapService.setLtp('BANKEX', last_price);
                }
            }
        }, error => {
            console.log('zerodha instruments error', error);
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next({ 'status': 'danger', 'message': error.status + ' - Failed to fetch Zerodha instruments' });
        });
    }
    getNSE_OC(instru) {
        let instru_nseoc = instru;
        if (instru === 'NIFTY50') {
            instru_nseoc = 'NIFTY';
        }
        let httpOptions = {
            responseType: 'json'
        };
        let url = 'https://www.nseindia.com/api/option-chain-indices?symbol=' + instru_nseoc;
        this.http.get(url, httpOptions).subscribe((res) => {
            console.log('getNSE_OC', res);
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next({ 'status': 'success', 'message': 'Fetched NSE OC of ' + instru });
            for (let [key, value] of Object.entries(res['records']['data'])) {
                // console.log(value);
                if (value.hasOwnProperty('CE')) {
                    this.parseAndSetMaps(instru_nseoc, value['CE']['expiryDate'], value['CE']['strikePrice'], 'CE', value['CE']['lastPrice']);
                }
                if (value.hasOwnProperty('PE')) {
                    this.parseAndSetMaps(instru_nseoc, value['PE']['expiryDate'], value['PE']['strikePrice'], 'PE', value['PE']['lastPrice']);
                }
            }
            this.mapService.setLtp(instru, res['records']['underlyingValue']);
        }, error => {
            console.log('getNSE_OC error', error);
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next({ 'status': 'danger', 'message': error.status + ' - Failed to fetch NSE OC of ' + instru });
        });
    }
    parseAndSetMaps(instru, expiry_string, strike, type, ltp) {
        let object = { instru: instru, expiry: expiry_string, strike: strike, optionType: type };
        let symbol = this.mapService.getMapKey(object);
        // console.log('updateMaps strike is', symbol);
        this.mapService.setLtp(symbol, ltp);
        // this.mapService.setAtp(symbol, p.atp);
        // this.mapService.setVolume(symbol, p.volume);
    }
    uploadedMastersContract(res) {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'zerodha') {
            let csv = String(res);
            this.zerodhaService.parseContractMaster(csv);
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'aliceblue') {
            let jsonObj = JSON.parse(res.toString());
            this.aliceblueService.parseContractMaster(jsonObj);
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'angel') {
        }
    }
    getMastersContract(access_token) {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'zerodha') {
            this.zerodhaService.getMastersContract();
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'aliceblue') {
            this.aliceblueService.getMastersContract(access_token);
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'angel') {
            return this.angelService.getMastersContract();
        }
    }
    reopenWebsocket() {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'zerodha') {
            this.zerodhaService.connectWebsocket();
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'aliceblue') {
            this.aliceblueService.getEncKey();
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'angel') {
        }
    }
    getDelta(instru, strike, type, expiry, ltp, simulate_strategy = false, simulateCurrDateObj = null) {
        let greeks = this.getGreeks(instru, strike, type, expiry, ltp, simulate_strategy, simulateCurrDateObj);
        return greeks['delta'];
        /*
            //let expiry_date = new Date(this.oc_year, this.oc_month - 1, this.oc_date).toDateString();
            // let date_expiry = new Date(this.oc_year, this.oc_month - 1, this.oc_date);
            let date_expiry = new Date(expiry);
            if (instru === 'USDINR') {
              date_expiry.setHours(12, 30, 0);
            } else {
              date_expiry.setHours(15, 30, 0);
            }
        
            let date_now = new Date();
            if (simulate_strategy) {
              date_now = simulateCurrDateObj;
            }
            // date_now.setDate(date_now.getDate() + 0);
        
            let seconds = Math.floor((date_expiry.getTime() - date_now.getTime()) / 1000);
            let	minutes = Math.floor(seconds / 60);
            let	hours = Math.floor(minutes / 60);
            let	delta_t = (Math.floor(hours / 24)) / 365.0; // time
        
            let underlying = 'NIFTY50';
            if (instru === 'BANKNIFTY') {
              underlying = 'BANKNIFTY';
            } else if (instru === 'USDINR') {
              underlying = 'USDINR';
            }
            let spot = this.getLtp(underlying);
        
            // let mkt_price = this.getLtp(symbol + type);
            let mkt_price = ltp;
        
            let typet0 = null;
            if (type === 'CE') {
              typet0 = PositionTypeForPayOff.CE;
            }
            if (type === 'PE') {
              typet0 = PositionTypeForPayOff.PE;
            }
        
            let iv = this.calculateIV(instru, spot, strike, AppConstants.INTEREST_RATE, date_expiry, typet0, mkt_price);
            let volt = iv / 100;
            let int_rate = AppConstants.INTEREST_RATE / 100;
        
            // console.log(spot, date_expiry, mkt_price, iv);
        
            let d1 = (Math.log(spot / strike) + (int_rate + (Math.pow(volt, 2) / 2)) * delta_t) / (volt * Math.sqrt(delta_t));
            let delta = 0;
            if (type === 'CE') {
              delta = this.getCDF(d1);
            } else if (type === 'PE') {
              delta = this.getCDF(d1) - 1;
            }
            delta = Math.round((delta + 0.00001) * 100) / 100;
            return delta; */
    }
    getGreeks(instru, strike, type, expiry, ltp, simulate_strategy = false, simulateCurrDateObj = null) {
        ///// **** CODE TAKEN FROM https://zerodha.com/tools/black-scholes/ 
        ///// The files can be found in folder GreeksCalculationZerodha - see bl.js and gaussian.js 
        ///// gaussian.js is added to angular.json
        var distribution = new gaussian(0, 1);
        let date_expiry = new Date(expiry);
        if (instru === 'USDINR') {
            date_expiry.setHours(12, 30, 0);
        }
        else {
            date_expiry.setHours(15, 30, 0);
        }
        let date_now = new Date();
        if (simulate_strategy) {
            date_now = simulateCurrDateObj;
        }
        // date_now.setDate(date_now.getDate() + 0);
        let seconds = Math.floor((date_expiry.getTime() - date_now.getTime()) / 1000);
        let minutes = Math.floor(seconds / 60);
        let hours = Math.floor(minutes / 60);
        let delta_t = (Math.floor(hours / 24)) / 365.0; // time
        let underlying = 'NIFTY50';
        if (instru === 'BANKNIFTY') {
            underlying = 'BANKNIFTY';
        }
        else if (instru === 'FINNIFTY') {
            underlying = 'FINNIFTY';
        }
        else if (instru === 'USDINR') {
            underlying = 'USDINR';
        }
        let spot = this.mapService.getScripLTP(null, null, underlying, null);
        // let mkt_price = this.getLtp(symbol + type);
        let mkt_price = ltp;
        let typet0 = null;
        if (type === 'CE') {
            typet0 = _common_models__WEBPACK_IMPORTED_MODULE_1__.PositionTypeForPayOff.CE;
        }
        if (type === 'PE') {
            typet0 = _common_models__WEBPACK_IMPORTED_MODULE_1__.PositionTypeForPayOff.PE;
        }
        let iv = this.calculateIV(instru, spot, strike, _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.INTEREST_RATE, date_expiry, typet0, mkt_price);
        let volt = iv / 100;
        // console.log('volatility', simulate_strategy, strike+''+type, volt, iv);
        let int_rate = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.INTEREST_RATE / 100;
        // console.log(spot, date_expiry, mkt_price, iv);
        let d1 = (Math.log(spot / strike) + (int_rate + Math.pow(volt, 2) / 2) * delta_t) / (volt * Math.sqrt(delta_t));
        let d2 = (Math.log(spot / strike) + (int_rate - Math.pow(volt, 2) / 2) * delta_t) / (volt * Math.sqrt(delta_t));
        let fv_strike = (strike) * Math.exp(-1 * int_rate * delta_t);
        let call_premium = spot * distribution.cdf(d1) - fv_strike * distribution.cdf(d2);
        let put_premium = fv_strike * distribution.cdf(-1 * d2) - spot * distribution.cdf(-1 * d1);
        let call_delta = distribution.cdf(d1);
        let put_delta = call_delta - 1;
        let call_gamma = distribution.pdf(d1) / (spot * volt * Math.sqrt(delta_t));
        let put_gamma = call_gamma;
        let call_vega = spot * distribution.pdf(d1) * Math.sqrt(delta_t) / 100;
        let put_vega = call_vega;
        let call_theta = (-1 * spot * distribution.pdf(d1) * volt / (2 * Math.sqrt(delta_t)) - int_rate * fv_strike * distribution.cdf(d2)) / 365;
        let put_theta = (-1 * spot * distribution.pdf(d1) * volt / (2 * Math.sqrt(delta_t)) + int_rate * fv_strike * distribution.cdf(-1 * d2)) / 365;
        let call_rho = fv_strike * delta_t * distribution.cdf(d2) / 100;
        let put_rho = -1 * fv_strike * delta_t * distribution.cdf(-1 * d2) / 100;
        let delta = 0;
        let gamma = 0;
        let vega = 0;
        let theta = 0;
        if (type === 'CE') {
            delta = call_delta;
            gamma = call_gamma;
            vega = call_vega;
            theta = call_theta;
        }
        else if (type === 'PE') {
            delta = put_delta;
            gamma = put_gamma;
            vega = put_vega;
            theta = put_theta;
        }
        delta = Math.round((delta + 0.00001) * 100) / 100;
        gamma = Math.round((gamma + 0.00001) * 10000) / 10000;
        vega = Math.round((vega + 0.00001) * 100) / 100;
        theta = Math.round((theta + 0.00001) * 100) / 100;
        //    console.log('volatility', strike+''+type, volt, iv);
        return { 'delta': delta, 'gamma': gamma, 'vega': vega, 'theta': theta };
    }
    getGreeks0(instru, strike, type, expiry, ltp, simulate_strategy = false, simulateCurrDateObj = null) {
        var distribution = new gaussian(0, 1);
        console.log(distribution);
        //let expiry_date = new Date(this.oc_year, this.oc_month - 1, this.oc_date).toDateString();
        // let date_expiry = new Date(this.oc_year, this.oc_month - 1, this.oc_date);
        let date_expiry = new Date(expiry);
        if (instru === 'USDINR') {
            date_expiry.setHours(12, 30, 0);
        }
        else {
            date_expiry.setHours(15, 30, 0);
        }
        let date_now = new Date();
        if (simulate_strategy) {
            date_now = simulateCurrDateObj;
        }
        // date_now.setDate(date_now.getDate() + 0);
        let seconds = Math.floor((date_expiry.getTime() - date_now.getTime()) / 1000);
        let minutes = Math.floor(seconds / 60);
        let hours = Math.floor(minutes / 60);
        let delta_t = (Math.floor(hours / 24)) / 365.0; // time
        let underlying = 'NIFTY50';
        if (instru === 'BANKNIFTY') {
            underlying = 'BANKNIFTY';
        }
        else if (instru === 'FINNIFTY') {
            underlying = 'FINNIFTY';
        }
        else if (instru === 'MIDCPNIFTY') {
            underlying = 'MIDCPNIFTY';
        }
        else if (instru === 'SENSEX') {
            underlying = 'SENSEX';
        }
        else if (instru === 'BANKEX') {
            underlying = 'BANKEX';
        }
        else if (instru === 'USDINR') {
            underlying = 'USDINR';
        }
        let spot = this.mapService.getScripLTP(null, null, underlying, null);
        // let mkt_price = this.getLtp(symbol + type);
        let mkt_price = ltp;
        let typet0 = null;
        if (type === 'CE') {
            typet0 = _common_models__WEBPACK_IMPORTED_MODULE_1__.PositionTypeForPayOff.CE;
        }
        if (type === 'PE') {
            typet0 = _common_models__WEBPACK_IMPORTED_MODULE_1__.PositionTypeForPayOff.PE;
        }
        let iv = this.calculateIV(instru, spot, strike, _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.INTEREST_RATE, date_expiry, typet0, mkt_price);
        let volt = iv / 100;
        let int_rate = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.INTEREST_RATE / 100;
        // console.log(spot, date_expiry, mkt_price, iv);
        // dOne = (Log(UnderlyingPrice / ExercisePrice) + (Interest - Dividend + 0.5 * Volatility ^ 2) * Time) / (Volatility * (Sqr(Time)))
        let dOne = (Math.log(spot / strike) + (int_rate + (Math.pow(volt, 2) / 2)) * delta_t) / (volt * Math.sqrt(delta_t));
        let delta = 0;
        if (type === 'CE') {
            // OTW_BlackScholes = Application.NormSDist(dOne(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend))
            delta = this.getCDF(dOne);
        }
        else if (type === 'PE') {
            // OTW_BlackScholes = Application.NormSDist(dOne(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend)) - 1
            delta = this.getCDF(dOne) - 1;
        }
        delta = Math.round((delta + 0.00001) * 100) / 100;
        // NdOne = Exp(-(dOne(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend) ^ 2) / 2) / (Sqr(2 * 3.14159265358979))
        let ndOne = Math.exp(-Math.pow(dOne, 2) / 2) / Math.sqrt(2 * 3.14159265358979);
        //OTW_BlackScholes = NdOne(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend) / (UnderlyingPrice * (Volatility * Sqr(Time)))
        let gamma = ndOne / (spot * (volt * Math.sqrt(delta_t)));
        gamma = Math.round((gamma + 0.00001) * 10000) / 10000;
        //OTW_BlackScholes = 0.01 * UnderlyingPrice * Sqr(Time) * NdOne(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend)
        let vega = 0.01 * spot * Math.sqrt(delta_t) * ndOne;
        vega = Math.round((vega + 0.00001) * 100) / 100;
        /*  Function dTwo(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend)
              dTwo = dOne(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend) - Volatility * Sqr(Time)
            End Function
        */
        let d2 = dOne - (volt * Math.sqrt(delta_t));
        /*  Function NdTwo(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend)
              NdTwo = Application.NormSDist(dTwo(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend))
            End Function
        */
        let ndTwo = this.getCDF(d2);
        let theta = 0;
        if (type === 'CE') {
            //let CT = -(UnderlyingPrice * Volatility * NdOne(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend)) / (2 * Sqr(Time)) - Interest * ExercisePrice * Exp(-Interest * (Time)) * NdTwo(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend)
            //OTW_BlackScholes = CT / 365
            theta = -(spot * volt * ndOne) / (2 * Math.sqrt(delta_t)) - int_rate * strike * Math.exp(-int_rate * delta_t) * ndTwo;
        }
        else if (type === 'PE') {
            //PT =     -(UnderlyingPrice * Volatility * NdOne(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend)) / (2 * Sqr(Time)) + Interest * ExercisePrice * Exp(-Interest * (Time)) * (1 - NdTwo(UnderlyingPrice, ExercisePrice, Time, Interest, Volatility, Dividend))
            //OTW_BlackScholes = PT / 365
            theta = -(spot * volt * ndOne) / (2 * Math.sqrt(delta_t)) + int_rate * strike * Math.exp(-int_rate * delta_t) * (1 - ndTwo);
        }
        theta = theta / 365;
        theta = Math.round((theta + 0.00001) * 100) / 100;
        return { 'delta': delta, 'gamma': gamma, 'vega': vega, 'theta': theta };
        // return [delta, gamma, vega, theta];
    }
    // params - smaller date, bigger date
    calcHolidays(dDate1, dDate2) {
        // https://stackoverflow.com/questions/37069186/calculate-working-days-between-two-dates-in-javascript-excepts-holidays
        //let dDate1 = new Date('02-March-2022');
        //let dDate2 = new Date();
        let count = 0;
        let curDate = new Date(dDate1.getTime());
        while (curDate <= dDate2) {
            let dayOfWeek = curDate.getDay();
            if (dayOfWeek === 0 || dayOfWeek === 6) {
                count++;
            }
            curDate.setDate(curDate.getDate() + 1);
        }
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holidays.forEach(day => {
            if ((day >= dDate1) && (day <= dDate2)) {
                count++;
            }
        });
        return count;
    }
    getLastWorkingDay(todayDate) {
        let curDate = new Date(todayDate.getTime());
        curDate.setDate(curDate.getDate() - 1);
        while (true) {
            let dayOfWeek = curDate.getDay();
            if (dayOfWeek === 0 || dayOfWeek === 6) {
                curDate.setDate(curDate.getDate() - 1);
            }
            else {
                let offDay = false;
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holidays.forEach(day => {
                    if (day.toLocaleDateString() === curDate.toLocaleDateString()) {
                        curDate.setDate(curDate.getDate() - 1);
                        offDay = true;
                    }
                });
                if (!offDay) {
                    break;
                }
            }
        }
        return curDate;
    }
    // params - smaller date, bigger date
    calcWorkingDays(dDate1, dDate2) {
        // return (dDate2.getTime() - dDate1.getTime()) / (1000 * 3600 * 24);
        // https://stackoverflow.com/questions/37069186/calculate-working-days-between-two-dates-in-javascript-excepts-holidays
        let count = 0;
        let curDate = new Date(dDate1.getTime());
        while (curDate <= dDate2) {
            let dayOfWeek = curDate.getDay();
            if (dayOfWeek !== 0 && dayOfWeek !== 6) {
                count++;
            }
            curDate.setDate(curDate.getDate() + 1);
        }
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holidays.forEach(day => {
            if ((day >= dDate1) && (day <= dDate2)) {
                count--;
            }
        });
        return count - 1;
        /* var iWeeks, iDateDiff, iAdjust = 0;
        if (dDate2 < dDate1) return -1; // error code if dates transposed
        var iWeekday1 = dDate1.getDay(); // day of week
        var iWeekday2 = dDate2.getDay();
        iWeekday1 = (iWeekday1 == 0) ? 7 : iWeekday1; // change Sunday from 0 to 7
        iWeekday2 = (iWeekday2 == 0) ? 7 : iWeekday2;
        if ((iWeekday1 > 5) && (iWeekday2 > 5)) iAdjust = 1; // adjustment if both days on weekend
        iWeekday1 = (iWeekday1 > 5) ? 5 : iWeekday1; // only count weekdays
        iWeekday2 = (iWeekday2 > 5) ? 5 : iWeekday2;
      
        // calculate differnece in weeks (1000mS * 60sec * 60min * 24hrs * 7 days = 604800000)
        iWeeks = Math.floor((dDate2.getTime() - dDate1.getTime()) / 604800000)
      
        if (iWeekday1 < iWeekday2) { //Equal to makes it reduce 5 days
          iDateDiff = (iWeeks * 5) + (iWeekday2 - iWeekday1)
        } else {
          iDateDiff = ((iWeeks + 1) * 5) - (iWeekday1 - iWeekday2)
        }
      
        iDateDiff -= iAdjust // take into account both days on weekend
      
        let date_diff = iDateDiff; // (iDateDiff + 1); // add 1 because dates are inclusive
        return date_diff; */
    }
    // IV calculation logic is taken from OptionTradingWorkbook. I've added it to this repository under GreeksCalculationExcel folder
    calculateIV(instru, spot, strike, int_rate, expiry_date, type, mkt_price) {
        let high = 80;
        let low = 0;
        let iv = 0;
        /* let date_expiry = new Date(expiry_date);
        let date_now = new Date(); */
        /* let days_diff = this.calcWorkingDays(date_now, date_expiry);
        let seconds = days_diff * 86400;
    
        //let seconds = Math.floor((date_expiry.getTime() - date_now.getTime()) / 1000);
        let	minutes = Math.floor(seconds / 60);
        let	hours = Math.floor(minutes / 60);
        let	delta_t = (Math.floor(hours / 24)) / 365.0;
    
        if (hours < 24) {
          return 0;
        } */
        while ((high - low) > 0.0001) {
            if (this.calculateT0AtPoint(instru, spot, strike, int_rate, expiry_date, (high + low) / 2, type) > mkt_price) {
                high = (high + low) / 2;
            }
            else {
                low = (high + low) / 2;
            }
        }
        iv = (high + low) / 2;
        return iv;
    }
    calculateT0AtPoint(instru, spot, strike, int_rate, expiry_date, volatility, type, add_days) {
        let t0 = 0;
        let date_expiry = new Date(expiry_date);
        if (instru === 'USDINR') {
            date_expiry.setHours(12, 30, 0);
        }
        else {
            date_expiry.setHours(15, 30, 0);
        }
        let date_now = new Date();
        let add_days_seconds = 0;
        if (add_days) {
            // add_days = 0;
            let newDate = new Date(date_now);
            newDate.setDate(newDate.getDate() + add_days);
            newDate.setHours(9, 15, 0);
            add_days_seconds = Math.floor((newDate.getTime() - date_now.getTime()) / 1000);
        }
        //let days_diff = this.calcWorkingDays(date_now, date_expiry);
        //days_diff = days_diff - add_days;
        //let seconds = days_diff * 86400;
        let holidays_seconds = this.calcHolidays(date_now, date_expiry) * 86400;
        let seconds = Math.floor((date_expiry.getTime() - date_now.getTime()) / 1000) - holidays_seconds - add_days_seconds;
        if (seconds > 0) {
            /* let	minutes = Math.floor(seconds / 60);
            let	hours = Math.floor(minutes / 60);
            let	delta_t = (Math.floor(hours / 24)) / 365.0; // time */
            let minutes = seconds / 60;
            let hours = minutes / 60;
            let delta_t = hours / 24 / 365.0; // time
            /* if (hours < 12) {
              return 0;
            }
            else { */
            let volt = volatility / 100;
            int_rate = int_rate / 100;
            let d1 = (Math.log(spot / strike) + (int_rate + (Math.pow(volt, 2) / 2)) * delta_t) / (volt * Math.sqrt(delta_t));
            // let d2 = (Math.log(spot / strike) + (int_rate - (Math.pow(volt, 2) / 2)) * delta_t) / (volt * Math.sqrt(delta_t));
            let d2 = d1 - (volt * Math.sqrt(delta_t));
            let fv_strike = (strike) * Math.exp(-1 * int_rate * delta_t);
            if (type === _common_models__WEBPACK_IMPORTED_MODULE_1__.PositionTypeForPayOff.CE) {
                t0 = spot * this.getCDF(d1) - fv_strike * this.getCDF(d2);
            }
            if (type === _common_models__WEBPACK_IMPORTED_MODULE_1__.PositionTypeForPayOff.PE) {
                t0 = fv_strike * this.getCDF(-1 * d2) - spot * this.getCDF(-1 * d1);
            }
            //}
        }
        return t0;
    }
    getCDF(x) {
        let standardDeviation = Math.sqrt(this.variance);
        return 0.5 * this.erfc(-(x - this.mean) / (standardDeviation * Math.sqrt(2)));
    }
    // Complementary error function
    // From Numerical Recipes in C 2e p221
    erfc(x) {
        let z = Math.abs(x);
        let t = 1 / (1 + z / 2);
        let r = t * Math.exp(-z * z - 1.26551223 + t * (1.00002368 +
            t * (0.37409196 + t * (0.09678418 + t * (-0.18628806 +
                t * (0.27886807 + t * (-1.13520398 + t * (1.48851587 +
                    t * (-0.82215223 + t * 0.17087277)))))))));
        return x >= 0 ? r : 2 - r;
    }
    playAudio(type) {
        let relativePath = '';
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isProduction === false) {
            relativePath = '../';
        }
        let audio = new Audio();
        if (type === 'success') {
            // audio.src = relativePath + "assets/audio/beep-25-success.mp3";
            audio.src = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.audioSuccess;
        }
        else if (type === 'error') {
            //audio.src = relativePath + "assets/audio/beep-02.mp3";
            audio.src = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.audioError;
        }
        else if (type === 'warn') {
            //audio.src = relativePath + "assets/audio/beep-05.mp3";
            audio.src = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.audioWarn;
        }
        audio.load();
        audio.play();
    }
    get(urlToFetch) {
        let httpOptions = {};
        let url = urlToFetch;
        return this.http.get(url, httpOptions);
    }
    getZerodhaMargin(instru, curr_positions_trades, exchange, access_token) {
        // console.log('getMargin curr_positions_trades: ', curr_positions_trades);
        /*
        [
          {"exchange":"NFO","tradingsymbol":"BANKNIFTY2242139000CE","transaction_type":"SELL","variety":"regular","product":"NRML","order_type":"MARKET","quantity":50,"price":0,"trigger_price":0,"squareoff":0,"stoploss":0},
          {"exchange":"NFO","tradingsymbol":"BANKNIFTY2242135000PE","transaction_type":"SELL","variety":"regular","product":"NRML","order_type":"MARKET","quantity":50,"price":0,"trigger_price":0,"squareoff":0,"stoploss":0}
        ]
        */
        let b = [];
        for (let i = 0; i < curr_positions_trades.length; i++) {
            let element = curr_positions_trades[i];
            /* {
              qty: 50,
              scrip: '11150CE',
              expiry: '01OCT2020',
              entry: 50,
              exit: 0,
            }, */
            // -375x10950PEx01OCT2020x19.2x0x0&
            // console.log('getMargin inside loop: ', element);
            if (element.exit !== null && element.exit === 0) {
                // let symbol = this.getScrip(element.scrip, instru, element.expiry);
                let object = { instru: instru, expiry: element.expiry, strike: this.mapService.parseScrip(element.scrip).scrip, optionType: this.mapService.parseScrip(element.scrip).type };
                let symbol = this.mapService.getMapKey(object);
                let trade = 'SELL';
                if (element.qty > 0) {
                    trade = 'BUY';
                }
                let exch = 'CDS';
                if (exchange.includes('NIFTY') || exchange.includes('BANKNIFTY') || exchange.includes('FINNIFTY') || exchange.includes('MIDCPNIFTY')) {
                    exch = 'NFO';
                }
                if (exchange.includes('SENSEX') || exchange.includes('BANKEX')) {
                    exch = 'BFO';
                }
                let pos = { "exchange": exch, "tradingsymbol": symbol, "transaction_type": trade, "variety": "regular", "product": "NRML", "order_type": "MARKET", "quantity": Math.abs(element.qty), "price": 0, "trigger_price": 0, "squareoff": 0, "stoploss": 0 };
                b.push(pos);
            }
        }
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_9__.HttpHeaders({
                Authorization: access_token,
            }),
            responseType: 'json'
        };
        return this.http.post('https://kite.zerodha.com/oms/margins/basket?consider_positions=&mode=compact', b, httpOptions);
    }
    getZerodhaMargin_old(instru, month, curr_positions_trades, exchange) {
        let formData = new FormData();
        formData.append('action', 'calculate');
        /*
        formData.append('exchange[]', 'CDS');
        formData.append('product[]', 'OPT');
        formData.append('scrip[]', 'USDINR20OCT');
        formData.append('option_type[]', 'CE');
        formData.append('strike_price[]', '73.5');
        formData.append('qty[]', '30');
        formData.append('trade[]', 'sell'); */
        // console.log('getMargin curr_positions_trades: ', curr_positions_trades);
        for (let i = 0; i < curr_positions_trades.length; i++) {
            let element = curr_positions_trades[i];
            /* {
              qty: 50,
              scrip: '11150CE',
              expiry: '01OCT2020',
              entry: 50,
              exit: 0,
            }, */
            // -375x10950PEx01OCT2020x19.2x0x0&
            // console.log('getMargin inside loop: ', element);
            if (element.exit !== null && element.exit === 0) {
                let pos_strike = element.scrip.slice(0, -2); // remove CE PE at end
                let type = '';
                if (element.scrip.includes('CE')) {
                    type = 'CE';
                }
                if (element.scrip.includes('PE')) {
                    type = 'PE';
                }
                let trade = 'sell';
                if (element.qty > 0) {
                    trade = 'buy';
                }
                let exch = 'CDS';
                if (exchange.includes('NIFTY')) {
                    exch = 'NFO';
                }
                let qtyMultiple = 1000;
                if (exchange === 'NIFTY') {
                    qtyMultiple = 1;
                }
                else if (exchange === 'BANKNIFTY') {
                    qtyMultiple = 1;
                }
                let scrip = instru + _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.year + month;
                formData.append('exchange[]', exch);
                formData.append('product[]', 'OPT');
                formData.append('scrip[]', scrip);
                formData.append('option_type[]', type);
                formData.append('strike_price[]', pos_strike);
                formData.append('qty[]', Math.abs(element.qty) / qtyMultiple);
                formData.append('trade[]', trade);
            }
        }
        /* for (let pair of formData.entries()) {
          console.log('getMargin pair: ', pair[0], pair[1]);
        } */
        // console.log('getMargin formdata: ', formData);
        return this.http.post('https://zerodha.com/margin-calculator/SPAN', formData); /* .subscribe(
          (response) => console.log('ZERODHA MARGIN: ', response),
          (error) => console.log('ZERODHA MARGIN ERROR: ', error)
        ); */
    }
    sendSubscriptions(strikes) {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'zerodha') {
            this.zerodhaService.sendSubscriptions(strikes);
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'aliceblue') {
            this.aliceblueService.sendSubscriptions(strikes);
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'angel') {
            this.angelService.sendSubscriptions(strikes);
        }
    }
    connectWebsocket(access_token) {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'aliceblue') {
            this.aliceblueService.connectWebsocket(access_token);
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'angel') {
            this.angelService.angelLogin();
        }
    }
    closeWebsocket() {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'zerodha') {
            this.zerodhaService.closeWebsocket();
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'aliceblue') {
            this.aliceblueService.closeWebsocket();
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'angel') {
        }
    }
    isSocketConnected() {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'zerodha') {
            return this.zerodhaService.isSocketConnected();
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'aliceblue') {
            return this.aliceblueService.isSocketConnected();
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'angel') {
            return this.angelWS.isSocketConnected();
        }
    }
    auth() {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'fyers') {
            return this.fyersService.auth();
        }
    }
    getTokenUrl(auth_code, appId) {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'fyers') {
            return this.fyersService.getTokenUrl(auth_code, appId);
        }
    }
    getFunds(access_token) {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'zerodha') {
            return this.zerodhaService.getFunds();
        }
        else if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'fyers') {
            return this.fyersService.getFunds(access_token);
        }
    }
    getPositions(access_token) {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'fyers') {
            return this.fyersService.getPositions(access_token);
        }
    }
    getOrders(access_token) {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'fyers') {
            return this.fyersService.getOrders(access_token);
        }
    }
    placeOrder(access_token, symbol, qty, orderType, side, productType, limitPrice, stopPrice) {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.RestMode === 'fyers') {
            let order = {
                'symbol': symbol,
                'qty': qty,
                'type': orderType,
                'side': side,
                'productType': productType,
                'limitPrice': limitPrice,
                'stopPrice': stopPrice,
                'disclosedQty': 0,
                'validity': 'DAY',
                'offlineOrder': 'False',
                'stopLoss': 0,
                'takeProfit': 0
            };
            console.log('Order: ' + order);
            return this.fyersService.place_order(access_token, order);
        }
    }
    getQtyUptoFreezeLimit(instru, qty) {
        let freezeLimit = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.freezeLimit[instru];
        if (freezeLimit < Math.abs(qty)) {
            if (qty < 0) {
                return -freezeLimit;
            }
            else {
                return freezeLimit;
            }
        }
        else {
            return qty;
        }
    }
}
AppService.ɵfac = function AppService_Factory(t) { return new (t || AppService)(_angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_9__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_common_fyers_service__WEBPACK_IMPORTED_MODULE_2__.FyersService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_common_aliceblue_service__WEBPACK_IMPORTED_MODULE_3__.AliceblueService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_common_angel_service__WEBPACK_IMPORTED_MODULE_4__.AngelService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_common_angelwebsocket_service__WEBPACK_IMPORTED_MODULE_5__.AngelWebsocketService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_common_map_service__WEBPACK_IMPORTED_MODULE_6__.MapService), _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵinject"](_common_zerodha_service__WEBPACK_IMPORTED_MODULE_7__.ZerodhaService)); };
AppService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_10__["ɵɵdefineInjectable"]({ token: AppService, factory: AppService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 6462:
/*!*******************************************!*\
  !*** ./src/app/chart/backtest.service.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "BacktestService": () => (/* binding */ BacktestService)
/* harmony export */ });
/* harmony import */ var _common_application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/application.constant */ 8001);
/* harmony import */ var _common_map_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/map.service */ 397);
/* harmony import */ var lightweight_charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightweight-charts */ 3412);
/* harmony import */ var _debut_indicators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @debut/indicators */ 9726);
/* harmony import */ var _debut_indicators__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_debut_indicators__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _common_fyers_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/fyers.service */ 6982);
/* harmony import */ var _common_aliceblue_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/aliceblue.service */ 7023);
/* harmony import */ var _common_zerodha_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/zerodha.service */ 1102);
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../app.service */ 900);











class BacktestService {
    constructor(http, mapService, fyersService, aliceblueService, zerodhaService, appService) {
        this.http = http;
        this.mapService = mapService;
        this.fyersService = fyersService;
        this.aliceblueService = aliceblueService;
        this.zerodhaService = zerodhaService;
        this.appService = appService;
        this.charts = {};
        this.candlestickSeries = {};
        this.backtestResult = [];
    }
    processData_simulated(instru, strike, type, currDate, tillEnd = false, HrsToStart = null, MinsToStart = null, startToCurrent = false, increment = null) {
        let data = _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.stockChartData[instru + 'WK' + strike + type];
        //console.log('data2:', instru + 'WK' + strike + type, data);
        if (!data) {
            data = _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.stockChartData[instru + strike + type];
            //console.log('data3:', instru + strike + type, data);
        }
        let trimmedData = [];
        let startInd = -1;
        if (true) {
            for (let i = 0; i < data.length; i++) {
                let arr = data[i];
                let timestamp = arr[0];
                let tsDate = new Date(timestamp);
                if (HrsToStart) {
                    let cDate = new Date(currDate);
                    cDate.setHours(HrsToStart, MinsToStart);
                    /* cDate.setHours(0,0,0,0);
                    if (HrsToStart && MinsToStart) {
                      cDate.setHours(HrsToStart, MinsToStart);
                    } */
                    if (tillEnd) {
                        if (cDate && tsDate.getTime() >= cDate.getTime()) {
                            trimmedData.push(arr);
                            if (startInd === -1) {
                                startInd = i;
                            }
                        }
                    }
                    else {
                        if (cDate && tsDate.getTime() >= cDate.getTime() && tsDate.getDate() === currDate.getDate() && tsDate.getMonth() === currDate.getMonth() && tsDate.getFullYear() === currDate.getFullYear()) {
                            trimmedData.push(arr);
                            if (startInd === -1) {
                                startInd = i;
                            }
                        }
                    }
                }
                else if (startToCurrent) { // all data of this scrip from its beginning to today
                    let cDate = new Date(currDate);
                    if (cDate) {
                        cDate.setDate(cDate.getDate() + 1);
                    }
                    if (cDate && tsDate < cDate) {
                        trimmedData.push(arr);
                        if (startInd === -1) {
                            startInd = i;
                        }
                    }
                }
                else { // current day only
                    if (currDate && tsDate.getDate() === currDate.getDate() && tsDate.getMonth() === currDate.getMonth() && tsDate.getFullYear() === currDate.getFullYear()) {
                        trimmedData.push(arr);
                        if (startInd === -1) {
                            startInd = i;
                        }
                    }
                }
            }
        }
        /*
        let extraStart = startInd - 60; // previous day's 1 hour
        if (extraStart < 0) {
          extraStart = 0;
        }
        //console.log('extra:', extraStart, startInd);
        let extraData = data.slice(extraStart, startInd);
        //console.log('extra data:', extraData);
        trimmedData = [...extraData, ...trimmedData];
        */
        console.log('trimmedData:', trimmedData);
        /* for (let j = 0; j < trimmedData.length; j++) {
          console.log(new Date(trimmedData[j][0]));
        } */
        if (increment && increment === 1) {
            return trimmedData;
        }
        let processed_data = [];
        let t = null;
        let o = null;
        let h = null;
        let l = null;
        let c = null;
        let v = 0;
        // *** convert 1 minute candles to 5 minute candles
        for (let i = 0; i < trimmedData.length; i++) {
            let arr = trimmedData[i];
            let timestamp = arr[0];
            if (new Date(timestamp).getMinutes() % 5 === 0) {
                if (t) { // to handle case where this minute is first in data series
                    processed_data.push([t, o, h, l, c, v]);
                }
                t = arr[0];
                o = arr[1];
                h = arr[2];
                l = arr[3];
                c = null;
                v = 0;
            }
            else {
                if (o === null) {
                    o = arr[1];
                }
                if (h === null || arr[2] > h) {
                    h = arr[2];
                }
                if (l === null || arr[3] < l) {
                    l = arr[3];
                }
                if ((new Date(timestamp).getMinutes() + 1) % 5 === 0) {
                    c = arr[4];
                }
                if (i === trimmedData.length - 1) { // to handle case where this is last minute in data series
                    c = arr[4];
                    processed_data.push([t, o, h, l, c, v]);
                }
                v += arr[5];
            }
        }
        console.log('processed_data:', processed_data);
        // this.updateChart(processed_data, display);
        //this.plotSimulatedChartForSpot(processed_data);
        return processed_data;
    }
    getCurrDateData(currDate, data) {
        let cData = [];
        data.forEach(element => {
            let eDate = new Date(element.time * 1000);
            //console.log('cData', element.time, eDate, currDate);
            if (eDate.getDate() === currDate.getDate() && eDate.getMonth() === currDate.getMonth() && eDate.getFullYear() === currDate.getFullYear()) {
                cData.push(element);
            }
        });
        //console.log('cData', cData);
        return cData;
    }
    supertrend_calc(data) {
        let st_1 = new _debut_indicators__WEBPACK_IMPORTED_MODULE_3__.SuperTrend(10, 2, 'WEMA');
        let st_2 = new _debut_indicators__WEBPACK_IMPORTED_MODULE_3__.SuperTrend(7, 3, 'WEMA');
        let lineData1 = [];
        let lineData2 = [];
        data.forEach(element => {
            let curr1 = st_1.nextValue(element.high, element.low, element.close);
            // console.log('ST1', curr);
            let st_value1 = undefined;
            let st_color1 = 'green';
            if (curr1) {
                st_value1 = curr1.superTrend;
                if (curr1.direction === 1) {
                    st_color1 = 'red';
                }
            }
            let data_entry_line1 = { time: element.time, value: st_value1, color: st_color1 };
            lineData1.push(data_entry_line1);
            let curr2 = st_2.nextValue(element.high, element.low, element.close);
            // console.log('ST2', curr);
            let st_value2 = undefined;
            let st_color2 = 'green';
            if (curr2) {
                st_value2 = curr2.superTrend;
                if (curr2.direction === 1) {
                    st_color2 = 'red';
                }
            }
            let data_entry_line2 = { time: element.time, value: st_value2, color: st_color2 };
            lineData2.push(data_entry_line2);
        });
        return [lineData1, lineData2];
    }
    loadSimulatedOCForTime(instru, dateTimeString, expiry_date) {
        let curr_date_time = dateTimeString;
        // console.log('backtest loadSimulatedOCForTime', curr_date_time);
        for (let [key, value] of Object.entries(_common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.simulateData)) {
            // console.log(`${key}: ${value}`);
            if (key === instru || (key.startsWith(instru) && (key.endsWith('CE') || key.endsWith('PE')))) {
                if (key === instru) {
                    let symbol = instru;
                    if (instru === 'NIFTY') {
                        symbol = 'NIFTY50';
                    }
                    if (instru === 'USDINR') {
                        symbol = 'USDINR';
                        // let expiry = this.mapService.getExpiryString(AppConstants.monthlyExpiryDatesUSDINR[AppConstants.year + AppConstants.USDINR_FUT_MONTH]);
                        // symbol = 'USDINR' + expiry + AppConstants.USDINR_FUT_MONTH + 'FUT';
                    }
                    this.mapService.setLtp(symbol, value[curr_date_time]);
                }
                else {
                    let scrip = key;
                    scrip = scrip.replace(instru, '');
                    scrip = scrip.replace('WK', '');
                    let object = { instru: instru, expiry: expiry_date, strike: this.mapService.parseScrip(scrip).scrip, optionType: this.mapService.parseScrip(scrip).type };
                    let symbol = this.mapService.getMapKey(object);
                    let ltp = value[curr_date_time];
                    this.mapService.setLtp(symbol, ltp);
                }
            }
        }
        // console.log('ST ltpMap', this.mapService.ltpMap);
    }
    initForCallsPuts_simulated_1(charts_instru, expiry_date, show_charts, st_chart_radio, st_chart_strike) {
        for (let key in this.charts) {
            if (Object.prototype.hasOwnProperty.call(this.charts, key)) {
                let chart = this.charts[key];
                chart.remove();
            }
        }
        this.charts = {};
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts = [];
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_values = [];
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print = [];
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print_strangle = [];
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_exits = [];
        let increment = 5;
        if (st_chart_radio === '1min') {
            increment = 1;
        }
        let currDate = new Date(expiry_date);
        currDate.setDate(currDate.getDate() + 1);
        currDate.setHours(9);
        currDate.setMinutes(30);
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        for (let n = 0; n <= 6; n++) {
            let count = 0;
            while (true) { // find working day
                currDate.setDate(currDate.getDate() - 1);
                currDate.setHours(9);
                currDate.setMinutes(30);
                console.log('ST curr date', currDate);
                let curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
                let simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
                this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
                let e = this.mapService.getScripLTP(null, null, charts_instru, null);
                if (e) {
                    break;
                }
                else {
                    console.log('ST curr date going back');
                }
            }
            if (n === 0 || n === 1) { // skipping 0DTE and 1DTE as using next week expiry for these days
                continue;
            }
            let distance_to_search = 1000;
            let strike_diff = 50;
            if (charts_instru === 'BANKNIFTY') {
                strike_diff = 100;
                distance_to_search = 6000;
            }
            else if (charts_instru === 'FINNIFTY') {
                strike_diff = 50;
            }
            else if (charts_instru === 'MIDCPNIFTY') {
                strike_diff = 25;
            }
            else if (charts_instru === 'SENSEX') {
                strike_diff = 100;
            }
            else if (charts_instru === 'BANKEX') {
                strike_diff = 100;
            }
            else if (charts_instru === 'USDINR') {
                strike_diff = 0.25;
            }
            //////// SPOT PLOTTING ////////
            if (show_charts) {
                let arr_spot = this.processData_simulated(charts_instru, '', '', currDate, false, null, null, false, increment);
                let data_spot = [];
                for (let j = 0; j < arr_spot.length; j++) {
                    let element = arr_spot[j];
                    let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
                    let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
                    data_spot.push(data_entry);
                }
                let div_id_spot = 'opt_chart_' + n + '_spot';
                let chart_spot = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id_spot, {
                    width: 320,
                    height: 160,
                    timeScale: {
                        timeVisible: true,
                    },
                    crosshair: {
                        mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
                    },
                });
                let c_spot = chart_spot.addCandlestickSeries();
                c_spot.setData(data_spot);
                chart_spot.timeScale().fitContent();
                this.charts['opt_chart_' + n + '_spot'] = chart_spot;
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + n + '_spot'] = charts_instru;
            }
            ///////// OPTION PLOTTING ////////
            while (true) { // till 3'o clock
                let curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
                let simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
                this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
                let atm = this.mapService.getScripLTP(null, null, charts_instru, null);
                atm = (Math.round(atm / strike_diff) * strike_diff);
                // console.log('ST atm', atm);
                console.log('curr time', currDate);
                let ce_strike = this.findPremiumStrike(charts_instru, expiry_date, atm, 'CE', strike_diff, 40, distance_to_search);
                let stTrigger_ce = this.isSTCondition(charts_instru, ce_strike, 'CE', currDate, increment);
                if (stTrigger_ce[0] === true) {
                    if (show_charts) {
                        let div_id = 'opt_chart_' + n + '_' + count;
                        console.log('div_id', div_id);
                        let chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
                            width: 320,
                            height: 180,
                            timeScale: {
                                timeVisible: true,
                            },
                            crosshair: {
                                mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
                            },
                        });
                        let c = chart.addCandlestickSeries();
                        c.setData(this.getCurrDateData(currDate, stTrigger_ce[1]));
                        let line1 = chart.addLineSeries({ lineWidth: 1 });
                        line1.setData(this.getCurrDateData(currDate, stTrigger_ce[2]));
                        chart.timeScale().fitContent();
                        this.charts['opt_chart_' + n + '_' + count] = chart;
                    }
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + n + '_' + count] = ce_strike + 'CE ' + currDate.toLocaleString();
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_values['opt_chart_' + n + '_' + count] = stTrigger_ce[3];
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print['opt_chart_' + n + '_' + count] = ce_strike + 'CE,' + currDate.toLocaleString() + ',' + stTrigger_ce[3];
                    count++;
                }
                let pe_strike = this.findPremiumStrike(charts_instru, expiry_date, atm, 'PE', strike_diff, 40, distance_to_search);
                let stTrigger_pe = this.isSTCondition(charts_instru, pe_strike, 'PE', currDate, increment);
                if (stTrigger_pe[0] === true) {
                    if (show_charts) {
                        let div_id = 'opt_chart_' + n + '_' + count;
                        console.log('div_id', div_id);
                        let chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
                            width: 320,
                            height: 180,
                            timeScale: {
                                timeVisible: true,
                            },
                            crosshair: {
                                mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
                            },
                        });
                        let c = chart.addCandlestickSeries();
                        c.setData(this.getCurrDateData(currDate, stTrigger_pe[1]));
                        let line1 = chart.addLineSeries({ lineWidth: 1 });
                        line1.setData(this.getCurrDateData(currDate, stTrigger_pe[2]));
                        chart.timeScale().fitContent();
                        this.charts['opt_chart_' + n + '_' + count] = chart;
                    }
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + n + '_' + count] = pe_strike + 'PE ' + currDate.toLocaleString();
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_values['opt_chart_' + n + '_' + count] = stTrigger_pe[3];
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print['opt_chart_' + n + '_' + count] = pe_strike + 'PE,' + currDate.toLocaleString() + ',' + stTrigger_pe[3];
                    count++;
                }
                currDate.setMinutes(currDate.getMinutes() + increment);
                if (currDate.getHours() >= 15 && currDate.getMinutes() >= 5) {
                    break;
                }
            }
            //this.processStrangle(charts_instru, expiry_date, strike_diff, distance_to_search, currDate, n);
        }
        let str = '';
        for (let key in _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print) {
            if (Object.prototype.hasOwnProperty.call(_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print, key)) {
                let values = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print[key];
                str += values + '\r\n';
            }
        }
        for (let key in _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print_strangle) {
            if (Object.prototype.hasOwnProperty.call(_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print_strangle, key)) {
                let values = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print_strangle[key];
                str += values + '\r\n';
            }
        }
        let sum = 0;
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_exits.forEach(element => {
            sum += element;
        });
        console.log('done loading\r\n', str, sum);
    }
    isSTCondition(charts_instru, strike, type, currDate, increment) {
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        let arr = this.processData_simulated(charts_instru, strike, type, currDate, false, null, null, true, increment);
        let data = [];
        for (let j = 0; j < arr.length; j++) {
            let element = arr[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
            data.push(data_entry);
        }
        let st_arr = this.supertrend_calc(data); // 0: ST of 10 2, 1: ST of 7 3
        let localISOTime_tofind = (new Date(currDate.getTime() - tzoffset)).toISOString();
        let time_tofind = Date.parse(localISOTime_tofind) / 1000;
        let obj_curr = st_arr[0].find(o => o.time === time_tofind);
        let prev_time = new Date(currDate);
        prev_time.setMinutes(prev_time.getMinutes() - increment);
        let localISOTime_prev = (new Date(prev_time.getTime() - tzoffset)).toISOString();
        let time_prev = Date.parse(localISOTime_prev) / 1000;
        let obj_prev = st_arr[0].find(o => o.time === time_prev);
        if (increment === 5 && currDate.getHours() === 9 && currDate.getMinutes() === 30) {
            // ST green at 9:30 since open, only for 5 mins chart
            /* let time_920 = new Date(currDate);
            time_920.setMinutes(time_920.getMinutes() - 10);
            let localISOTime_920 = (new Date(time_920.getTime() - tzoffset)).toISOString();
            let time_920_ = Date.parse(localISOTime_920) / 1000 as any;
            let obj_920 = st_arr[0].find(o => o.time === time_920_);
      
            let time_915 = new Date(currDate);
            time_915.setMinutes(time_915.getMinutes() - 15);
            let localISOTime_915 = (new Date(time_915.getTime() - tzoffset)).toISOString();
            let time_915_ = Date.parse(localISOTime_915) / 1000 as any;
            let obj_915 = st_arr[0].find(o => o.time === time_915_); */
            if (obj_prev.color === 'green' && obj_curr.color === 'green' /* && obj_920.color === 'green' && obj_915.color === 'green' */) {
                console.log('ST found continuation at open', obj_prev, obj_curr);
                let values = this.findSTExit(st_arr[0], data, currDate, increment);
                return [true, data, st_arr[0], values];
            }
        }
        if (obj_prev && obj_curr && obj_prev.color === 'red' && obj_curr.color === 'green') {
            console.log('ST found', obj_prev, obj_curr);
            let values = this.findSTExit(st_arr[0], data, currDate, increment);
            return [true, data, st_arr[0], values];
        }
        else {
            return [false];
        }
    }
    findSTExit(st_arr, data, currDate, increment) {
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        let target = 8;
        let SL = -8;
        let exit_done = null;
        let entry = null;
        let high = null;
        let low = null;
        let high_before_low = null;
        let exit = null;
        let st_at_entry = null;
        let prev_st = null;
        let cDate0 = new Date(currDate);
        let localISOTime0 = (new Date(cDate0.getTime() - tzoffset)).toISOString();
        let time0 = Date.parse(localISOTime0) / 1000;
        let data_curr0 = data.find(o => o.time === time0);
        entry = data_curr0.close;
        let st_curr0 = st_arr.find(o => o.time === time0);
        st_at_entry = st_curr0.value;
        let cDate = new Date(currDate);
        let entry_candle = true;
        while (true) {
            let localISOTime = (new Date(cDate.getTime() - tzoffset)).toISOString();
            let time = Date.parse(localISOTime) / 1000;
            let data_curr = data.find(o => o.time === time);
            if (!entry_candle && exit_done === null) {
                if (data_curr.high - entry >= target) {
                    exit_done = target;
                }
                else if (data_curr.low - entry <= SL) {
                    exit_done = SL;
                }
            }
            if (entry_candle === true) { // skip entry candle
                low = 999;
                high_before_low = entry;
            }
            else if (data_curr && data_curr.low < low) {
                low = data_curr.low;
                high_before_low = high;
            }
            if (entry_candle === true) { // skip entry candle
                high = 0;
            }
            else if (data_curr && data_curr.high > high) {
                high = data_curr.high;
            }
            let obj_curr = st_arr.find(o => o.time === time);
            // console.log('findSTExit', cDate, obj_curr.color, data_curr.close);
            if (obj_curr && obj_curr.color === 'red') {
                exit = data_curr.close;
                break;
            }
            if (obj_curr) {
                prev_st = obj_curr.value;
            }
            cDate.setMinutes(cDate.getMinutes() + increment);
            if (cDate.getHours() >= 15 && cDate.getMinutes() >= 20) {
                exit = data_curr.close;
                break;
            }
            entry_candle = false;
        }
        if (exit_done === null) {
            exit_done = exit - entry;
        }
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_exits.push(exit_done);
        let target_reached_at_some_time = 'No';
        if (high - entry >= target) {
            target_reached_at_some_time = 'Yes';
        }
        return Math.round(entry * 10) / 10 + ',' + Math.round(high * 10) / 10 + ',' + Math.round(low * 10) / 10 + ',' + Math.round(exit * 10) / 10 + ',' + Math.round(st_at_entry * 10) / 10 + ',' + Math.round(prev_st * 10) / 10 /*   + ',' + Math.round(exit_done * 10) / 10 + ',' + target_reached_at_some_time */; // [entry, high, low, exit, st_at_entry, prev_st, exit_done, target_reached] rounded to 1 decimal
    }
    findPremiumStrike(instru, expiry, atm_strike, type, strike_diff, premium_to_find, distance_to_search) {
        let selected_strike;
        let selected_premium;
        let min_diff = 99999999;
        if (type === 'CE') {
            for (let strike = atm_strike; strike <= atm_strike + distance_to_search; strike += strike_diff) {
                let ltp = this.mapService.getScripLTP(instru, new Date(expiry), strike, 'CE');
                let diff = Math.abs(ltp - premium_to_find);
                if (diff < min_diff) {
                    min_diff = diff;
                    selected_strike = strike;
                    selected_premium = ltp;
                }
            }
        }
        else if (type === 'PE') {
            for (let strike = atm_strike; strike >= atm_strike - distance_to_search; strike -= strike_diff) {
                let ltp = this.mapService.getScripLTP(instru, new Date(expiry), strike, 'PE');
                let diff = Math.abs(ltp - premium_to_find);
                if (diff < min_diff) {
                    min_diff = diff;
                    selected_strike = strike;
                    selected_premium = ltp;
                }
            }
        }
        console.log('selecting strike', selected_strike, type, selected_premium);
        return selected_strike;
    }
    expiryStrangles(charts_instru, expiry_date) {
        let distance1 = 150;
        let distance2 = 100;
        let strike_diff = 50;
        if (charts_instru === 'BANKNIFTY') {
            strike_diff = 100;
            distance1 = 400;
            distance2 = 300;
        }
        else if (charts_instru === 'FINNIFTY') {
            strike_diff = 50;
        }
        else if (charts_instru === 'MIDCPNIFTY') {
            strike_diff = 25;
        }
        else if (charts_instru === 'SENSEX') {
            strike_diff = 100;
        }
        else if (charts_instru === 'BANKEX') {
            strike_diff = 100;
        }
        else if (charts_instru === 'USDINR') {
            strike_diff = 0.25;
        }
        this.fullDayStrangle(charts_instru, expiry_date, expiry_date, strike_diff, distance1, 9, 20);
        this.fullDayStrangle(charts_instru, expiry_date, expiry_date, strike_diff, distance1, 11, 0);
        this.fullDayStrangle(charts_instru, expiry_date, expiry_date, strike_diff, distance2, 13, 30);
    }
    fullDayStrangle(charts_instru, expiry_date, todayDate, strike_diff, distance_to_search, hour, minute, ce_strike_ = null, pe_strike_ = null) {
        let currDate = new Date(todayDate);
        // currDate.setDate(currDate.getDate() - 1);
        currDate.setHours(hour);
        currDate.setMinutes(minute);
        //console.log('strangle entry curr date', currDate);
        let curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
        let simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
        this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
        let atm = this.mapService.getScripLTP(null, null, charts_instru, null);
        atm = (Math.round(atm / strike_diff) * strike_diff);
        let ce_strike = atm + distance_to_search;
        if (ce_strike_) {
            ce_strike = ce_strike_;
        }
        let pe_strike = atm - distance_to_search;
        if (pe_strike_) {
            pe_strike = pe_strike_;
        }
        let ce_ltp_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike, 'CE');
        let pe_ltp_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike, 'PE');
        let strangle_entry = ce_ltp_entry + pe_ltp_entry;
        let high_ce = -1;
        let low_ce = 999;
        let high_pe = -1;
        let low_pe = 999;
        let strangle_high = -1;
        while (true) {
            if (currDate.getHours() >= 15 && currDate.getMinutes() > 20) {
                break;
            }
            currDate.setMinutes(currDate.getMinutes() + 1);
            curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
            simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
            this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
            let ce_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike, 'CE');
            let pe_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike, 'PE');
            if (ce_ltp > high_ce) {
                high_ce = ce_ltp;
            }
            if (pe_ltp > high_pe) {
                high_pe = pe_ltp;
            }
            if (ce_ltp < low_ce) {
                low_ce = ce_ltp;
            }
            if (pe_ltp < low_pe) {
                low_pe = pe_ltp;
            }
            if ((ce_ltp + pe_ltp) > strangle_high) {
                strangle_high = (ce_ltp + pe_ltp);
            }
        }
        currDate.setHours(15);
        currDate.setMinutes(20);
        //console.log('strangle exit curr date', currDate);
        curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
        simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
        this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
        let ce_ltp_exit = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike, 'CE');
        let pe_ltp_exit = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike, 'PE');
        let strangle_exit = ce_ltp_exit + pe_ltp_exit;
        console.log('strangle:', charts_instru + ',' + expiry_date + ',' + hour + ' ' + minute + ',' + ce_ltp_entry + ',' + pe_ltp_entry + ',' + (Math.round(strangle_entry * 10) / 10) + ',' + ce_ltp_exit + ',' + pe_ltp_exit + ',' + (Math.round(strangle_exit * 10) / 10) + ',' + (Math.round(strangle_high * 10) / 10) + ',' + high_ce + ',' + low_ce + ',' + high_pe + ',' + low_pe);
        // AppConstants.st_simulate_charts_print['opt_chart_' + n + '_strangle'] = 'strangle,' + currDate.toLocaleString() + ',' + (Math.round(strangle_entry * 10) / 10) + ',' + (Math.round(strangle_exit * 10) / 10);
        //AppConstants.st_simulate_charts_print_strangle['opt_chart_' + n + '_strangle'] = 'strangle,' + currDate.toLocaleString() + ',' + (Math.round(strangle_entry * 10) / 10) + ',' + (Math.round(strangle_exit * 10) / 10);
    }
    perDayDriver(charts_instru, expiry_date, test) {
        let distance_to_search = 2000;
        let strike_diff = 50;
        if (charts_instru === 'BANKNIFTY') {
            strike_diff = 100;
            distance_to_search = 6000;
        }
        else if (charts_instru === 'FINNIFTY') {
            strike_diff = 50;
        }
        else if (charts_instru === 'MIDCPNIFTY') {
            strike_diff = 25;
        }
        else if (charts_instru === 'SENSEX') {
            strike_diff = 100;
        }
        else if (charts_instru === 'BANKEX') {
            strike_diff = 100;
        }
        else if (charts_instru === 'USDINR') {
            strike_diff = 0.25;
        }
        let currDate = new Date(expiry_date);
        currDate.setDate(currDate.getDate() + 1);
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        for (let n = 0; n <= 6; n++) {
            let counter = 0;
            while (true) { // find working day
                currDate.setDate(currDate.getDate() - 1);
                currDate.setHours(9);
                currDate.setMinutes(30);
                console.log('perDayDriver curr date', currDate);
                let curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
                let simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
                this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
                let e = this.mapService.getScripLTP(null, null, charts_instru, null);
                if (e) {
                    break;
                }
                else {
                    counter = counter + 1;
                    if (counter == 5) {
                        console.log('perDayDriver exiting');
                        return;
                    }
                    console.log('perDayDriver curr date going back');
                }
            }
            if (test === 'strangle_SL_reentry') {
                /* this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 9, 30, n, 10);
                this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 10);
                this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 13, 30, n, 10);
        
                this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 9, 30, n, 20);
                this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 20);
                this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 13, 30, n, 20);
        
                this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 9, 30, n, 40);
                this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 40);
                this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 13, 30, n, 40);
        
                // No SL
                this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 9, 30, n, 999999);
                this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 999999);
                this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 13, 30, n, 999999); */
                // this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 10);
                //this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 9, 30, n, 60);
                //this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 60);
                //let return_1 = this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 10, '1');
                //let return_2 = this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 30, '2');
                //let return_0 = this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 10, '');
                // let return_1 = this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 10, '', 5, 5, false);
                //let return_2 = this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 10, '', 10, 8);
                //let return_12 = this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 12, 10, 10, n, 10, '2');
                //let return_2 = this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 12, 10, 10, n, 12, '2');
                let return_1 = this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 10, '', 10, 5, false, false);
                let return_2 = this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 10, 10, n, 10, '', 10, 5, false, true);
                let ce_strike = return_1.ce_strike;
                let pe_strike = return_1.pe_strike;
                let live_pnl1 = return_1.live_pnl;
                let live_pnl2 = return_2.live_pnl;
                /* let live_pnl_comb = [];
                for (let i = 0; i < live_pnl1.length; i++) {
                  let element1 = live_pnl1[i];
                  let c_date = element1[0];
                  let value1 = element1[1];
                  let value2;
                  for (let j = 0; j < live_pnl2.length; j++) {
                    let element2 = live_pnl2[j];
                    if (c_date.getTime() === element2[0].getTime()) {
                      value2 = element2[1];
                    }
                  }
                  let value = (value1 + value2) / 2;
                  live_pnl_comb.push([c_date, value]);
                } */
                let ce_markers_comb = return_1.ce_markers.concat(return_2.ce_markers);
                let pe_markers_comb = return_1.pe_markers.concat(return_2.pe_markers);
                let strangle_markers_comb = return_1.strangle_markers.concat(return_2.strangle_markers);
                let return_3 = this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 9, 45, n, 10, '', 10, 5, false, false);
                let return_4 = this.strangle_SL_reentry(charts_instru, expiry_date, currDate, 25, 9, 45, n, 10, '', 10, 5, false, true);
                let strangle_markers_comb2 = return_3.strangle_markers.concat(return_4.strangle_markers);
                if (n !== 5 && n !== 6) {
                    // this.strangle_SL_reentry_charts(charts_instru, currDate, 1, n, ce_strike, pe_strike, live_pnl_comb, ce_markers_comb, pe_markers_comb, strangle_markers_comb);
                    this.strangle_SL_reentry_charts(charts_instru, currDate, 1, n, ce_strike, pe_strike, live_pnl1, return_1.ce_markers, return_1.pe_markers, [] /* return_2.strangle_markers */, live_pnl2);
                    this.plotPnlChart(n, return_3.live_pnl, return_4.live_pnl, [] /* strangle_markers_comb2 */, '_3');
                }
            }
            if (test === 'long_fly') {
                if (n === 5) {
                    let live_pnl1 = this.long_fly(charts_instru, expiry_date, currDate, n, 50);
                    let live_pnl2 = this.long_fly(charts_instru, expiry_date, currDate, n, 100);
                }
            }
        }
        let str = '';
        for (let i = 0; i < this.backtestResult.length; i++) {
            str += this.backtestResult[i] + '\r\n';
        }
        console.log('done loading strangle_SL_reentry \r\n', str);
    }
    strangle_SL_reentry(charts_instru, expiry_date, todayDate, premium_to_search, hour, minute, dte, SL, marker_id = '', rollout_premium = null, rollout_SL = null, hedge = false, rollIn = false) {
        let live_pnl = [];
        let ce_markers = [];
        let pe_markers = [];
        let strangle_markers = [];
        let rollout_ce_strike;
        let rollout_ce_strike_entry;
        let rollout_ce_strike_isOpen = false;
        let rollout_pe_strike;
        let rollout_pe_strike_entry;
        let rollout_pe_strike_isOpen = false;
        let bookedProfit_ce = 0;
        let bookedProfit_pe = 0;
        let rollin_ce = false;
        let rollin_pe = false;
        let rollin_threshold = 8;
        let distance_to_search = 1000;
        let strike_diff = 50;
        if (charts_instru === 'BANKNIFTY') {
            strike_diff = 100;
            distance_to_search = 6000;
        }
        else if (charts_instru === 'FINNIFTY') {
            strike_diff = 50;
        }
        else if (charts_instru === 'MIDCPNIFTY') {
            strike_diff = 25;
        }
        else if (charts_instru === 'SENSEX') {
            strike_diff = 100;
        }
        else if (charts_instru === 'BANKEX') {
            strike_diff = 100;
        }
        else if (charts_instru === 'USDINR') {
            strike_diff = 0.25;
        }
        let currDate = new Date(todayDate);
        // currDate.setDate(currDate.getDate() - 1);
        currDate.setHours(hour);
        currDate.setMinutes(minute);
        //console.log('strangle entry curr date', currDate);
        let curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
        let simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
        this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
        let atm = this.mapService.getScripLTP(null, null, charts_instru, null);
        atm = (Math.round(atm / strike_diff) * strike_diff);
        let ce_strike = this.findPremiumStrike(charts_instru, expiry_date, atm, 'CE', strike_diff, premium_to_search, distance_to_search);
        let pe_strike = this.findPremiumStrike(charts_instru, expiry_date, atm, 'PE', strike_diff, premium_to_search, distance_to_search);
        let ce_ltp_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike, 'CE');
        let pe_ltp_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike, 'PE');
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + dte + '_spot'] = charts_instru;
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + dte + '_0'] = ce_strike + 'CE ';
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + dte + '_1'] = pe_strike + 'PE ';
        // AppConstants.st_simulate_charts_values['opt_chart_' + dte + '_0'] = stTrigger_pe[3];
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_values['opt_chart_' + dte + '_0'] = ce_ltp_entry;
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_values['opt_chart_' + dte + '_1'] = pe_ltp_entry;
        let strangle_entry = ce_ltp_entry + pe_ltp_entry;
        if (hour === 9) {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_values['opt_chart_' + dte + '_2'] = (Math.round(strangle_entry * 10) / 10);
        }
        else {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_values['opt_chart_' + dte + '_3'] = (Math.round(strangle_entry * 10) / 10);
        }
        let ce_hedge_strike = null;
        let pe_hedge_strike = null;
        let ce_hedge_entry = null;
        let pe_hedge_entry = null;
        if (hedge) {
            let counter_ce = 1000;
            while (!ce_hedge_strike) {
                let c = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike + counter_ce, 'CE');
                if (c) {
                    ce_hedge_strike = ce_strike + counter_ce;
                    ce_hedge_entry = c;
                    break;
                }
                else {
                    counter_ce += strike_diff;
                }
            }
            let counter_pe = 1500;
            while (!pe_hedge_strike) {
                let c = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike - counter_pe, 'PE');
                if (c) {
                    pe_hedge_strike = pe_strike - counter_pe;
                    pe_hedge_entry = c;
                    break;
                }
                else {
                    counter_pe -= strike_diff;
                }
            }
            ce_markers.push([new Date(currDate), 'H' + marker_id + ' ' + ce_hedge_entry]);
            pe_markers.push([new Date(currDate), 'H' + marker_id + ' ' + pe_hedge_entry]);
            strangle_markers.push([new Date(currDate), 'H' + marker_id + ' ' + (Math.round((ce_hedge_entry + pe_hedge_entry) * 10) / 10)]);
            console.log('strangle_SL_reentry hedges entry', ce_hedge_strike, ce_hedge_entry, pe_hedge_strike, pe_hedge_entry);
        }
        let pnl = 0;
        let isCE_open = true;
        let isPE_open = true;
        while (true) {
            if (currDate.getHours() >= 15 && currDate.getMinutes() >= 20) {
                break;
            }
            currDate.setMinutes(currDate.getMinutes() + 1);
            curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
            simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
            this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
            let ce_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike, 'CE');
            let pe_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike, 'PE');
            let l_pnl = pnl;
            if (isCE_open) {
                l_pnl += ce_ltp_entry - ce_ltp;
            }
            if (isPE_open) {
                l_pnl += pe_ltp_entry - pe_ltp;
            }
            if (rollout_ce_strike_isOpen) {
                let ce_rollout_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), rollout_ce_strike, 'CE');
                l_pnl += rollout_ce_strike_entry - ce_rollout_ltp;
            }
            if (rollout_pe_strike_isOpen) {
                let pe_rollout_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), rollout_pe_strike, 'PE');
                l_pnl += rollout_pe_strike_entry - pe_rollout_ltp;
            }
            if (hedge) {
                let ce_hedge_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_hedge_strike, 'CE');
                l_pnl += ce_hedge_ltp - ce_hedge_entry;
                let pe_hedge_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_hedge_strike, 'PE');
                l_pnl += pe_hedge_ltp - pe_hedge_entry;
            }
            live_pnl.push([new Date(currDate), l_pnl]);
            if (rollIn && isCE_open && isPE_open && rollin_pe === false && ce_ltp && pe_ltp && ce_ltp >= (ce_ltp_entry + rollin_threshold)) {
                rollin_pe = true;
                bookedProfit_pe += pe_ltp_entry - pe_ltp;
                pnl += pe_ltp_entry - pe_ltp;
                pe_strike = pe_strike + strike_diff;
                pe_ltp_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike, 'PE');
                console.log('Roll In PE', ce_ltp, pe_strike, pe_ltp_entry);
                strangle_markers.push([new Date(currDate), 'RIP' + marker_id + ' ' + pe_ltp_entry]);
            }
            if (isCE_open && ce_ltp >= (ce_ltp_entry + SL + +bookedProfit_ce)) {
                pnl += ce_ltp_entry - ce_ltp;
                isCE_open = false;
                console.log('strangle_SL_reentry CE SL hit', ce_ltp, pnl);
                ce_markers.push([new Date(currDate), 'SL' + marker_id + ' ' + ce_ltp]);
                strangle_markers.push([new Date(currDate), 'CE SL' + marker_id + ' ' + ce_ltp]);
                if (rollout_premium) {
                    let atm = this.mapService.getScripLTP(null, null, charts_instru, null);
                    atm = (Math.round(atm / strike_diff) * strike_diff);
                    rollout_ce_strike = this.findPremiumStrike(charts_instru, expiry_date, atm, 'CE', strike_diff, rollout_premium, distance_to_search);
                    rollout_ce_strike_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), rollout_ce_strike, 'CE');
                    rollout_ce_strike_isOpen = true;
                    console.log('strangle_SL_reentry rollout_ce_strike', rollout_ce_strike, rollout_ce_strike_entry);
                    ce_markers.push([new Date(currDate), 'RO' + marker_id + ' ' + rollout_ce_strike_entry]);
                    strangle_markers.push([new Date(currDate), 'RO' + marker_id + ' ' + rollout_ce_strike_entry]);
                }
            }
            else if (!isCE_open && ce_ltp <= ce_ltp_entry) {
                ce_ltp_entry = ce_ltp;
                isCE_open = true;
                console.log('strangle_SL_reentry CE Reentry', ce_ltp);
                ce_markers.push([new Date(currDate), 'RE' + marker_id + ' ' + ce_ltp]);
                strangle_markers.push([new Date(currDate), 'CE RE' + marker_id + ' ' + ce_ltp]);
                if (rollout_premium && rollout_ce_strike_isOpen) {
                    let e = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), rollout_ce_strike, 'CE');
                    pnl += rollout_ce_strike_entry - e;
                    rollout_ce_strike_isOpen = false;
                    console.log('strangle_SL_reentry rollout_ce_strike orig reentry', rollout_ce_strike, e);
                    ce_markers.push([new Date(currDate), 'ROE' + marker_id + ' ' + e]);
                    strangle_markers.push([new Date(currDate), 'ROE' + marker_id + ' ' + e]);
                }
            }
            if (rollIn && isPE_open && isCE_open && rollin_ce === false && pe_ltp && ce_ltp && pe_ltp >= (pe_ltp_entry + rollin_threshold)) {
                rollin_ce = true;
                bookedProfit_ce += ce_ltp_entry - ce_ltp;
                pnl += ce_ltp_entry - ce_ltp;
                ce_strike = ce_strike - strike_diff;
                ce_ltp_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike, 'CE');
                console.log('Roll In CE', pe_ltp, ce_strike, ce_ltp_entry);
                strangle_markers.push([new Date(currDate), 'RIC' + marker_id + ' ' + ce_ltp_entry]);
            }
            if (isPE_open && pe_ltp >= (pe_ltp_entry + SL + bookedProfit_pe)) {
                pnl += pe_ltp_entry - pe_ltp;
                isPE_open = false;
                console.log('strangle_SL_reentry PE SL hit', pe_ltp, pnl);
                pe_markers.push([new Date(currDate), 'SL' + marker_id + ' ' + pe_ltp]);
                strangle_markers.push([new Date(currDate), 'PE SL' + marker_id + ' ' + pe_ltp]);
                if (rollout_premium) {
                    let atm = this.mapService.getScripLTP(null, null, charts_instru, null);
                    atm = (Math.round(atm / strike_diff) * strike_diff);
                    rollout_pe_strike = this.findPremiumStrike(charts_instru, expiry_date, atm, 'PE', strike_diff, rollout_premium, distance_to_search);
                    rollout_pe_strike_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), rollout_pe_strike, 'PE');
                    rollout_pe_strike_isOpen = true;
                    console.log('strangle_SL_reentry rollout_pe_strike', rollout_pe_strike, rollout_pe_strike_entry);
                    pe_markers.push([new Date(currDate), 'RO' + marker_id + ' ' + rollout_pe_strike_entry]);
                    strangle_markers.push([new Date(currDate), 'RO' + marker_id + ' ' + rollout_pe_strike_entry]);
                }
            }
            else if (!isPE_open && pe_ltp <= pe_ltp_entry) {
                pe_ltp_entry = pe_ltp;
                isPE_open = true;
                console.log('strangle_SL_reentry PE Reentry', pe_ltp);
                pe_markers.push([new Date(currDate), 'RE' + marker_id + ' ' + pe_ltp]);
                strangle_markers.push([new Date(currDate), 'PE RE' + marker_id + ' ' + pe_ltp]);
                if (rollout_premium && rollout_pe_strike_isOpen) {
                    let e = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), rollout_pe_strike, 'PE');
                    pnl += rollout_pe_strike_entry - e;
                    rollout_pe_strike_isOpen = false;
                    console.log('strangle_SL_reentry rollout_pe_strike orig reentry', rollout_pe_strike, e);
                    pe_markers.push([new Date(currDate), 'ROE' + marker_id + ' ' + e]);
                    strangle_markers.push([new Date(currDate), 'ROE' + marker_id + ' ' + e]);
                }
            }
            if (rollout_premium) {
                let ce_rollout_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), rollout_ce_strike, 'CE');
                if (rollout_ce_strike_isOpen && ce_rollout_ltp >= (rollout_ce_strike_entry + rollout_SL)) {
                    pnl += rollout_ce_strike_entry - ce_rollout_ltp;
                    rollout_ce_strike_isOpen = false;
                    console.log('strangle_SL_reentry rollout_ce_strike SL hit', ce_rollout_ltp, pnl);
                    ce_markers.push([new Date(currDate), 'ROE' + marker_id + ' ' + ce_rollout_ltp]);
                    strangle_markers.push([new Date(currDate), 'ROE' + marker_id + ' ' + ce_rollout_ltp]);
                }
                let pe_rollout_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), rollout_pe_strike, 'PE');
                if (rollout_pe_strike_isOpen && pe_rollout_ltp >= (rollout_pe_strike_entry + rollout_SL)) {
                    pnl += rollout_pe_strike_entry - pe_rollout_ltp;
                    rollout_pe_strike_isOpen = false;
                    console.log('strangle_SL_reentry rollout_pe_strike SL hit', pe_rollout_ltp, pnl);
                    pe_markers.push([new Date(currDate), 'ROE' + marker_id + ' ' + pe_rollout_ltp]);
                    strangle_markers.push([new Date(currDate), 'ROE' + marker_id + ' ' + pe_rollout_ltp]);
                }
            }
        }
        currDate.setHours(15);
        currDate.setMinutes(20);
        //console.log('strangle exit curr date', currDate);
        curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
        simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
        this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
        let ce_ltp_exit = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike, 'CE');
        let pe_ltp_exit = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike, 'PE');
        // let strangle_exit = ce_ltp_exit + pe_ltp_exit;
        if (isCE_open) {
            pnl += ce_ltp_entry - ce_ltp_exit;
            console.log('strangle_SL_reentry CE Exit', ce_ltp_exit, pnl);
        }
        if (isPE_open) {
            pnl += pe_ltp_entry - pe_ltp_exit;
            console.log('strangle_SL_reentry PE Exit', pe_ltp_exit, pnl);
        }
        if (rollout_ce_strike_isOpen) {
            let e = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), rollout_ce_strike, 'CE');
            pnl += rollout_ce_strike_entry - e;
            console.log('strangle_SL_reentry rollout_ce_strike Exit', e, pnl);
        }
        if (rollout_pe_strike_isOpen) {
            let e = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), rollout_pe_strike, 'PE');
            pnl += rollout_pe_strike_entry - e;
            console.log('strangle_SL_reentry rollout_pe_strike Exit', e, pnl);
        }
        if (hedge) {
            let ce_hedge_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_hedge_strike, 'CE');
            pnl += ce_hedge_ltp - ce_hedge_entry;
            let pe_hedge_ltp = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_hedge_strike, 'PE');
            pnl += pe_hedge_ltp - pe_hedge_entry;
            console.log('strangle_SL_reentry hedges exit', ce_hedge_strike, ce_hedge_ltp, pe_hedge_strike, pe_hedge_ltp);
        }
        pnl += bookedProfit_ce + bookedProfit_pe;
        let str = charts_instru + ',' + expiry_date + ',' + currDate + ',' + dte + ',' + hour + ' ' + minute + ',' + SL + ',' + ce_ltp_entry + ',' + pe_ltp_entry + ',' + (Math.round(strangle_entry * 10) / 10) + ',' + (Math.round(pnl * 10) / 10) + ',' + rollout_premium;
        this.backtestResult.push(str);
        console.log('strangle_SL_reentry:', charts_instru + ',' + expiry_date + ',' + currDate + ',' + dte + ',' + hour + ' ' + minute + ',' + SL + ',' + ce_ltp_entry + ',' + pe_ltp_entry + ',' + (Math.round(strangle_entry * 10) / 10) + ',' + pnl);
        if (dte !== 5 && dte !== 6) { // skipping 0DTE and 1DTE as using next week expiry for these days
            // this.strangle_SL_reentry_charts(charts_instru, currDate, 1, dte, ce_strike, pe_strike, live_pnl, ce_markers, pe_markers, strangle_markers);
            console.log('live pnl compare', live_pnl[live_pnl.length - 1][1], pnl);
        }
        return { ce_strike: ce_strike, pe_strike: pe_strike, live_pnl: live_pnl, ce_markers: ce_markers, pe_markers: pe_markers, strangle_markers: strangle_markers };
    }
    strangle_SL_reentry_charts(charts_instru, currDate, increment, n, strikeCE, strikePE, live_pnl, ce_markers, pe_markers, strangle_markers, live_pnl2, pnl_chart_id = null) {
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        let arr_spot = this.processData_simulated(charts_instru, '', '', currDate, false, null, null, false, increment);
        let data_spot = [];
        for (let j = 0; j < arr_spot.length; j++) {
            let element = arr_spot[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
            data_spot.push(data_entry);
        }
        let div_id_spot = 'opt_chart_' + n + '_spot';
        let chart_spot = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id_spot, {
            width: 320,
            height: 200,
            timeScale: {
                timeVisible: true,
            },
            crosshair: {
                mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
            },
        });
        let c_spot = chart_spot.addCandlestickSeries();
        c_spot.setData(data_spot);
        chart_spot.timeScale().fitContent();
        this.charts['opt_chart_' + n + '_spot'] = chart_spot;
        // CE 
        let arr_ce = this.processData_simulated(charts_instru, strikeCE, 'CE', currDate, false, null, null, true, increment);
        let data_ce = [];
        for (let j = 0; j < arr_ce.length; j++) {
            let element = arr_ce[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
            data_ce.push(data_entry);
        }
        let div_id_ce = 'opt_chart_' + n + '_0';
        let chart_ce = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id_ce, {
            width: 320,
            height: 200,
            timeScale: {
                timeVisible: true,
            },
            crosshair: {
                mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
            },
        });
        let c_ce = chart_ce.addCandlestickSeries();
        c_ce.setData(this.getCurrDateData(currDate, data_ce));
        let ce_markers_data = [];
        for (let j = 0; j < ce_markers.length; j++) {
            let element = ce_markers[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = {
                time: Date.parse(localISOTime) / 1000,
                position: 'belowBar',
                color: '#000000',
                shape: 'arrowUp',
                text: element[1],
            };
            ce_markers_data.push(data_entry);
        }
        c_ce.setMarkers(ce_markers_data);
        chart_ce.timeScale().fitContent();
        this.charts['opt_chart_' + n + '_0'] = chart_ce;
        // PE
        let arrPE = this.processData_simulated(charts_instru, strikePE, 'PE', currDate, false, null, null, true, increment);
        let dataPE = [];
        for (let j = 0; j < arrPE.length; j++) {
            let element = arrPE[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
            dataPE.push(data_entry);
        }
        let div_id_pe = 'opt_chart_' + n + '_1';
        let chart_pe = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id_pe, {
            width: 320,
            height: 200,
            timeScale: {
                timeVisible: true,
            },
            crosshair: {
                mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
            },
        });
        let c_pe = chart_pe.addCandlestickSeries();
        c_pe.setData(this.getCurrDateData(currDate, dataPE));
        let pe_markers_data = [];
        for (let j = 0; j < pe_markers.length; j++) {
            let element = pe_markers[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = {
                time: Date.parse(localISOTime) / 1000,
                position: 'belowBar',
                color: '#000000',
                shape: 'arrowUp',
                text: element[1],
            };
            pe_markers_data.push(data_entry);
        }
        c_pe.setMarkers(pe_markers_data);
        chart_pe.timeScale().fitContent();
        this.charts['opt_chart_' + n + '_1'] = chart_pe;
        // PnL
        if (!pnl_chart_id) {
            pnl_chart_id = '_2';
        }
        let div_id_pnl = 'opt_chart_' + n + pnl_chart_id;
        let chart_pnl = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id_pnl, {
            width: 320,
            height: 200,
            timeScale: {
                timeVisible: true,
            },
        });
        let data_pnl = [];
        for (let j = 0; j < live_pnl.length; j++) {
            let element = live_pnl[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = { time: Date.parse(localISOTime) / 1000, value: element[1] };
            data_pnl.push(data_entry);
        }
        let pnl_series = chart_pnl.addLineSeries({ lineWidth: 1 });
        pnl_series.setData(data_pnl);
        if (live_pnl2) {
            let data_pnl2 = [];
            for (let j = 0; j < live_pnl2.length; j++) {
                let element = live_pnl2[j];
                let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
                let data_entry = { time: Date.parse(localISOTime) / 1000, value: element[1] };
                data_pnl2.push(data_entry);
            }
            let pnl_series2 = chart_pnl.addLineSeries({ lineWidth: 1, color: '#FF0000', lineStyle: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.LineStyle.Dashed });
            pnl_series2.setData(data_pnl2);
        }
        let strangle_markers_data = [];
        for (let j = 0; j < strangle_markers.length; j++) {
            let element = strangle_markers[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = {
                time: Date.parse(localISOTime) / 1000,
                position: 'belowBar',
                color: '#000000',
                shape: 'arrowUp',
                text: element[1],
            };
            strangle_markers_data.push(data_entry);
        }
        pnl_series.setMarkers(strangle_markers_data);
        chart_pnl.timeScale().fitContent();
    }
    plotPnlChart(n, live_pnl, live_pnl2, strangle_markers, pnl_chart_id) {
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        if (!pnl_chart_id) {
            pnl_chart_id = '_3';
        }
        let div_id_pnl = 'opt_chart_' + n + pnl_chart_id;
        let chart_pnl = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id_pnl, {
            width: 320,
            height: 200,
            timeScale: {
                timeVisible: true,
            },
        });
        let data_pnl = [];
        for (let j = 0; j < live_pnl.length; j++) {
            let element = live_pnl[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = { time: Date.parse(localISOTime) / 1000, value: element[1] };
            data_pnl.push(data_entry);
        }
        let pnl_series = chart_pnl.addLineSeries({ lineWidth: 1 });
        pnl_series.setData(data_pnl);
        if (live_pnl2) {
            let data_pnl2 = [];
            for (let j = 0; j < live_pnl2.length; j++) {
                let element = live_pnl2[j];
                let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
                let data_entry = { time: Date.parse(localISOTime) / 1000, value: element[1] };
                data_pnl2.push(data_entry);
            }
            let pnl_series2 = chart_pnl.addLineSeries({ lineWidth: 1, color: '#FF0000', lineStyle: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.LineStyle.Dashed });
            pnl_series2.setData(data_pnl2);
        }
        let strangle_markers_data = [];
        for (let j = 0; j < strangle_markers.length; j++) {
            let element = strangle_markers[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = {
                time: Date.parse(localISOTime) / 1000,
                position: 'belowBar',
                color: '#000000',
                shape: 'arrowUp',
                text: element[1],
            };
            strangle_markers_data.push(data_entry);
        }
        pnl_series.setMarkers(strangle_markers_data);
        chart_pnl.timeScale().fitContent();
    }
    long_fly(charts_instru, expiry_date, todayDate, dte, hedge_distance) {
        let live_pnl = [];
        // live_pnl.push([new Date(currDate), l_pnl]);
        let strike_diff = 50;
        if (charts_instru === 'BANKNIFTY') {
            strike_diff = 100;
        }
        else if (charts_instru === 'FINNIFTY') {
            strike_diff = 50;
        }
        else if (charts_instru === 'MIDCPNIFTY') {
            strike_diff = 25;
        }
        else if (charts_instru === 'SENSEX') {
            strike_diff = 100;
        }
        else if (charts_instru === 'BANKEX') {
            strike_diff = 100;
        }
        else if (charts_instru === 'USDINR') {
            strike_diff = 0.25;
        }
        let currDate = new Date(todayDate);
        currDate.setHours(15);
        currDate.setMinutes(20);
        //console.log('strangle entry curr date', currDate);
        let curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
        let simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
        this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
        let atm = this.mapService.getScripLTP(null, null, charts_instru, null);
        atm = (Math.round(atm / strike_diff) * strike_diff);
        let ce_strike = atm;
        let pe_strike = atm;
        let ce_ltp_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike, 'CE');
        let pe_ltp_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike, 'PE');
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + dte + '_spot'] = charts_instru;
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + dte + '_0'] = '50';
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + dte + '_0'] = '100';
        if (!ce_ltp_entry || !pe_ltp_entry) {
            console.log('CE or PE premium is None');
            return;
        }
        let hedge_ce = ce_strike + hedge_distance;
        let hedge_pe = pe_strike - hedge_distance;
        let hedge_ce_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), hedge_ce, 'CE');
        let hedge_pe_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), hedge_pe, 'PE');
        if (!hedge_ce_entry || !hedge_pe_entry) {
            console.log('Hedge CE or PE premium is None');
            return;
        }
        let strangle_entry = ce_ltp_entry + pe_ltp_entry;
        currDate = new Date(expiry_date);
        currDate.setHours(15);
        currDate.setMinutes(20);
        curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
        simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
        this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
        let ce_ltp_exit = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike, 'CE');
        let pe_ltp_exit = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike, 'PE');
        let strangle_exit = ce_ltp_exit + pe_ltp_exit;
        let pnl = 0;
        pnl += ce_ltp_exit - ce_ltp_entry;
        pnl += pe_ltp_exit - pe_ltp_entry;
        let hedge_ce_exit = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), hedge_ce, 'CE');
        let hedge_pe_exit = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), hedge_pe, 'PE');
        pnl += hedge_ce_entry - hedge_ce_exit;
        pnl += hedge_pe_entry - hedge_pe_exit;
        pnl = Math.round(pnl * 10) / 10;
        console.log('Long fly', expiry_date, pnl);
        return live_pnl;
    }
}
BacktestService.ɵfac = function BacktestService_Factory(t) { return new (t || BacktestService)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_9__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_common_fyers_service__WEBPACK_IMPORTED_MODULE_4__.FyersService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_common_aliceblue_service__WEBPACK_IMPORTED_MODULE_5__.AliceblueService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_common_zerodha_service__WEBPACK_IMPORTED_MODULE_6__.ZerodhaService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵinject"](_app_service__WEBPACK_IMPORTED_MODULE_7__.AppService)); };
BacktestService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineInjectable"]({ token: BacktestService, factory: BacktestService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 8748:
/*!******************************************!*\
  !*** ./src/app/chart/chart.component.ts ***!
  \******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChartComponent": () => (/* binding */ ChartComponent)
/* harmony export */ });
/* harmony import */ var ng2_charts__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ng2-charts */ 3808);
/* harmony import */ var chartjs_plugin_annotation__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! chartjs-plugin-annotation */ 2057);
/* harmony import */ var chartjs_plugin_annotation__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(chartjs_plugin_annotation__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var _common_map_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/map.service */ 397);
/* harmony import */ var _common_application_constant__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/application.constant */ 8001);
/* harmony import */ var _common_models__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/models */ 8077);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../app.service */ 900);
/* harmony import */ var _common_zerodha_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/zerodha.service */ 1102);
/* harmony import */ var _common_websocket_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/websocket.service */ 4440);
/* harmony import */ var _common_angelwebsocket_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../common/angelwebsocket.service */ 4991);
/* harmony import */ var _chart_service__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./chart.service */ 2118);
/* harmony import */ var _charting_service__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./charting.service */ 5596);
/* harmony import */ var _backtest_service__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./backtest.service */ 6462);
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! @angular/common */ 6362);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! @angular/forms */ 587);
/* harmony import */ var _stock_chart_stock_chart_component__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../stock-chart/stock-chart.component */ 8805);



// import { prependOnceListener } from 'process';















function ChartComponent_div_87_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r36 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 127);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_87_button_6_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r36); const ctx_r35 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r35.startAlgo(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "Start");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_div_87_button_7_Template(rf, ctx) { if (rf & 1) {
    const _r38 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 127);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_87_button_7_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r38); const ctx_r37 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r37.stopAlgo(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "Stop");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_div_87_option_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "option", 128);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r39 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("value", item_r39);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", item_r39, " ");
} }
function ChartComponent_div_87_Template(rf, ctx) { if (rf & 1) {
    const _r41 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 121);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 122);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "input", 123);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_87_Template_input_ngModelChange_3_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r41); const ctx_r40 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r40.algoSimulated = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "label", 124);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](5, "Simulated");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](6, ChartComponent_div_87_button_6_Template, 2, 0, "button", 125);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](7, ChartComponent_div_87_button_7_Template, 2, 0, "button", 125);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "select", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_87_Template_select_ngModelChange_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r41); const ctx_r42 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r42.instruToTrade = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](9, ChartComponent_div_87_option_9_Template, 2, 2, "option", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "input", 126);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_87_Template_input_ngModelChange_10_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r41); const ctx_r43 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r43.expiryDateToTrade = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r0 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r0.algoSimulated);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx_r0.enableAlgo);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx_r0.enableAlgo);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r0.instruToTrade);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r0.supportedInstru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r0.expiryDateToTrade);
} }
function ChartComponent_div_88_tr_19_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "td", 132);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "td", 132);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "td", 132);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "td", 132);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "td", 132);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](10);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "td", 132);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](12);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const tbl_r45 = ctx.$implicit;
    const ctx_r44 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", tbl_r45.qty, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", tbl_r45.entry, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", tbl_r45.scrip, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", ctx_r44.getAlgoPosLTP(tbl_r45.scrip), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", tbl_r45.sl, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", tbl_r45.rollin, " ");
} }
function ChartComponent_div_88_Template(rf, ctx) { if (rf & 1) {
    const _r48 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 129);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "textarea", 130);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_88_Template_textarea_ngModelChange_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r48); const ctx_r47 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r47.algoLog = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "table", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "thead", 106);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "th", 131);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](7, "Qty");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "th", 131);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](9, "Entry");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "th", 131);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](11, "Strike");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "th", 131);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](13, "LTP");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "th", 131);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](15, "SL");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "th", 131);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](17, "RollIn");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](18, "tbody");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](19, ChartComponent_div_88_tr_19_Template, 13, 6, "tr", 108);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](20, "hr");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r1 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r1.algoLog);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](17);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r1.algo_pos);
} }
function ChartComponent_div_125_Template(rf, ctx) { if (rf & 1) {
    const _r50 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "input", 133);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_125_Template_input_ngModelChange_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r49 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r49.hide_payoff = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "label", 134);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](4, "Hide Payoff");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "input", 135);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_125_Template_input_ngModelChange_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r51 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r51.use_hypo_future = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "label", 136);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](8, "Use Hypothetical Future");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "input", 137);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_125_Template_input_ngModelChange_9_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r52 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r52.hypo_future_strike = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "input", 138);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_125_Template_input_ngModelChange_11_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r53 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r53.hide_roll3 = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "label", 139);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](13, "Hide Roll 3");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "input", 140);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_125_Template_input_ngModelChange_15_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r54 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r54.ce_side_overlay = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "label", 141);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](17, "CE side");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](18, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](19, "input", 142);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_125_Template_input_ngModelChange_19_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r55 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r55.pe_side_overlay = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](20, "label", 143);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](21, "PE side");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](22, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](23, "input", 144);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_125_Template_input_ngModelChange_23_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r56 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r56.straddle_shiftCE_overlay = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](24, "label", 145);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](25, "Straddle CE shift");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](26, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](27, "input", 146);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_125_Template_input_ngModelChange_27_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r57 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r57.straddle_shiftPE_overlay = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](28, "label", 147);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](29, "Straddle PE shift");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](30, "input", 148);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_125_Template_input_ngModelChange_30_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r58 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r58.straddle_shiftQty_overlay = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](31, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](32, "input", 149);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_125_Template_input_ngModelChange_32_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r59 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r59.payoff_overlay = $event; })("change", function ChartComponent_div_125_Template_input_change_32_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r60 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r60.payoffCheckboxChange($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](33, "label", 150);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](34, "Payoff Overlay");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](35, "input", 151);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_125_Template_input_ngModelChange_35_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r50); const ctx_r61 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r61.overlay_strike = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r2 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r2.hide_payoff);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r2.use_hypo_future);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r2.hypo_future_strike);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r2.hide_roll3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r2.ce_side_overlay);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r2.pe_side_overlay);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r2.straddle_shiftCE_overlay);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r2.straddle_shiftPE_overlay);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r2.straddle_shiftQty_overlay);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r2.payoff_overlay);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r2.overlay_strike);
} }
function ChartComponent_div_126_option_2_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "option", 128);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r65 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("value", item_r65);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", item_r65, " ");
} }
function ChartComponent_div_126_option_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "option");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const expiry_date_r66 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", expiry_date_r66, " ");
} }
function ChartComponent_div_126_Template(rf, ctx) { if (rf & 1) {
    const _r68 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 7);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "select", 152);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_126_Template_select_ngModelChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r67 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r67.simulate_instru = $event; })("change", function ChartComponent_div_126_Template_select_change_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r69 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r69.onSimulateInstruChange($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](2, ChartComponent_div_126_option_2_Template, 2, 2, "option", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "select", 152);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_126_Template_select_ngModelChange_3_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r70 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r70.simulate_expiries_arr_value = $event; })("change", function ChartComponent_div_126_Template_select_change_3_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r71 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r71.onSimulateExpiryChange($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](4, ChartComponent_div_126_option_4_Template, 2, 1, "option", 108);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "input", 153);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_126_Template_input_ngModelChange_5_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r72 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r72.simulateExpiryDate = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "input", 154);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_126_Template_input_ngModelChange_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r73 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r73.simulateStartDate = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_126_Template_button_click_7_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const _r64 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵreference"](30); return _r64.click(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](8, "Import");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "button", 155);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_126_Template_button_click_9_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r75 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r75.loadSimulatedNextMins(-120); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](10, "-120");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "button", 155);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_126_Template_button_click_11_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r76 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r76.loadSimulatedNextMins(120); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](12, "+120");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "button", 155);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_126_Template_button_click_13_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r77 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r77.loadSimulatedNextMins(-15); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](14, "-15");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "button", 155);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_126_Template_button_click_15_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r78 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r78.loadSimulatedNextMins(15); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](16, "+15");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](17, "button", 155);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_126_Template_button_click_17_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r79 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r79.loadSimulatedNextMins(-5); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](18, "-5");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](19, "button", 155);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_126_Template_button_click_19_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r80 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r80.loadSimulatedNextMins(5); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](20, "+5");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](21, "button", 155);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_126_Template_button_click_21_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r81 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r81.loadSimulatedNextMins(-1); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](22, "-1");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](23, "button", 155);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_126_Template_button_click_23_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r82 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r82.loadSimulatedNextMins(1); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](24, "+1");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](25, "div", 156);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](26, "input", 157);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_126_Template_input_ngModelChange_26_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r83 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r83.show_simulate_charts = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](27, "label", 158);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](28, "Show simulate charts");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](29, "input", 159, 160);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("change", function ChartComponent_div_126_Template_input_change_29_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r68); const ctx_r84 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r84.uploadExpiryFile($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](31, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](32);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r3 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r3.simulate_instru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r3.supportedInstru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r3.simulate_expiries_arr_value);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r3.simulate_expiries_arr);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r3.simulateExpiryDate);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r3.simulateStartDate);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](20);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r3.show_simulate_charts);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Date Time: ", ctx_r3.simulateCurrDateTimeString, "");
} }
function ChartComponent_span_129_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "span", 161);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, " Positions/Quantities match with actual positions ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_span_130_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "span", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, " Positions/Quantities do NOT match with actual positions ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_option_132_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "option", 128);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r85 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("value", item_r85);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", item_r85, " ");
} }
function ChartComponent_tr_161_td_4_Template(rf, ctx) { if (rf & 1) {
    const _r100 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 164);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "input", 184);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_td_4_Template_input_ngModelChange_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r100); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; return pos_r86.selected = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "input", 185);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_td_4_Template_input_ngModelChange_3_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r100); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; return pos_r86.selectedActual = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.selected)("disabled", pos_r86.exit !== 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.selectedActual)("disabled", pos_r86.exit !== 0);
} }
function ChartComponent_tr_161_button_19_Template(rf, ctx) { if (rf & 1) {
    const _r106 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 113);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_tr_161_button_19_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r106); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; const ctx_r104 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r104.executeOrder(pos_r86, "currentstrike"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "B");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_tr_161_button_20_Template(rf, ctx) { if (rf & 1) {
    const _r109 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 186);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_tr_161_button_20_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r109); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; const ctx_r107 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r107.executeOrder(pos_r86, "currentstrike"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "S");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_tr_161_div_21_Template(rf, ctx) { if (rf & 1) {
    const _r112 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "input", 187);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_div_21_Template_input_ngModelChange_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r112); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; return pos_r86.rollstrike = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "label", 188);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "input", 187);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_div_21_Template_input_ngModelChange_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r112); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; return pos_r86.rollstrike = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "label", 188);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](10);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](12);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "div", 16);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "input", 187);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_div_21_Template_input_ngModelChange_14_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r112); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; return pos_r86.rollstrike = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "label", 188);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](16);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](17, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](18);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    const ctx_r91 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate1"]("name", "inlineRadioOptions-", pos_r86.scrip, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate1"]("id", "inlineRadio1-", pos_r86.scrip, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("value", ctx_r91.getPosRollStrike(pos_r86, 2));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.rollstrike);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate1"]("for", "inlineRadio1-", pos_r86.scrip, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("", ctx_r91.getPosRollStrike(pos_r86, 2), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r91.getPosRollStrikeLTP(pos_r86, 2));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate1"]("name", "inlineRadioOptions-", pos_r86.scrip, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate1"]("id", "inlineRadio2-", pos_r86.scrip, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("value", ctx_r91.getPosRollStrike(pos_r86, 1));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.rollstrike);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate1"]("for", "inlineRadio2-", pos_r86.scrip, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("", ctx_r91.getPosRollStrike(pos_r86, 1), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r91.getPosRollStrikeLTP(pos_r86, 1));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate1"]("name", "inlineRadioOptions-", pos_r86.scrip, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate1"]("id", "inlineRadio3-", pos_r86.scrip, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("value", ctx_r91.getPosRollStrike(pos_r86, -1));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.rollstrike);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate1"]("for", "inlineRadio3-", pos_r86.scrip, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("", ctx_r91.getPosRollStrike(pos_r86, -1), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r91.getPosRollStrikeLTP(pos_r86, -1));
} }
function ChartComponent_tr_161_td_22_button_5_Template(rf, ctx) { if (rf & 1) {
    const _r122 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 113);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_tr_161_td_22_button_5_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r122); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2).$implicit; const ctx_r120 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r120.executeOrder(pos_r86, "newstrike"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "B");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_tr_161_td_22_button_6_Template(rf, ctx) { if (rf & 1) {
    const _r125 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 186);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_tr_161_td_22_button_6_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r125); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2).$implicit; const ctx_r123 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r123.executeOrder(pos_r86, "newstrike"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "S");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_tr_161_td_22_Template(rf, ctx) { if (rf & 1) {
    const _r128 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "td", 172);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 167);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "input", 189);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_td_22_Template_input_ngModelChange_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r128); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; return pos_r86.rollstrike_new = $event; })("keyup", function ChartComponent_tr_161_td_22_Template_input_keyup_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r128); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; const ctx_r129 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r129.rollStrikeKeyUp($event, pos_r86); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "div", 174);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](5, ChartComponent_tr_161_td_22_button_5_Template, 2, 0, "button", 175);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](6, ChartComponent_tr_161_td_22_button_6_Template, 2, 0, "button", 176);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    const ctx_r92 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.rollstrike_new);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r92.getLTP(pos_r86.expiry, pos_r86.rollstrike_new));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", pos_r86.qty > 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", pos_r86.qty < 0);
} }
function ChartComponent_tr_161_td_23_Template(rf, ctx) { if (rf & 1) {
    const _r134 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "td", 190);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "input", 191);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_td_23_Template_input_ngModelChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r134); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; return pos_r86.expiry = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.expiry);
} }
function ChartComponent_tr_161_td_24_Template(rf, ctx) { if (rf & 1) {
    const _r138 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "td", 132);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "input", 192);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_td_24_Template_input_ngModelChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r138); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; return pos_r86.exit = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.exit);
} }
function ChartComponent_tr_161_td_25_Template(rf, ctx) { if (rf & 1) {
    const _r142 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "td", 193);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "button", 194);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_tr_161_td_25_Template_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r142); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; const ctx_r140 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r140.rollPosition(pos_r86); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](2, "Roll");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_tr_161_td_26_Template(rf, ctx) { if (rf & 1) {
    const _r145 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "button", 194);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_tr_161_td_26_Template_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r145); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; const ctx_r143 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r143.splitPosition(pos_r86); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](2, "+");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_tr_161_td_27_Template(rf, ctx) { if (rf & 1) {
    const _r148 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "button", 194);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_tr_161_td_27_Template_button_click_1_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r148); const pos_r86 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; const ctx_r146 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r146.deletePosition(pos_r86); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](2, "X");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
const _c0 = function (a0, a1) { return { "positionExited": a0, "hidePositionRow": a1 }; };
const _c1 = function (a0, a1) { return { "red": a0, "blue": a1 }; };
const _c2 = function (a0, a1) { return { "text-danger": a0, "text-success": a1 }; };
function ChartComponent_tr_161_Template(rf, ctx) { if (rf & 1) {
    const _r150 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "tr", 162);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "td", 163);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 164);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "input", 165);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_Template_input_ngModelChange_3_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r150); const pos_r86 = restoredCtx.$implicit; return pos_r86.addToOrders = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](4, ChartComponent_tr_161_td_4_Template, 4, 4, "td", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "td", 166);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "div", 167);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "input", 168);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_Template_input_ngModelChange_7_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r150); const pos_r86 = restoredCtx.$implicit; return pos_r86.qty = $event; })("ngModelChange", function ChartComponent_tr_161_Template_input_ngModelChange_7_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r150); const pos_r86 = restoredCtx.$implicit; const ctx_r152 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r152.posQtyUpdated($event, pos_r86); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "input", 169);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_Template_input_ngModelChange_8_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r150); const pos_r86 = restoredCtx.$implicit; return pos_r86.roll_qty = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "td", 170);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "span", 162);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](11);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "td", 132);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "input", 171);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_Template_input_ngModelChange_13_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r150); const pos_r86 = restoredCtx.$implicit; return pos_r86.entry = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "td", 172);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "div", 167);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "input", 173);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_Template_input_ngModelChange_16_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r150); const pos_r86 = restoredCtx.$implicit; return pos_r86.scrip = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](17, "div", 174);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](18);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](19, ChartComponent_tr_161_button_19_Template, 2, 0, "button", 175);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](20, ChartComponent_tr_161_button_20_Template, 2, 0, "button", 176);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](21, ChartComponent_tr_161_div_21_Template, 19, 21, "div", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](22, ChartComponent_tr_161_td_22_Template, 7, 4, "td", 177);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](23, ChartComponent_tr_161_td_23_Template, 2, 1, "td", 178);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](24, ChartComponent_tr_161_td_24_Template, 2, 1, "td", 179);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](25, ChartComponent_tr_161_td_25_Template, 3, 0, "td", 180);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](26, ChartComponent_tr_161_td_26_Template, 3, 0, "td", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](27, ChartComponent_tr_161_td_27_Template, 3, 0, "td", 20);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](28, "td", 181);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](29, "input", 182);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_161_Template_input_ngModelChange_29_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r150); const pos_r86 = restoredCtx.$implicit; return pos_r86.alertPrice = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](30, "span", 183);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](31);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r86 = ctx.$implicit;
    const ctx_r7 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](25, _c0, pos_r86.exit !== 0, ctx_r7.hide_closed && pos_r86.exit !== 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.addToOrders);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx_r7.payoff_overlay);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("step", ctx_r7.stepValue)("ngModel", pos_r86.qty)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](28, _c1, pos_r86.qty < 0, pos_r86.qty > 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("step", ctx_r7.stepValue)("ngModel", pos_r86.roll_qty)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](31, _c1, pos_r86.roll_qty < 0, pos_r86.roll_qty > 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](34, _c2, pos_r86.pnl < 0, pos_r86.pnl > 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", ctx_r7.getPnL(pos_r86), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.entry);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.scrip);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r7.getLTP(pos_r86.expiry, pos_r86.scrip));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", pos_r86.qty < 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", pos_r86.qty > 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", pos_r86.exit === 0 && !ctx_r7.hide_roll3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx_r7.hide_roll);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx_r7.hide_extra);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx_r7.hide_extra);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx_r7.hide_roll);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx_r7.hide_extra);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx_r7.hide_extra);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r86.alertPrice);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](pos_r86.alertStatus);
} }
function ChartComponent_table_162_tr_16_div_14_button_1_Template(rf, ctx) { if (rf & 1) {
    const _r168 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 113);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_table_162_tr_16_div_14_button_1_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r168); const pos_r158 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2).$implicit; const ctx_r166 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r166.executeOrderSLL(pos_r158); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "SL-L buy");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_table_162_tr_16_div_14_button_2_Template(rf, ctx) { if (rf & 1) {
    const _r171 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 186);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_table_162_tr_16_div_14_button_2_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r171); const pos_r158 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2).$implicit; const ctx_r169 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r169.executeOrderSLL(pos_r158); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "SL-L sell");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_table_162_tr_16_div_14_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 167);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](1, ChartComponent_table_162_tr_16_div_14_button_1_Template, 2, 0, "button", 175);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](2, ChartComponent_table_162_tr_16_div_14_button_2_Template, 2, 0, "button", 176);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r158 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", pos_r158.qty > 0);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", pos_r158.qty < 0);
} }
function ChartComponent_table_162_tr_16_button_16_Template(rf, ctx) { if (rf & 1) {
    const _r175 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 194);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_table_162_tr_16_button_16_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r175); const pos_r158 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; const ctx_r173 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r173.executeOrderSLL(pos_r158); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "Modify");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_table_162_tr_16_button_18_Template(rf, ctx) { if (rf & 1) {
    const _r178 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 194);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_table_162_tr_16_button_18_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r178); const pos_r158 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; const ctx_r176 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r176.cancelSLLOrder(pos_r158); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "Cancel");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_table_162_tr_16_button_20_Template(rf, ctx) { if (rf & 1) {
    const _r181 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "button", 194);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_table_162_tr_16_button_20_Template_button_click_0_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r181); const pos_r158 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit; const ctx_r179 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r179.deleteSLLOrder(pos_r158); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "X");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
const _c3 = function (a0) { return { "sl-order-placed": a0 }; };
function ChartComponent_table_162_tr_16_Template(rf, ctx) { if (rf & 1) {
    const _r183 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "tr", 162);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "td", 163);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 167);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "input", 197);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_table_162_tr_16_Template_input_ngModelChange_3_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r183); const pos_r158 = restoredCtx.$implicit; return pos_r158.qty = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "td", 172);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 167);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "input", 198);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_table_162_tr_16_Template_input_ngModelChange_6_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r183); const pos_r158 = restoredCtx.$implicit; return pos_r158.scrip = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div", 174);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "td", 163);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "input", 199);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_table_162_tr_16_Template_input_ngModelChange_10_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r183); const pos_r158 = restoredCtx.$implicit; return pos_r158.price = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "td", 163);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "input", 200);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_table_162_tr_16_Template_input_ngModelChange_12_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r183); const pos_r158 = restoredCtx.$implicit; return pos_r158.trigger_price = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "td", 163);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](14, ChartComponent_table_162_tr_16_div_14_Template, 3, 2, "div", 201);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "td", 202);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](16, ChartComponent_table_162_tr_16_button_16_Template, 2, 0, "button", 203);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](17, "td", 202);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](18, ChartComponent_table_162_tr_16_button_18_Template, 2, 0, "button", 203);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](19, "td", 202);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](20, ChartComponent_table_162_tr_16_button_20_Template, 2, 0, "button", 203);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r158 = ctx.$implicit;
    const ctx_r157 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction1"](12, _c3, pos_r158.order_id !== null));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("step", ctx_r157.stepValue)("ngModel", pos_r158.qty)("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](14, _c1, pos_r158.qty < 0, pos_r158.qty > 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r158.scrip);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r157.getLTP(pos_r158.expiry, pos_r158.scrip));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r158.price);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r158.trigger_price);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", pos_r158.order_id === null);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", pos_r158.order_id);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", pos_r158.order_id);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", pos_r158.order_id === null);
} }
function ChartComponent_table_162_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "table", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "thead", 106);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "th", 195);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](4, "Qty");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "th", 196);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](6, "Scrip");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "th", 195);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](8, "Exec. Price");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "th", 195);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](10, "Trigger");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](11, "th", 195);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](12, "th", 195);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](13, "th", 195);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](14, "th", 195);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "tbody");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](16, ChartComponent_table_162_tr_16_Template, 21, 17, "tr", 57);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r8 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](16);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r8.sl_trades);
} }
function ChartComponent_div_163_Template(rf, ctx) { if (rf & 1) {
    const _r189 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 204);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 205);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](3, "canvas", 206);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "div", 207);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 208);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "div", 209);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "div", 209);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](9);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "input", 210);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_163_Template_input_ngModelChange_10_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r188 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r188.strategyAlertPrice = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "span", 10);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](12);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "div", 211);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](14, " Total PnL: ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "div", 212);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "span", 162);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](17);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](18, "span", 213);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](19);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](20, "div", 60);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](21, "div", 214);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](22, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_22_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r190 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r190.addPosition(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](23, "Add");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](24, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_24_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r191 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r191.calculatePayoff(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](25, "Preview");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](26, "div", 215);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](27, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_27_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const _r187 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵreference"](30); return _r187.click(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](28, "Import");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](29, "input", 216, 217);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("change", function ChartComponent_div_163_Template_input_change_29_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r193 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r193.importCSV($event, 1); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](31, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_31_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r194 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r194.fetchLastOI(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](32, "Fetch OI");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](33, "a", 218);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](34, "View Fly Payoff");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](35, "button", 113);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_35_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r195 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r195.findDS_BuyExit(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](36, "DS Buy Exit");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](37, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](38);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](39, "div", 129);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](40, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_40_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r196 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r196.savePositions(1); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](41, "Save 1");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](42, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_42_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r197 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r197.savePositions(2); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](43, "Save 2");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](44, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_44_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r198 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r198.savePositions(3); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](45, "Save 3");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](46, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_46_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r199 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r199.savePositions(4); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](47, "Save 4");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](48, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_48_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r200 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r200.savePositions(5); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](49, "Save 5");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](50, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_50_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r201 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r201.savePositions(6); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](51, "Save 6");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](52, "div", 129);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](53, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_53_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r202 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r202.reloadPayoffData(1); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](54, "Load 1");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](55, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_55_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r203 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r203.reloadPayoffData(2); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](56, "Load 2");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](57, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_57_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r204 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r204.reloadPayoffData(3); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](58, "Load 3");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](59, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_59_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r205 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r205.reloadPayoffData(4); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](60, "Load 4");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](61, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_61_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r206 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r206.reloadPayoffData(5); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](62, "Load 5");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](63, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_63_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r207 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r207.reloadPayoffData(6); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](64, "Load 6");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](65, "div", 129);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](66, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_66_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r208 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r208.exportToCSV(1); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](67, "Export 1");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](68, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_68_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r209 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r209.exportToCSV(2); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](69, "Export 2");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](70, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_70_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r210 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r210.exportToCSV(3); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](71, "Export 3");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](72, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_72_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r211 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r211.exportToCSV(4); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](73, "Export 4");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](74, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_74_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r212 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r212.exportToCSV(5); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](75, "Export 5");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](76, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_76_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r213 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r213.exportToCSV(6); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](77, "Export 6");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](78, "div", 219);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](79);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](80, "div", 219);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](81);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](82, "button", 113);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_163_Template_button_click_82_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r189); const ctx_r214 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r214.getFunds(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](83, "Fetch");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](84, "div", 219);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](85);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](86, "div", 219);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](87);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r9 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("datasets", ctx_r9.lineChartData)("labels", ctx_r9.lineChartLabels)("options", ctx_r9.lineChartOptions)("colors", ctx_r9.lineChartColors)("legend", ctx_r9.lineChartLegend)("chartType", ctx_r9.lineChartType)("plugins", ctx_r9.lineChartPlugins);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Sold: ", ctx_r9.getSoldPremium()[0], "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Current: ", ctx_r9.getSoldPremium()[1], "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r9.strategyAlertPrice);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r9.strategyAlertText);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](20, _c2, ctx_r9.strategyPnl < 0, ctx_r9.strategyPnl > 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", ctx_r9.getStrategyPnL(), " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" (", ctx_r9.getStrategyPnLAfterCharges(), ") ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](19);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r9.ds_buy_exit);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](41);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Margin: ", ctx_r9.margin, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate2"]("Available Margin: ", ctx_r9.avail_margin, " / Used Margin: ", ctx_r9.used_margin, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("ROI: ", ctx_r9.getROI(), " %");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Breakevens: ", ctx_r9.breakevens, "");
} }
function ChartComponent_option_168_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "option", 128);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r215 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("value", item_r215);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", item_r215, " ");
} }
function ChartComponent_div_194_Template(rf, ctx) { if (rf & 1) {
    const _r217 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 24);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "input", 220);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_194_Template_input_ngModelChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r217); const ctx_r216 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r216.strangle_chart_simulate_tillend = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "label", 221);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3, "Till end");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r11 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r11.strangle_chart_simulate_tillend);
} }
function ChartComponent_span_197_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r12 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate2"]("", ctx_r12.simulateCurrDateTimeString, " - Expiry: ", ctx_r12.simulateExpiryDate, "");
} }
function ChartComponent_div_199_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 222);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r13 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r13.charts_instru);
} }
function ChartComponent_div_201_tr_17_div_8_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 241);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const oc_r219 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate2"](" ", oc_r219.qtyCE, " (", oc_r219.costCE, ") ");
} }
function ChartComponent_div_201_tr_17_div_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 241);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const oc_r219 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", oc_r219.sllCE, " ");
} }
function ChartComponent_div_201_tr_17_div_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 242);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r223 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", ctx_r223.getSpotValue(), " ");
} }
function ChartComponent_div_201_tr_17_div_13_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 243);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, " N ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_div_201_tr_17_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 241);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const oc_r219 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate2"](" ", oc_r219.qtyPE, " (", oc_r219.costPE, ") ");
} }
function ChartComponent_div_201_tr_17_div_22_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 241);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const oc_r219 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]().$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", oc_r219.sllPE, " ");
} }
const _c4 = function (a0, a1) { return { "ocStrikeStrategyCE": a0, "ocStrikeSLL": a1 }; };
const _c5 = function (a0, a1) { return { "table-warning": a0, "oc-strike": a1 }; };
const _c6 = function (a0, a1) { return { "ocStrikeStrategyPE": a0, "ocStrikeSLL": a1 }; };
function ChartComponent_div_201_tr_17_Template(rf, ctx) { if (rf & 1) {
    const _r232 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "td", 231);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "span", 232);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_201_tr_17_Template_span_click_2_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r232); const oc_r219 = restoredCtx.$implicit; const ctx_r231 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r231.update_chart_strike(oc_r219.strike + "CE", "CE", true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3, "\u21AF");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "span", 233);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_201_tr_17_Template_span_click_4_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r232); const oc_r219 = restoredCtx.$implicit; const ctx_r233 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r233.addSLLOrder(oc_r219.strike, "CE", oc_r219.ltpCE); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](5, "\u2022");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "span", 234);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_201_tr_17_Template_span_click_6_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r232); const oc_r219 = restoredCtx.$implicit; const ctx_r234 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r234.addToStrategyBuilder(oc_r219.strike, "CE", oc_r219.ltpCE); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](7);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](8, ChartComponent_div_201_tr_17_div_8_Template, 2, 2, "div", 235);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](9, ChartComponent_div_201_tr_17_div_9_Template, 2, 1, "div", 235);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "td", 236);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](11);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](12, ChartComponent_div_201_tr_17_div_12_Template, 2, 1, "div", 237);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](13, ChartComponent_div_201_tr_17_div_13_Template, 2, 0, "div", 238);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "td", 231);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "span", 234);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_201_tr_17_Template_span_click_15_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r232); const oc_r219 = restoredCtx.$implicit; const ctx_r235 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r235.addToStrategyBuilder(oc_r219.strike, "PE", oc_r219.ltpPE); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](16);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](17, "span", 239);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_201_tr_17_Template_span_click_17_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r232); const oc_r219 = restoredCtx.$implicit; const ctx_r236 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r236.update_chart_strike(oc_r219.strike + "PE", "PE", true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](18, "\u21AF");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](19, "span", 240);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_201_tr_17_Template_span_click_19_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r232); const oc_r219 = restoredCtx.$implicit; const ctx_r237 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2); return ctx_r237.addSLLOrder(oc_r219.strike, "PE", oc_r219.ltpPE); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](20, "\u2022");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](21, ChartComponent_div_201_tr_17_div_21_Template, 2, 2, "div", 235);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](22, ChartComponent_div_201_tr_17_div_22_Template, 2, 1, "div", 235);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const oc_r219 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](12, _c4, oc_r219.inCurrStrategyCE, oc_r219.sllCE));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](oc_r219.ltpCE);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", oc_r219.inCurrStrategyCE);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", oc_r219.sllCE);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](15, _c5, oc_r219.isSpot, !oc_r219.isSpot));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", oc_r219.strike, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", oc_r219.isSpot);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", oc_r219.showNudge);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](18, _c6, oc_r219.inCurrStrategyPE, oc_r219.sllPE));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](oc_r219.ltpPE);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", oc_r219.inCurrStrategyPE);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", oc_r219.sllPE);
} }
function ChartComponent_div_201_Template(rf, ctx) { if (rf & 1) {
    const _r239 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 223);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "input", 224);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_201_Template_input_ngModelChange_2_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r239); const ctx_r238 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r238.inlineOC_higherRange = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "input", 225);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_201_Template_input_ngModelChange_3_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r239); const ctx_r240 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r240.inlineOC_lowerRange = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "button", 226);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_201_Template_button_click_4_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r239); const ctx_r241 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r241.inlineOCRangeUpdate(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](5, "\u2713");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "input", 227);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_201_Template_input_ngModelChange_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r239); const ctx_r242 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r242.inlineOC_qty = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "table", 228);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "thead", 106);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "th", 229);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](11, "Call LTP");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "th", 230);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](13, "Strike");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "th", 229);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](15, "Put LTP");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "tbody");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](17, ChartComponent_div_201_tr_17_Template, 23, 21, "tr", 108);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r14 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r14.inlineOC_higherRange);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r14.inlineOC_lowerRange);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r14.inlineOC_qty);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](11);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r14.oc_strikes);
} }
function ChartComponent_div_215_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](1, "iframe", 244);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_div_216_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 245);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](3, "canvas", 206);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 245);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](6, "canvas", 206);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div", 245);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](8, "canvas", 206);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r16 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("datasets", ctx_r16.finLineChartDataInstru)("labels", ctx_r16.finLineChartLabelsInstru)("options", ctx_r16.finLineChartOptions)("colors", ctx_r16.finLineChartColors)("legend", ctx_r16.lineChartLegend)("chartType", ctx_r16.lineChartType)("plugins", ctx_r16.lineChartPlugins);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("datasets", ctx_r16.finLineChartData1)("labels", ctx_r16.finLineChartLabels1)("options", ctx_r16.finLineChartOptions)("colors", ctx_r16.finLineChartColors)("legend", ctx_r16.lineChartLegend)("chartType", ctx_r16.lineChartType)("plugins", ctx_r16.lineChartPlugins);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("datasets", ctx_r16.finLineChartData2)("labels", ctx_r16.finLineChartLabels2)("options", ctx_r16.finLineChartOptions)("colors", ctx_r16.finLineChartColors)("legend", ctx_r16.lineChartLegend)("chartType", ctx_r16.lineChartType)("plugins", ctx_r16.lineChartPlugins);
} }
function ChartComponent_div_217_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "b");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](2, "Update 27 Nov:");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3, " Maintain T+0 Monitor extra buying options and buy and exit whenever required. Shift straddle if spot breaching breakeven. Move other side hedge whenever required. End result for the Fly is the straddle one strike near to a side's hedge on the Expiry day. Exit the Fly if getting 3% on deployed capital in the week and move to next week. During the day, maintain your T+0 slope. Do that using extra buying and maintaining appropriate distance of hedge from straddle. If spot is nearing breakeven, make sure that side hedge distance is less than straddle combined premium. At end of the day, if required, then adjust straddle and hedges to achieve the payoff structure and T0 you want. T0 gives your pnl of the day irrespective of whether you are shifting your straddle or not. So maintaining T0 slope is important. If you are shifting straddle constantly, you might capture extra theta decay during the day, but will not be much as compared to original straddle. You will anyways be shifting the straddle at end of day. Not required to shift straddle constantly. Shift straddle has to be shifted when breakeven is breached, because loss rate increases after that at end of day. Also review payoff structure at end of day. Add another lower quantity closer hedged fly if required. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](4, "br");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "b");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](6, "Straddle Adjustments:");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](7, " Move straddle legs as per the trend. Not early (to avoid random moves) and Not Late (ITM loss and lower premium) Moving frequently leads to getting lower premium over time. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](8, "br");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "b");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](10, "Hedge Adjustments:");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](11, " Hedges should not be too far and not too close. Too far increases overnight risk. Too close results in late profit realization. Manage intraday moves with extra buy. Maintaining T0 is important. Move untested side hedge inside if cheap. Add extra small quantity of buy to manage T0 line according to trend. Monitor option chart for this. Look for EMA confirmation, S/R breach for adjustment of straddle and buys. Max loss on a side should be 100 points. In terms of Rs., do 100 * num. lots. Hedge should eventually be at the distance less than straddle premium. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](12, "br");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "b");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](14, "Loss less:");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](15, " A side becomes loss less if NET CREDIT is GREATER than HEDGE DISTANCE on that side. Normally you would have atleast 400 credit in straddle and pay upto 200 on hedges. So net credit is 200. So straddle around 200 points away from hedge can make that side loss less. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](16, "br");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](17, "b");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](18, "Strangle:");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](19, " Sell naked far OTM CE or strangle. Exit the naked option if SL hit. Keep moving untested side naked sell inside. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](20, "br");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](21, "b");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](22, "NEW FLY:");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](23, " If BNF near of crossing breakeven, make CLOSE-HEDGED fly with lower qty at that point. Exit this new fly if BNF moving out of its breakevens. ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_app_stock_chart_218_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](0, "app-stock-chart");
} }
function ChartComponent_div_219_div_21_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 255);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 256);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 257);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "div", 256);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 257);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div", 258);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "div", 256);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "div", 257);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](11);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "div", 258);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](13);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "div", 256);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "div", 257);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](16);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](17, "div", 258);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](18);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](19, "div", 256);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](20, "div", 257);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](21);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](22, "div", 258);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](23);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](24, "div", 256);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](25, "div", 257);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](26);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](27, "div", 258);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](28);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](29, "div", 256);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](30, "div", 257);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](31);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](32, "div", 258);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](33);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](34, "div", 256);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](35, "div", 257);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](36);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](37, "div", 258);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](38);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](39, "div", 256);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](40, "div", 257);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](41);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](42, "div", 258);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](43);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const n_r244 = ctx.$implicit;
    const ctx_r243 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r244 + "_spot");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartLabel("opt_chart_" + n_r244 + "_spot"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r244 + "_0");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartLabel("opt_chart_" + n_r244 + "_0"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartValues("opt_chart_" + n_r244 + "_0"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r244 + "_1");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartLabel("opt_chart_" + n_r244 + "_1"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartValues("opt_chart_" + n_r244 + "_1"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r244 + "_2");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartLabel("opt_chart_" + n_r244 + "_2"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartValues("opt_chart_" + n_r244 + "_2"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r244 + "_3");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartLabel("opt_chart_" + n_r244 + "_3"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartValues("opt_chart_" + n_r244 + "_3"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r244 + "_4");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartLabel("opt_chart_" + n_r244 + "_4"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartValues("opt_chart_" + n_r244 + "_4"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r244 + "_5");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartLabel("opt_chart_" + n_r244 + "_5"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartValues("opt_chart_" + n_r244 + "_5"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r244 + "_6");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartLabel("opt_chart_" + n_r244 + "_5"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartValues("opt_chart_" + n_r244 + "_5"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r244 + "_7");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartLabel("opt_chart_" + n_r244 + "_5"));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r243.getChartValues("opt_chart_" + n_r244 + "_5"));
} }
const _c7 = function () { return [0, 1, 2, 3, 4]; };
function ChartComponent_div_219_Template(rf, ctx) { if (rf & 1) {
    const _r247 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 246);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 121);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "span", 247);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "div", 248);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "input", 249);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_219_Template_input_ngModelChange_5_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r247); const ctx_r246 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r246.st_chart_radio = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "label", 250);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](7, "5 min");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "div", 248);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "input", 251);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_219_Template_input_ngModelChange_9_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r247); const ctx_r248 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r248.st_chart_radio = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "label", 252);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](11, "1 min");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "button", 253);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_219_Template_button_click_12_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r247); const ctx_r249 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r249.initSTCharts1(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](13, "ST 10 2");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "button", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_219_Template_button_click_14_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r247); const ctx_r250 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r250.backtestExpiryStrangles(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](15, "Expiry Strangles");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "button", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_219_Template_button_click_16_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r247); const ctx_r251 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r251.backtestStrangleSL_Reentry(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](17, "Strangle SL Reentry");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](18, "button", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_219_Template_button_click_18_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r247); const ctx_r252 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r252.backtestLongFly(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](19, "Long Fly");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](20, "div", 95);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](21, ChartComponent_div_219_div_21_Template, 44, 26, "div", 254);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r19 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Expiry: ", ctx_r19.simulateExpiryDate, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r19.st_chart_radio);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r19.st_chart_radio);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](12);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction0"](4, _c7));
} }
function ChartComponent_div_220_div_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 255);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](1, "div", 266);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](2, "div", 266);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](3, "div", 266);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const i_r256 = ctx.index;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + i_r256 + "_spot");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + i_r256 + "_CE");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + i_r256 + "_PE");
} }
function ChartComponent_div_220_div_24_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 255);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](1, "div", 266);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](2, "div", 266);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](3, "div", 266);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const n_r257 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r257 + "_spot");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r257 + "_CE");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + n_r257 + "_PE");
} }
const _c8 = function () { return []; };
const _c9 = function () { return [5, 6]; };
function ChartComponent_div_220_Template(rf, ctx) { if (rf & 1) {
    const _r260 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 246);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 121);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "span", 247);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "div", 248);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "input", 259);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_220_Template_input_ngModelChange_5_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r260); const ctx_r259 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r259.st_chart_radio = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "label", 260);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](7, "10 2");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "div", 248);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "input", 261);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_220_Template_input_ngModelChange_9_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r260); const ctx_r261 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r261.st_chart_radio = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "label", 262);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](11, "7 3");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "div", 248);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "input", 263);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_220_Template_input_ngModelChange_13_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r260); const ctx_r262 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r262.st_chart_radio = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "label", 264);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](15, "Both");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "input", 265);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_220_Template_input_ngModelChange_16_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r260); const ctx_r263 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r263.st_chart_strike = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](17, "button", 47);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_220_Template_button_click_17_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r260); const ctx_r264 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r264.initSTCharts(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](18, "Init");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](19, "div", 95);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](20, ChartComponent_div_220_div_20_Template, 4, 3, "div", 254);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](21, "span", 247);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](22);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](23, "div", 95);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](24, ChartComponent_div_220_div_24_Template, 4, 3, "div", 254);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r20 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Expiry: ", ctx_r20.simulateExpiryDate, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r20.st_chart_radio);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r20.st_chart_radio);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r20.st_chart_radio);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r20.st_chart_strike);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction0"](8, _c8).constructor(5));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("Expiry: ", ctx_r20.simulateExpiryDate, "");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction0"](9, _c9));
} }
function ChartComponent_option_223_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "option", 128);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r265 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("value", item_r265);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", item_r265, " ");
} }
function ChartComponent_span_234_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r22 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate2"]("", ctx_r22.simulateCurrDateTimeString, " - Expiry: ", ctx_r22.simulateExpiryDate, "");
} }
function ChartComponent_div_238_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 222);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r23 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r23.charts_instru);
} }
const _c10 = function (a0, a1) { return { "chart-border-green": a0, "chart-border-red": a1 }; };
function ChartComponent_div_239_Template(rf, ctx) { if (rf & 1) {
    const _r269 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 267);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_239_Template_div_click_0_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r269); const i_r267 = restoredCtx.index; const ctx_r268 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r268.update_chart_strike(ctx_r268.chart_strikes_ce[i_r267], "CE"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 268);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "div", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const i_r267 = ctx.index;
    const ctx_r24 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + i_r267 + "CE");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](4, _c10, ctx_r24.isChartStrikeInCurrStrategy(ctx_r24.chart_strikes_ce[i_r267]) > 0, ctx_r24.isChartStrikeInCurrStrategy(ctx_r24.chart_strikes_ce[i_r267]) < 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r24.chart_strikes_ce[i_r267]);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r24.isChartStrikeInCurrStrategy(ctx_r24.chart_strikes_ce[i_r267]));
} }
function ChartComponent_div_244_Template(rf, ctx) { if (rf & 1) {
    const _r273 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 267);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_244_Template_div_click_0_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r273); const i_r271 = restoredCtx.index; const ctx_r272 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r272.update_chart_strike(ctx_r272.chart_strikes_pe[i_r271], "PE"); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 268);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "div", 68);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "div", 69);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const i_r271 = ctx.index;
    const ctx_r25 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpropertyInterpolate"]("id", "opt_chart_" + i_r271 + "PE");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](4, _c10, ctx_r25.isChartStrikeInCurrStrategy(ctx_r25.chart_strikes_pe[i_r271]) > 0, ctx_r25.isChartStrikeInCurrStrategy(ctx_r25.chart_strikes_pe[i_r271]) < 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r25.chart_strikes_pe[i_r271]);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r25.isChartStrikeInCurrStrategy(ctx_r25.chart_strikes_pe[i_r271]));
} }
function ChartComponent_tr_279_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](10);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](12);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](14);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](16);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const k_r274 = ctx.$implicit;
    const ctx_r26 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    let tmp_7_0;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](k_r274.instru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](k_r274.expiry_date);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](k_r274.qty);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](k_r274.scrip);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r26.getKnifeOrderStatus(k_r274)[0]);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r26.getKnifeOrderStatus(k_r274)[1]);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r26.getLTP(k_r274.expiry_date, k_r274.scrip, k_r274.instru));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"]((tmp_7_0 = ctx_r26.getOHLC(k_r274.expiry_date, k_r274.scrip, k_r274.instru)) == null ? null : tmp_7_0.low);
} }
function ChartComponent_div_286_option_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "option", 128);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r279 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("value", item_r279);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", item_r279, " ");
} }
function ChartComponent_div_286_Template(rf, ctx) { if (rf & 1) {
    const _r281 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 269);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 270);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "input", 271);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_286_Template_input_ngModelChange_2_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r281); const alert_r276 = restoredCtx.$implicit; return alert_r276.selected = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "select", 272);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_286_Template_select_ngModelChange_3_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r281); const alert_r276 = restoredCtx.$implicit; return alert_r276.instru = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](4, ChartComponent_div_286_option_4_Template, 2, 2, "option", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "input", 273);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_286_Template_input_ngModelChange_5_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r281); const alert_r276 = restoredCtx.$implicit; return alert_r276.scrip1 = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "input", 274);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_286_Template_input_ngModelChange_6_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r281); const alert_r276 = restoredCtx.$implicit; return alert_r276.scrip2 = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "input", 275);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_286_Template_input_ngModelChange_7_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r281); const alert_r276 = restoredCtx.$implicit; return alert_r276.expiry = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "select", 272);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_286_Template_select_ngModelChange_8_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r281); const alert_r276 = restoredCtx.$implicit; return alert_r276.compare = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "option", 276);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](10, ">");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "option", 277);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](12, "<");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "input", 278);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_286_Template_input_ngModelChange_13_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r281); const alert_r276 = restoredCtx.$implicit; return alert_r276.price = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "span");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](15);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "span", 183);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](17);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const alert_r276 = ctx.$implicit;
    const ctx_r27 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", alert_r276.selected);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", alert_r276.instru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r27.supportedInstru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", alert_r276.scrip1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", alert_r276.scrip2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", alert_r276.expiry);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", alert_r276.compare);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", alert_r276.price);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r27.getAlertLtp(alert_r276));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](alert_r276.status);
} }
function ChartComponent_div_295_tr_4_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](6);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const o_r289 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", o_r289.instru, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", o_r289.scrip, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", o_r289.qty, " ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", o_r289.price, " ");
} }
function ChartComponent_div_295_Template(rf, ctx) { if (rf & 1) {
    const _r292 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "textarea", 279);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_295_Template_textarea_ngModelChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r292); const ctx_r291 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r291.ordersTextarea = $event; })("ngModelChange", function ChartComponent_div_295_Template_textarea_ngModelChange_1_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r292); const ctx_r293 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r293.ordersTextareaUpdated($event); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "table", 56);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "tbody");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](4, ChartComponent_div_295_tr_4_Template, 9, 4, "tr", 108);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 280);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "input", 281);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_295_Template_input_ngModelChange_6_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r292); const ctx_r294 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r294.orders_broker = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "label", 282);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](8, "Upstox");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "div", 280);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "input", 283);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_295_Template_input_ngModelChange_10_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r292); const ctx_r295 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r295.orders_broker = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "label", 284);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](12, "Zerodha");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "button", 285);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_div_295_Template_button_click_13_listener() { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r292); const ctx_r296 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r296.addOrdersToStrategy(); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](14, "Add");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](15, "hr");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r28 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r28.ordersTextarea);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r28.orders_parsed);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r28.orders_broker);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r28.orders_broker);
} }
function ChartComponent_tr_330_option_3_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "option", 128);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r302 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("value", item_r302);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", item_r302, " ");
} }
function ChartComponent_tr_330_span_12_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "span", 294);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "N");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_tr_330_span_20_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "span", 294);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1, "N");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
function ChartComponent_tr_330_Template(rf, ctx) { if (rf & 1) {
    const _r304 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "tr");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "select", 286);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_330_Template_select_ngModelChange_2_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r304); const pos_r297 = restoredCtx.$implicit; return pos_r297.instru = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](3, ChartComponent_tr_330_option_3_Template, 2, 2, "option", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](4, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "input", 287);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_330_Template_input_ngModelChange_5_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r304); const pos_r297 = restoredCtx.$implicit; return pos_r297.expiry_date = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "input", 288);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_330_Template_input_ngModelChange_7_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r304); const pos_r297 = restoredCtx.$implicit; return pos_r297.curr_qty = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "input", 289);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_330_Template_input_ngModelChange_9_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r304); const pos_r297 = restoredCtx.$implicit; return pos_r297.curr_scrip = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "span", 290);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](11);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](12, ChartComponent_tr_330_span_12_Template, 2, 0, "span", 291);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "div", 292);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](15);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](17, "input", 293);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_tr_330_Template_input_ngModelChange_17_listener($event) { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r304); const pos_r297 = restoredCtx.$implicit; return pos_r297.new_scrip = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](18, "span", 290);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](19);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](20, ChartComponent_tr_330_span_20_Template, 2, 0, "span", 291);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](21, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](22, "div", 292);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](23);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](24, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](25, "button", 155);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_tr_330_Template_button_click_25_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r304); const i_r298 = restoredCtx.index; const ctx_r309 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r309.movePlaceOrder(i_r298, -1); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](26, "\u2191");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](27, "button", 194);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_tr_330_Template_button_click_27_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r304); const i_r298 = restoredCtx.index; const ctx_r310 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r310.movePlaceOrder(i_r298, 1); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](28, "\u2193");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](29, "td");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](30, "button", 118);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_tr_330_Template_button_click_30_listener() { const restoredCtx = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r304); const pos_r297 = restoredCtx.$implicit; const ctx_r311 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r311.place_roll_orders(pos_r297, true); });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](31, "Place");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const pos_r297 = ctx.$implicit;
    const ctx_r29 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r297.instru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r29.supportedInstru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", pos_r297.expiry_date);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](17, _c2, pos_r297.curr_qty < 0, pos_r297.curr_qty > 0))("ngModel", pos_r297.curr_qty);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](20, _c2, pos_r297.curr_scrip.includes("PE"), pos_r297.curr_scrip.includes("CE")))("ngModel", pos_r297.curr_scrip);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](23, _c2, -pos_r297.curr_qty < 0, -pos_r297.curr_qty > 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](-pos_r297.curr_qty);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx_r29.showOILimit(pos_r297.instru, pos_r297.curr_scrip));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r29.getOrderLtp(pos_r297, false));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](26, _c2, pos_r297.new_scrip.includes("PE"), pos_r297.new_scrip.includes("CE")))("ngModel", pos_r297.new_scrip);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](29, _c2, pos_r297.curr_qty < 0, pos_r297.curr_qty > 0));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](pos_r297.curr_qty);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx_r29.showOILimit(pos_r297.instru, pos_r297.new_scrip));
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx_r29.getOrderLtp(pos_r297, true));
} }
function ChartComponent_div_331_option_9_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "option", 128);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r315 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("value", item_r315);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", item_r315, " ");
} }
function ChartComponent_div_331_option_13_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "option", 128);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r316 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("value", item_r316);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", item_r316, " ");
} }
function ChartComponent_div_331_option_17_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "option", 128);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const item_r317 = ctx.$implicit;
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("value", item_r317);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", item_r317, " ");
} }
function ChartComponent_div_331_Template(rf, ctx) { if (rf & 1) {
    const _r319 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵgetCurrentView"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 295);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "h2", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "button", 296);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](4, " Straddle Charts ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 297);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div", 14);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "select", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_331_Template_select_ngModelChange_8_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r319); const ctx_r318 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r318.straddle1instru = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](9, ChartComponent_div_331_option_9_Template, 2, 2, "option", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](10, "input", 298);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_331_Template_input_ngModelChange_10_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r319); const ctx_r320 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r320.straddle1expiryDate = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "input", 299);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_331_Template_input_ngModelChange_11_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r319); const ctx_r321 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r321.straddle1scrip = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](12, "select", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_331_Template_select_ngModelChange_12_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r319); const ctx_r322 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r322.straddle2instru = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](13, ChartComponent_div_331_option_13_Template, 2, 2, "option", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "input", 298);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_331_Template_input_ngModelChange_14_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r319); const ctx_r323 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r323.straddle2expiryDate = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "input", 299);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_331_Template_input_ngModelChange_15_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r319); const ctx_r324 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r324.straddle2scrip = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](16, "select", 44);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_331_Template_select_ngModelChange_16_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r319); const ctx_r325 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r325.straddle3instru = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](17, ChartComponent_div_331_option_17_Template, 2, 2, "option", 45);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](18, "input", 298);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_331_Template_input_ngModelChange_18_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r319); const ctx_r326 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r326.straddle3expiryDate = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](19, "input", 299);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_div_331_Template_input_ngModelChange_19_listener($event) { _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵrestoreView"](_r319); const ctx_r327 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"](); return ctx_r327.straddle3scrip = $event; });
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](20, "div", 204);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](21, "canvas", 206);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} if (rf & 2) {
    const ctx_r30 = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵnextContext"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](8);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r30.straddle1instru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r30.supportedInstru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r30.straddle1expiryDate);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r30.straddle1scrip);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r30.straddle2instru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r30.supportedInstru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r30.straddle2expiryDate);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r30.straddle2scrip);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r30.straddle3instru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx_r30.supportedInstru);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r30.straddle3expiryDate);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx_r30.straddle3scrip);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("datasets", ctx_r30.i1ChartData)("labels", ctx_r30.i1ChartLabels)("options", ctx_r30.i1ChartOptions)("colors", ctx_r30.i1ChartColors)("legend", ctx_r30.i1ChartLegend)("chartType", ctx_r30.i1ChartType)("plugins", ctx_r30.i1ChartPlugins);
} }
function ChartComponent_div_332_Template(rf, ctx) { if (rf & 1) {
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 300);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 1);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "h2", 2);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "button", 301);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](4, " Charts ");
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 302);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "div", 13);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](7, "iframe", 303);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](8, "iframe", 304);
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
    _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
} }
class ChartComponent {
    constructor(appService, zerodhaService, mapService, websocketService, angelWS, chartService, chartingService, backtestService) {
        // const st_10_2 = new SuperTrend(10, 2, 'WEMA');
        this.appService = appService;
        this.zerodhaService = zerodhaService;
        this.mapService = mapService;
        this.websocketService = websocketService;
        this.angelWS = angelWS;
        this.chartService = chartService;
        this.chartingService = chartingService;
        this.backtestService = backtestService;
        this.supportedInstru = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.supportedInstru;
        this.s1Trades = null;
        this.s2Trades = null;
        this.s3Trades = null;
        this.s4Trades = null;
        this.s5Trades = null;
        this.s6Trades = null;
        this.prev_positions = [];
        this.currLoadNum = null;
        this.payOffData = null;
        this.curr_positions_trades = null;
        this.sl_trades = [];
        this.expiryDate = null;
        this.margin = null;
        this.breakevens = null;
        this.cePremium = 0;
        this.pePremium = 0;
        this.ceWeight = 0;
        this.peWeight = 0;
        this.ceLots = 0;
        this.peLots = 0;
        this.urlToFetch = ''; // 'https://opstra.definedge.com/api/free/strategybuilder/payoff/NIFTY$-375x11600CEx01OCT2020x10.27x5.1x0&-375x10600PEx01OCT2020x11.8x0x0&+150x10700PEx01OCT2020x52.05x0x0&-150x10650PEx01OCT2020x37.3x0x0&+225x10550PEx01OCT2020x31.87x13.4x0&-225x11200CEx01OCT2020x22.65x36.55x0&-150x11250CEx01OCT2020x17.65x30.75x0&+150x10550PEx01OCT2020x31.87x28.2x0&+150x10550PEx01OCT2020x32.7x13.4x0&-375x11350CEx01OCT2020x11.4x0x0$2020-10-01$0$0$0';
        this.spot = null;
        this.rest_res = null;
        this.labels = [];
        this.pnl = [];
        this.zeroline = [];
        this.instru = 'NIFTY';
        this.stepValue = 15;
        this.strikeStepValue = 100;
        this.loadOIDistance = 500;
        this.mean = 0;
        this.variance = 1;
        this.showInlineOC = true;
        this.showExtraOptions = false;
        this.simulate_instru = 'BANKNIFTY';
        this.simulate_strategy = false;
        this.simulateExpiryDate = '2023-02-16';
        this.simulateStartDate = '2023-02-16';
        this.simulateCurrDateObj = new Date();
        this.simulateTimeMins = 5;
        this.simulateCurrHour = 9;
        this.simulateCurrMins = 15;
        this.simulateCurrDateTimeString = '';
        this.show_t0 = false;
        this.payoff_overlay = false;
        this.straddle_shiftCE_overlay = false;
        this.straddle_shiftPE_overlay = false;
        this.hide_closed = true;
        this.hide_roll = false;
        this.hide_roll3 = true;
        this.hide_extra = false;
        this.hide_payoff = false;
        this.hide_clipboard = true;
        this.add_strangle_chart = false;
        this.strangle_chart_simulate_tillend = false;
        this.multi_t0 = false;
        this.show_simulate_charts = false;
        this.use_hypo_future = false;
        this.hypo_future_strike = 74.5;
        this.payoff_range = 1000;
        this.alerts = [];
        this.ordersTextarea = '';
        this.orders_parsed = [];
        this.orders_broker = 'zerodha';
        this.ce_side_overlay = false;
        this.pe_side_overlay = false;
        this.num_overlays = 1;
        this.currExpiry = '';
        this.currBnfExpiry = '';
        this.currFinniftyExpiry = '';
        this.currMidcapExpiry = '';
        this.currSensexExpiry = '';
        this.currBankexExpiry = '';
        this.currUSDINRExpiry = '';
        this.selectedPnL = 0;
        this.selectedMaxProfit = 0;
        this.selectedMaxLoss = 0;
        this.matchPositions = false;
        this.oc_instru = 'NIFTY';
        this.strategyAlertText = '';
        this.inlineOC_qty = -510;
        this.currentSold = 0;
        this.strategyPnl = 0;
        this.strategyPnl1 = 0;
        this.strategyAlertText1 = '';
        this.strategyPnl2 = 0;
        this.strategyAlertText2 = '';
        this.strategyPnl3 = 0;
        this.strategyAlertText3 = '';
        this.strategyPnl4 = 0;
        this.strategyAlertText4 = '';
        this.strategyPnl5 = 0;
        this.strategyAlertText5 = '';
        this.strategyPnl6 = 0;
        this.strategyAlertText6 = '';
        this.use_cf = false;
        this.use_cf_strategies = [];
        this.use_tag = true;
        this.use_tag_strategies = [];
        this.use_include_guid = true;
        this.use_include_guid_strategies = [];
        this.use_exclude_guid = true;
        this.use_exclude_guid_strategies = [];
        this.expand_single_charts = false;
        this.show_news = true;
        this.place_orders = [
            { instru: 'BANKNIFTY', expiry_date: '2023-01-05', curr_qty: -200, curr_scrip: '', new_scrip: '37200CE' },
            { instru: 'BANKNIFTY', expiry_date: '2023-01-05', curr_qty: -200, curr_scrip: '', new_scrip: '' },
            { instru: 'BANKNIFTY', expiry_date: '2023-01-05', curr_qty: -200, curr_scrip: '', new_scrip: '' },
            { instru: 'BANKNIFTY', expiry_date: '2023-01-05', curr_qty: -200, curr_scrip: '', new_scrip: '' },
        ];
        this.broker_auth = 'enctoken JSZVXPxDxfYE1BwATYBtropRu0k5DrWsRVWZREuEMB2OCz91S6Gsjd1FxNdHJ92Bi/rg6AQQbp6cahr2z1ADkJyo2rQdlZ/uAjItl/1W0bza7TTuye7BOg==';
        this.knife_orders = [
            /* { instru: 'BANKNIFTY', scrip: '41800CE', expiry_date: '2023-01-25', qty: 25, status: '', order_price: null, ltp: null, low: null }, */
            { instru: 'NIFTY', scrip: '20000CE', expiry_date: '2023-12-28', qty: 100, status: '', order_price: null, ltp: null, low: null },
            { instru: 'NIFTY', scrip: '19000CE', expiry_date: '2023-12-28', qty: 100, status: '', order_price: null, ltp: null, low: null },
            { instru: 'NIFTY', scrip: '18000CE', expiry_date: '2023-12-28', qty: 50, status: '', order_price: null, ltp: null, low: null },
            /* { instru: 'NIFTY', scrip: '18000PE', expiry_date: '2023-12-28', qty: 50, status: '', order_price: null, ltp: null, low: null },
            { instru: 'NIFTY', scrip: '17000PE', expiry_date: '2023-12-28', qty: 100, status: '', order_price: null, ltp: null, low: null },
            { instru: 'NIFTY', scrip: '16000PE', expiry_date: '2023-12-28', qty: 100, status: '', order_price: null, ltp: null, low: null }, */
        ];
        this.knife_perc = 5;
        this.auto_adjust_knife = false;
        this.num_charts = 20;
        this.charts_multiple = 100;
        this.charts_instru = 'BANKNIFTY';
        this.chart_strikes_ce = [];
        this.chart_strikes_pe = [];
        this.spot_chart_instru = 'BANKNIFTY';
        this.st_chart_radio = '5min';
        this.st_chart_strike = 0;
        this.tagSearch = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.defaultTag;
        this.includeGUIDs = '';
        this.excludeGUIDs = '';
        // algo variables
        this.show_algo = false;
        this.algoSimulated = true;
        this.algoLog = '';
        this.enableAlgo = false;
        this.instruToTrade = '';
        this.expiryDateToTrade = null;
        this.entryInterval = null;
        this.algoInterval = null;
        this.algo_pos = [];
        // algo variables end
        this.lineChartData = [
        /* { data: [-65, -59, 80, 81, 56, -55, -40], label: 'Series A' },
        { data: [0, 0, 0, 0, 0, 0, 0], label: 'Zero line' }, */
        /* { data: [-65, -59, 80, 81, 56, -55, -40], label: 'PnL' },
        { data: [0, 0, 0, 0, 0, 0, 0], label: 'Zero line' }, */
        ];
        this.finLineChartData1 = [];
        this.finLineChartData2 = [];
        this.finLineChartDataInstru = [];
        this.lineChartLabels = [ /* 'January', 'February', 'March', 'April', 'May', 'June', 'July' */];
        this.finLineChartLabels1 = [];
        this.finLineChartLabels2 = [];
        this.finLineChartLabelsInstru = [];
        /* public lineChartOptions: (ChartOptions & { annotation: any }) = {
          responsive: true,
        }; */
        this.lineChartOptions = {
        /* responsive: true,
        scales: {
          xAxes: [{}],
        },
        animation: {
          duration: 0
        },
        annotation: {
          annotations: [
            {
              drawTime: 'afterDatasetsDraw',
              type: 'line',
              mode: 'vertical',
              scaleID: 'x-axis-0',
              value: this.spot,
              borderColor: 'orange',
              borderWidth: 1,
              label: {
                enabled: false,
                fontColor: 'orange',
                content: 'Nifty'
              }
            },
          ],
        } */
        };
        this.finLineChartOptions = {};
        this.lineChartColors = [
            /* {
              borderColor: 'black',
              backgroundColor: 'rgba(255,0,0,0.3)',
            }, */
            {
                borderColor: '#35A4EB',
                borderWidth: 2,
                pointRadius: 0,
                /* backgroundColor: '#EBEBEB' */
            },
            {
                borderColor: 'black',
                borderWidth: 1,
                pointRadius: 0
            },
            {
                borderColor: '#205f87',
                borderWidth: 1,
                pointRadius: 0
            },
            {
                borderColor: '#6fb9e8',
                borderWidth: 1,
                pointRadius: 0
            },
            {
                borderColor: '#35A4EB',
                borderWidth: 2,
                pointRadius: 0,
                borderDash: [10, 5]
            },
            {
                borderColor: 'black',
                borderWidth: 1,
                pointRadius: 0,
                borderDash: [10, 5]
            },
            {
                borderColor: '#35A4EB',
                borderWidth: 2,
                pointRadius: 0,
                borderDash: [10, 5]
            },
            {
                borderColor: '#35A4EB',
                borderWidth: 2,
                pointRadius: 0,
                borderDash: [10, 5]
            },
            {
                backgroundColor: '#F0A48C'
            },
            {
                backgroundColor: '#8DD681' /* '#CCECC7' */
            },
        ];
        this.finLineChartColors = [
            {
                borderColor: '#35A4EB',
                borderWidth: 2,
                pointRadius: 0
            },
        ];
        this.lineChartLegend = false; // true
        this.lineChartType = 'line';
        this.lineChartPlugins = [chartjs_plugin_annotation__WEBPACK_IMPORTED_MODULE_0__];
        this.straddle1instru = 'USDINR';
        this.straddle1expiryDate = null;
        this.straddle1scrip = null;
        this.straddle2instru = 'USDINR';
        this.straddle2expiryDate = null;
        this.straddle2scrip = null;
        this.straddle3instru = 'USDINR';
        this.straddle3expiryDate = null;
        this.straddle3scrip = null;
        this.i1ChartData = [];
        this.i1ChartLabels = [];
        this.i1ChartOptions = {
            responsive: true,
            scales: {
                xAxes: [{}],
                yAxes: [
                    {
                        id: 'y-axis-0',
                        position: 'left',
                        /* ticks: {
                          max: 1,
                        } */
                    },
                    {
                        id: 'y-axis-1',
                        position: 'right',
                        /* gridLines: {
                          color: 'rgba(255,0,0,0.3)',
                        },
                        ticks: {
                          fontColor: 'red',
                        } */
                        /* ticks: {
                          min: 71,
                          max: 77,
                        } */
                    }
                ]
            },
            tooltips: {
                mode: 'index',
                intersect: false,
            },
            animation: {
                duration: 0
            },
            elements: {
                line: {
                    fill: false
                }
            }
        };
        this.i1ChartColors = [{ borderColor: '#35A4EB', borderWidth: 2, pointRadius: 0 }, { borderColor: 'black', borderWidth: 1, pointRadius: 0 },];
        this.i1ChartLegend = false; // true
        this.i1ChartType = 'line';
        this.i1ChartPlugins = [chartjs_plugin_annotation__WEBPACK_IMPORTED_MODULE_0__];
        this.intradayWatch = [
            { scrip: 'FUT', instru: 'USDINR', expiry: '2020-11-13', /* AppConstants.USDINR_FUT_MONTH */ },
            { scrip: '74CE', instru: 'USDINR', expiry: '2020-11-13', },
            { scrip: '74PE', instru: 'USDINR', expiry: '2020-11-13', },
            { scrip: '74.5CE', instru: 'USDINR', expiry: '2020-11-13', },
            { scrip: '74.5PE', instru: 'USDINR', expiry: '2020-11-13', },
            /* { scrip: '73.25CE', instru: 'USDINR', expiry: '2020-10-23', },
            { scrip: '73.25PE', instru: 'USDINR', expiry: '2020-10-23', },
            { scrip: '73.5CE', instru: 'USDINR', expiry: '2020-10-23', },
            { scrip: '73.5PE', instru: 'USDINR', expiry: '2020-10-23', }, */
        ];
        this.appService.payOffEvent$.subscribe(res => {
            console.log('payOffEvent subcribe: ', res);
            // this.rest_res = res;
            let response = [];
            if (res instanceof Array) {
                response = res;
            }
            else {
                response.push(res);
            }
            response.forEach(r => {
                let scrip;
                if (r.scrip) {
                    scrip = r.scrip;
                }
                else {
                    let parsed = this.mapService.parseSymbol(r.symbol);
                    scrip = parsed.strike + parsed.type;
                }
                let price;
                if (r.price) {
                    price = r.price;
                }
                else {
                    price = r.ltp;
                }
                console.log('Adding scrip to strategy: ' + scrip);
                /* let qty = -450;
                if (this.instru === 'BANKNIFTY') {
                  qty = 25;
                }
                if (this.instru === 'USDINR') {
                  qty = 1000;
                } */
                this.addPosition(r.qty, scrip, price, r.expiry); // TODO: check instru for lot size
            });
        });
        this.appService.placeOrdersEvent$.subscribe(res => {
            console.log('placeOrdersEvent subcribe: ', res);
            // this.rest_res = res;
            this.place_orders = [];
            res.forEach(element => {
                this.place_orders.push({ instru: element.instru, expiry_date: this.currExpiry, curr_qty: null, curr_scrip: '', new_scrip: element.strike });
            });
        });
        this.appService.chartEvent$.subscribe(res => {
            console.log('chartEvent subcribe: ', res);
            // this.rest_res = res;
            let parsed = this.mapService.parseSymbol(res.symbol);
            let scrip = parsed.strike + parsed.type;
            console.log('Adding scrip to chart: ' + scrip);
            this.addScripToChart(scrip, res.type);
            this.appService.stockChartEvent$.next({ symbol: res.symbol, type: res.type, currdate: this.simulateCurrDateObj });
        });
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.websocketEvent$.subscribe(res => {
            console.log('chart websocketEvent: ', res);
            if (res === 'connected') {
                this.doStrategiesSubscriptions();
                setTimeout(() => {
                    if (!this.curr_positions_trades) {
                        this.reloadPayoffData(1);
                    }
                    this.loadOptionChain();
                    // this.update_charts_inputs();
                    this.loadSpotChart();
                }, 2000);
                setTimeout(() => {
                    this.refreshOILimits();
                }, 4000);
            }
        });
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.miscEvent$.subscribe(res => {
            console.log('chart component miscEvent: ', res);
            if (res === 'ordersReceived') {
                if (this.enableAlgo) {
                    this.recreateAlgoPos();
                    this.refreshPositions();
                    this.savePositions(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.algoStrategyNum, false);
                }
            }
        });
        /* window.addEventListener('storage', () => {
          // When local storage changes, dump the list to
          // the console.
          console.log('*** changed1');
          console.log(JSON.parse(window.localStorage.getItem('addScripToStrategy')));
        });
    
        window.onstorage = function(e) {
          console.log('received storage event', JSON.parse(e.newValue));
          //if (e.key === 'userportal_s') {
          //  let token = e.newValue;
          //  that.chatService.setAccessToken(token);
          //  localStorage.removeItem('userportal_s');
          //}
        }; */
    }
    test1() {
        // this.chartingService.processSimulatedData('BANKNIFTY', '', '', this.simulateCurrDateObj);
        this.chartingService.initSpotChart_simulated(this.simulate_instru, this.simulateCurrDateObj);
    }
    addToStrategyBuilder(strike, type, ltp) {
        if (!this.add_strangle_chart) {
            this.appService.payOffEvent$.next({ scrip: strike + type, ltp: ltp, qty: this.inlineOC_qty });
        }
        else {
            if (type === 'CE') {
                this.strangle_chart_ce = strike + type;
            }
            if (type === 'PE') {
                this.strangle_chart_pe = strike + type;
            }
        }
    }
    addSLLOrder(strike, type, ltp) {
        let d = new Date(this.expiryDate);
        let monthNames = ['JAN', 'FEB', 'MAR', 'APR',
            'MAY', 'JUN', 'JUL', 'AUG',
            'SEP', 'OCT', 'NOV', 'DEC'];
        let day = ('0' + d.getDate()).slice(-2);
        let monthIndex = d.getMonth();
        let monthName = monthNames[monthIndex];
        let year = d.getFullYear();
        let dateString = day + monthName + year;
        this.sl_trades.push({ qty: -this.inlineOC_qty, scrip: strike + type, expiry: dateString, price: ltp, trigger_price: ltp, order_id: null });
    }
    movePlaceOrder(index, upDown) {
        let to = index + upDown;
        // remove item at `index` and store it
        let f = this.place_orders.splice(index, 1)[0];
        // insert stored item into position `to`
        this.place_orders.splice(to, 0, f);
    }
    getLTP(expiry, scrip, instru = null) {
        if (!instru) {
            instru = this.instru;
        }
        return this.mapService.getScripLTP(instru, expiry, this.mapService.parseScrip(scrip).scrip, this.mapService.parseScrip(scrip).type);
    }
    getOHLC(expiry, scrip, instru = null) {
        if (!instru) {
            instru = this.instru;
        }
        return this.mapService.getScripOHLC(instru, expiry, this.mapService.parseScrip(scrip).scrip, this.mapService.parseScrip(scrip).type);
    }
    reset_place_orders() {
        this.place_orders = [
            { instru: 'BANKNIFTY', expiry_date: this.currExpiry, curr_qty: -300, curr_scrip: '', new_scrip: '37200CE' },
            { instru: 'BANKNIFTY', expiry_date: this.currExpiry, curr_qty: -300, curr_scrip: '', new_scrip: '' },
            { instru: 'BANKNIFTY', expiry_date: this.currExpiry, curr_qty: -300, curr_scrip: '', new_scrip: '' },
            { instru: 'BANKNIFTY', expiry_date: this.currExpiry, curr_qty: -300, curr_scrip: '', new_scrip: '' },
        ];
    }
    add_empty_place_order() {
        this.place_orders.push({ instru: 'BANKNIFTY', expiry_date: this.currExpiry, curr_qty: null, curr_scrip: '', new_scrip: '' });
    }
    addPlaceOrdersFromOC() {
    }
    addPlaceOrders() {
        this.place_orders = [];
        this.curr_positions_trades.forEach(element => {
            // qty: qty, scrip: scrip, expiry: dateString, entry: entry, exit: 0, addToOrders: false, selected: true, selectedActual: false, rollstrike: null, rollstrike_new: null, roll_qty: roll_qty
            if (element.addToOrders) {
                this.place_orders.push({ instru: this.instru, expiry_date: this.currExpiry, curr_qty: element.qty, curr_scrip: element.scrip, new_scrip: '' });
                element.addToOrders = false;
            }
        });
    }
    executeOrder(pos, type) {
        if (type === 'currentstrike') {
            //pos.scrip
            console.log(pos, pos.scrip);
            let pos1 = {
                instru: this.instru,
                expiry_date: pos.expiry,
                curr_qty: pos.roll_qty,
                curr_scrip: pos.scrip,
                new_scrip: null
            };
            this.place_roll_orders(pos1, true);
        }
        else if (type === 'newstrike') {
            //pos.rollstrike_new
            console.log(pos, pos.rollstrike_new);
            let pos1 = {
                instru: this.instru,
                expiry_date: pos.expiry,
                curr_qty: -pos.roll_qty,
                curr_scrip: pos.rollstrike_new,
                new_scrip: null
            };
            this.place_roll_orders(pos1, true);
        }
    }
    executeOrderSLL(pos) {
        console.log('SLL', pos, pos.scrip);
        let pos1 = {
            instru: this.instru,
            expiry_date: pos.expiry,
            curr_qty: -pos.qty,
            curr_scrip: pos.scrip,
            new_scrip: null
        };
        this.place_roll_orders(pos1, true, true, pos.price, pos.order_id, "NRML", _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.defaultTag, pos.trigger_price);
    }
    cancelSLLOrder(pos) {
        this.zerodhaService.cancel_order(pos.order_id).subscribe((res) => {
            console.log('cancelSLLOrder res: ', res);
            if (res.data) {
                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.requestStatusEvent$.next({ 'status': 'info', 'message': 'Order Cancelled' });
                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.miscEvent$.next('refreshAll');
            }
        }, error => {
            console.log('cancelSLLOrder error', error);
            let errmsg = '';
            if (error.error && error.error.message) {
                errmsg = error.error.message;
            }
            else {
                errmsg = error.message;
            }
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.requestStatusEvent$.next({ 'status': 'danger', 'message': 'Order could not be cancelled: ' + errmsg });
        });
    }
    sortSLLPositions() {
        this.sl_trades.sort((a, b) => {
            // -1 means a should come before b
            // 1 means a should come after b
            let a_symbol = a.scrip.slice(0, -2);
            let b_symbol = b.scrip.slice(0, -2);
            if (a_symbol === b_symbol && a.scrip.includes('CE') && b.scrip.includes('PE')) { // same strike CE PE, CE should occur first
                return -1;
            }
            if (a_symbol === b_symbol && a.scrip.includes('PE') && b.scrip.includes('CE')) { // same strike CE PE, CE should occur first
                return 1;
            }
            return this.compareForSorting(a.scrip, b.scrip);
        });
    }
    updateOCValuesForSLL() {
        if (this.oc_strikes && this.oc_strikes.length > 0) {
            this.oc_strikes.forEach(oc => {
                oc.sllCE = this.isStrikeInSLL(oc.strike + 'CE');
                oc.sllPE = this.isStrikeInSLL(oc.strike + 'PE');
            });
        }
    }
    isStrikeInSLL(strike) {
        let sll_details = '';
        if (this.sl_trades.length > 0) {
            for (let i = 0; i < this.sl_trades.length; i++) {
                let element = this.sl_trades[i];
                if (element.scrip === strike) {
                    sll_details += element.price + ',';
                }
            }
        }
        sll_details = sll_details.replace(/,\s*$/, '');
        if (sll_details === '') {
            sll_details = null;
        }
        return sll_details;
    }
    exitPositions() {
        if (confirm('Exit selected ?')) {
            this.curr_positions_trades.forEach(pos => {
                // qty: qty, scrip: scrip, expiry: dateString, entry: entry, exit: 0, addToOrders: false, selected: true, selectedActual: false, rollstrike: null, rollstrike_new: null, roll_qty: roll_qty, alertPrice: null, alertStatus: ''
                if (pos.addToOrders) {
                    // this.place_orders.push({ instru: this.instru, expiry_date: this.currExpiry, curr_qty: element.qty, curr_scrip: element.scrip, new_scrip: '' });
                    pos.addToOrders = false;
                    let qty = -pos.qty;
                    let scrip = pos.scrip;
                    let object = { instru: this.instru, expiry: pos.expiry, strike: this.mapService.parseScrip(scrip).scrip, optionType: this.mapService.parseScrip(scrip).type };
                    let symbol = this.mapService.getMapKey(object);
                    console.log('placing exit order for ', symbol, qty);
                    this.zerodhaService.place_order(symbol, qty, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.broker_auth).subscribe((res) => {
                        console.log('exitPositions response', res);
                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.requestStatusEvent$.next({ 'status': 'secondary', 'message': 'Placed ' + scrip + ' ' + qty });
                    }, error => {
                        console.log('exitPositions error', error);
                        let errmsg = 'Error (mostly timeout)';
                        if (error.error && error.error.message) {
                            errmsg = error.error.message;
                        }
                        else {
                            errmsg = error.message;
                        }
                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.requestStatusEvent$.next({ 'status': 'danger', 'message': scrip + ' ' + qty + ' ' + errmsg });
                        this.appService.playAudio('error');
                    });
                }
            });
        }
    }
    refreshOILimits() {
        this.nudgeOrder('NIFTY', this.mapService.getScripLTP(null, null, 'NIFTY50', null));
        this.nudgeOrder('BANKNIFTY', this.mapService.getScripLTP(null, null, 'BANKNIFTY', null));
    }
    getOILimits() {
        return 'OI Limits: NIFTY: ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.nfCEOILimit + ' ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.nfPEOILimit + ' , BANKNIFTY: ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfCEOILimit + ' ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfPEOILimit;
    }
    showOILimit(instru, scrip) {
        let strike = scrip;
        let type = '';
        if (strike.includes('CE')) {
            type = 'CE';
        }
        if (strike.includes('PE')) {
            type = 'PE';
        }
        strike = Number(strike.slice(0, -2)); // remove CE PE at end
        if (instru === 'NIFTY' && _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.nfCEOILimit && _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.nfPEOILimit) {
            if (type === 'CE') {
                return strike > _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.nfCEOILimit;
            }
            if (type === 'PE') {
                return strike < _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.nfPEOILimit;
            }
        }
        if (instru === 'BANKNIFTY' && _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfCEOILimit && _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfPEOILimit) {
            if (type === 'CE') {
                return strike > _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfCEOILimit;
            }
            if (type === 'PE') {
                return strike < _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfPEOILimit;
            }
        }
        return false;
    }
    nudgeOrder(instru, instru_ltp) {
        let spotStrike = (Math.round(instru_ltp / 100) * 100) + 1000;
        let scrip = spotStrike + 'CE';
        // let scrip = "39000CE";
        //let symbol = "BANKNIFTY22JUL38000CE"; //this.getMapKeyString(this.instru, this.currExpiry, scrip);
        let object = { instru: instru, expiry: this.currExpiry, strike: this.mapService.parseScrip(scrip).scrip, optionType: this.mapService.parseScrip(scrip).type };
        let symbol = this.mapService.getMapKey(object);
        console.log('nudge order for ', symbol);
        // response:
        // {"status":"success","data":[[{"type":"bnf_range","message":"Use MIS (Intraday) to trade all option strikes with no position conversion (MIS to NRML). This will act as a risk management check, ensuring you don’t hold any losing intraday positions overnight. NRML buy orders are blocked for this strike price due to [open interest (OI)](https://support.zerodha.com/category/trading-and-markets/kite-web-and-mobile/articles/why-did-my-bank-nifty-option-order-get-rejected) limits prescribed by SEBI. You can exit existing positions or place NRML buy orders between 35900 - 36200.","description":"Use MIS (Intraday) to trade all option strikes with no position conversion (MIS to NRML). This will act as a risk management check, ensuring you don’t hold any losing intraday positions overnight. NRML buy orders are blocked for this strike price due to [open interest (OI)](https://support.zerodha.com/category/trading-and-markets/kite-web-and-mobile/articles/why-did-my-bank-nifty-option-order-get-rejected) limits prescribed by SEBI. You can exit existing positions or place NRML buy orders between 35900 - 36200.","severity":"low","prompt":false}]]}
        this.zerodhaService.nudge_order(symbol, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.broker_auth).subscribe((res) => {
            console.log('nudgeOrder response', res, res.data[0][0]);
            if (res.data[0] && res.data[0][0] && res.data[0][0].message) {
                let msg = res.data[0][0].message;
                let sliced = msg.slice(-14);
                sliced = sliced.slice(0, -1);
                let split = sliced.split('-');
                if (instru === 'NIFTY') {
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.nfPEOILimit = Number(split[0].trim());
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.nfCEOILimit = Number(split[1].trim());
                }
                if (instru === 'BANKNIFTY') {
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfPEOILimit = Number(split[0].trim());
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfCEOILimit = Number(split[1].trim());
                }
                // console.log(ceOILimit, peOILimit);
                // AppConstants.requestStatusEvent$.next({'status': 'success', 'message': 'Nudge Success ' + scrip});
            }
            else {
                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.nfPEOILimit = null;
                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.nfCEOILimit = null;
                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfPEOILimit = null;
                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfCEOILimit = null;
            }
        }, error => {
            console.log('nudgeOrder error', error);
            let errmsg = 'Error (mostly timeout)';
            if (error.error && error.error.message) {
                errmsg = error.error.message;
            }
            else {
                errmsg = error.message;
            }
            // AppConstants.requestStatusEvent$.next({'status': 'danger', 'message': scrip + ' ' + errmsg});
            // this.appService.playAudio('error');
        });
    }
    getSpotValue() {
        let underlying = '';
        if (this.oc_instru === 'NIFTY') {
            underlying = 'NIFTY50';
        }
        else if (this.oc_instru === 'BANKNIFTY') {
            underlying = 'BANKNIFTY';
        }
        else if (this.oc_instru === 'FINNIFTY') {
            underlying = 'FINNIFTY';
        }
        else if (this.oc_instru === 'MIDCPNIFTY') {
            underlying = 'MIDCPNIFTY';
        }
        else if (this.oc_instru === 'SENSEX') {
            underlying = 'SENSEX';
        }
        else if (this.oc_instru === 'BANKEX') {
            underlying = 'BANKEX';
        }
        else if (this.oc_instru === 'USDINR') {
            underlying = 'USDINR';
        }
        let e = this.mapService.getScripLTP(null, null, underlying, null);
        return e;
    }
    inlineOCRangeUpdate() {
        let oc_range_higher = null;
        let oc_range_lower = null;
        if (this.inlineOC_higherRange && this.inlineOC_higherRange != '') {
            oc_range_higher = this.inlineOC_higherRange;
        }
        if (this.inlineOC_lowerRange && this.inlineOC_lowerRange != '') {
            oc_range_lower = this.inlineOC_lowerRange;
        }
        this.chartService.updateOCRange(true, oc_range_higher, oc_range_lower);
    }
    inlineOCResendSub() {
        this.chartService.updateOCRange(true);
    }
    rollStrikeKeyUp(event, pos) {
        console.log(event);
        if (event.key === 'ArrowUp') {
            this.changeRollStrike(this.strikeStepValue, pos);
        }
        else if (event.key === 'ArrowDown') {
            this.changeRollStrike(-this.strikeStepValue, pos);
        }
    }
    changeRollStrike(step, pos) {
        let symbol = pos.rollstrike_new;
        let type = '';
        if (symbol.includes('CE')) {
            type = 'CE';
        }
        if (symbol.includes('PE')) {
            type = 'PE';
        }
        symbol = Number(symbol.slice(0, -2)); // remove CE PE at end
        let new_strike = (symbol + step) + type;
        pos.rollstrike_new = new_strike;
    }
    checkAlerts() {
        if (this.curr_positions_trades) {
            this.curr_positions_trades.forEach(element => {
                if (element.alertPrice) {
                    let ltp = this.getLTP(element.expiry, element.scrip);
                    if (ltp > element.alertPrice) {
                        this.appService.playAudio('success');
                        element.alertStatus = 'Alert';
                    }
                    else {
                        element.alertStatus = '';
                    }
                }
                else {
                    element.alertStatus = '';
                }
            });
        }
        if (this.strategyAlertPrice && this.strategyAlertPrice != '' && this.currentSold >= Number(this.strategyAlertPrice)) {
            this.strategyAlertText = 'Alert';
            this.appService.playAudio('success');
        }
        else {
            this.strategyAlertText = '';
        }
        if (this.strategyAlertPrice1 && this.strategyAlertPrice1 != '' && this.getStrategyPnL(1) <= Number(this.strategyAlertPrice1)) {
            this.strategyAlertText1 = 'Alert';
            this.appService.playAudio('success');
        }
        else {
            this.strategyAlertText1 = '';
        }
        if (this.strategyAlertPrice2 && this.strategyAlertPrice2 != '' && this.getStrategyPnL(2) <= Number(this.strategyAlertPrice2)) {
            this.strategyAlertText2 = 'Alert';
            this.appService.playAudio('success');
        }
        else {
            this.strategyAlertText2 = '';
        }
        if (this.strategyAlertPrice3 && this.strategyAlertPrice3 != '' && this.getStrategyPnL(3) <= Number(this.strategyAlertPrice3)) {
            this.strategyAlertText3 = 'Alert';
            this.appService.playAudio('success');
        }
        else {
            this.strategyAlertText3 = '';
        }
        if (this.strategyAlertPrice4 && this.strategyAlertPrice4 != '' && this.getStrategyPnL(4) <= Number(this.strategyAlertPrice4)) {
            this.strategyAlertText4 = 'Alert';
            this.appService.playAudio('success');
        }
        else {
            this.strategyAlertText4 = '';
        }
        if (this.strategyAlertPrice5 && this.strategyAlertPrice5 != '' && this.getStrategyPnL(5) <= Number(this.strategyAlertPrice5)) {
            this.strategyAlertText5 = 'Alert';
            this.appService.playAudio('success');
        }
        else {
            this.strategyAlertText5 = '';
        }
        if (this.strategyAlertPrice6 && this.strategyAlertPrice6 != '' && this.getStrategyPnL(6) <= Number(this.strategyAlertPrice6)) {
            this.strategyAlertText6 = 'Alert';
            this.appService.playAudio('success');
        }
        else {
            this.strategyAlertText6 = '';
        }
    }
    update_chart_strike(strike, type, fetch = false) {
        if (type === 'CE') {
            this.chart_ce = strike;
        }
        else if (type === 'PE') {
            this.chart_pe = strike;
        }
        console.log('update_chart_strike', this.chart_ce, this.chart_pe);
        if (fetch) { // from OC
            this.chartingService.updateInstruExpiry(this.instru, this.expiryDate);
            this.chartingService.fetchChartData(strike, false);
            setTimeout(() => {
                console.log('loading chart', strike, type);
                this.chartingService.updateSingleChart(strike, type, true, this.expand_single_charts);
            }, 1000);
        }
        else { // from individual option charts
            this.chartingService.updateSingleChart(strike, type, true, this.expand_single_charts);
        }
    }
    update_strangle_chart() {
        if (this.simulate_strategy) {
            this.chartingService.initStrangleChart_simulated(this.simulate_instru, this.simulateCurrDateObj, this.strangle_chart_ce, this.strangle_chart_pe, this.strangle_chart_simulate_tillend, this.simulateCurrDateObj.getHours(), this.simulateCurrDateObj.getMinutes());
        }
        else {
            this.chartingService.fetchStrangleStrikesData(this.strangle_chart_ce, this.strangle_chart_pe, true);
        }
    }
    loadSpotChart() {
        if (this.spot_fetch_interval) {
            clearInterval(this.spot_fetch_interval);
        }
        if (this.chart_prices_interval) {
            clearInterval(this.chart_prices_interval);
        }
        this.chartingService.initSpotChart(this.spot_chart_instru, this.expand_single_charts);
        this.spot_fetch_interval = setInterval(() => {
            this.chartingService.fetchSpotChartData();
        }, 60000);
        this.chart_prices_interval = setInterval(() => {
            this.chartingService.plotCurrentPrices();
        }, 1000);
    }
    update_charts_inputs() {
        // this.charts_multiple = 100;
        // this.charts_instru = 'BANKNIFTY';
        //let multiple = 50;
        let range;
        if (this.charts_instru === 'NIFTY') {
            this.charts_multiple = 50;
            range = 450;
            if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.isSimulatedStrategy) {
                range = 300;
            }
        }
        else if (this.charts_instru === 'BANKNIFTY') {
            this.charts_multiple = 100;
            range = 1400;
            if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.isSimulatedStrategy) {
                range = 900;
            }
        }
        else if (this.charts_instru === 'FINNIFTY') {
            this.charts_multiple = 50;
            range = 450;
            if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.isSimulatedStrategy) {
                range = 300;
            }
        }
        else if (this.charts_instru === 'MIDCPNIFTY') {
            this.charts_multiple = 25;
            range = 450;
            if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.isSimulatedStrategy) {
                range = 300;
            }
        }
        else if (this.charts_instru === 'SENSEX') {
            this.charts_multiple = 100;
            range = 1400;
            if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.isSimulatedStrategy) {
                range = 900;
            }
        }
        else if (this.charts_instru === 'BANKEX') {
            this.charts_multiple = 100;
            range = 1400;
            if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.isSimulatedStrategy) {
                range = 900;
            }
        }
        else if (this.charts_instru === 'USDINR') {
            this.charts_multiple = 0.25;
            range = 1;
            if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.isSimulatedStrategy) {
                range = 0.5;
            }
        }
        let ltp = this.mapService.getScripLTP(null, null, this.charts_instru, null);
        let spotStrike = (Math.round(ltp / this.charts_multiple) * this.charts_multiple);
        this.call_start_strike = spotStrike;
        this.call_end_strike = spotStrike + range;
        this.put_start_strike = spotStrike - range;
        this.put_end_strike = spotStrike;
    }
    initSTCharts() {
        this.chartingService.initForCallsPuts_simulated_0(this.simulate_instru, this.simulateExpiryDate, this.st_chart_radio, this.st_chart_strike);
    }
    initSTCharts1() {
        this.chartingService.initForCallsPuts_simulated_1(this.simulate_instru, this.simulateExpiryDate, true, this.st_chart_radio, this.st_chart_strike);
    }
    backtestExpiryStrangles() {
        this.backtestService.expiryStrangles(this.simulate_instru, this.simulateExpiryDate);
    }
    backtestStrangleSL_Reentry() {
        this.backtestService.perDayDriver(this.simulate_instru, this.simulateExpiryDate, 'strangle_SL_reentry');
    }
    backtestLongFly() {
        this.backtestService.perDayDriver(this.simulate_instru, this.simulateExpiryDate, 'long_fly');
    }
    getChartLabel(id) {
        if (id in _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.st_simulate_charts) {
            return _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.st_simulate_charts[id];
        }
        else {
            return 'None';
        }
    }
    getChartValues(id) {
        if (id in _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.st_simulate_charts_values) {
            return _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.st_simulate_charts_values[id];
        }
        else {
            return 'None';
        }
    }
    initCharts() {
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.isSimulatedStrategy) {
            this.chart_strikes_ce = [];
            this.chart_strikes_pe = [];
            for (let i = this.call_end_strike; i >= this.call_start_strike; i -= this.charts_multiple) {
                this.chart_strikes_ce.push(i + 'CE');
            }
            for (let i = this.put_end_strike; i >= this.put_start_strike; i -= this.charts_multiple) {
                this.chart_strikes_pe.push(i + 'PE');
            }
            this.chartingService.initSpotChart_simulated(this.charts_instru, this.simulateCurrDateObj);
            this.chartingService.init_opt_charts_simulated(this.charts_instru, this.call_start_strike, this.call_end_strike, this.put_start_strike, this.put_end_strike, this.charts_multiple, this.simulateCurrDateObj);
            // let ltp = this.mapService.getScripLTP(null, null, this.charts_instru, null);
            // let spotStrike = (Math.round(ltp / this.charts_multiple) * this.charts_multiple);
            //this.chartingService.initStrangleChart_simulated(this.charts_instru, this.simulateCurrDateObj, spotStrike + 200, 'CE', spotStrike - 200, 'PE', true, 9, 30);
            // this.chartingService.initStrangleChart_simulated(this.charts_instru, this.simulateCurrDateObj, '42100', 'CE', '41700', 'PE');
        }
        else {
            /* let expiry;
            if (this.charts_instru === 'NIFTY') {
              expiry = this.currExpiry;
            } else if (this.charts_instru === 'BANKNIFTY') {
              expiry = this.currExpiry;
            } else if (this.charts_instru === 'FINNIFTY') {
              expiry = this.currFinniftyExpiry;
            } else if (this.charts_instru === 'USDINR') {
              expiry = this.currUSDINRExpiry;
            } */
            let expiry = this.charts_expiry;
            this.chart_strikes_ce = [];
            this.chart_strikes_pe = [];
            let sub = [];
            for (let i = this.call_end_strike; i >= this.call_start_strike; i -= this.charts_multiple) {
                let e1 = this.mapService.getSubscriptionObject(i + 'CE', this.charts_instru, expiry);
                sub.push(e1);
                this.chart_strikes_ce.push(i + 'CE');
            }
            for (let i = this.put_end_strike; i >= this.put_start_strike; i -= this.charts_multiple) {
                let e1 = this.mapService.getSubscriptionObject(i + 'PE', this.charts_instru, expiry);
                sub.push(e1);
                this.chart_strikes_pe.push(i + 'PE');
            }
            console.log('options charts feed', sub);
            this.appService.sendSubscriptions(sub);
            this.chartingService.init_opt_charts(this.charts_instru, this.call_start_strike, this.call_end_strike, this.put_start_strike, this.put_end_strike, this.charts_multiple, expiry);
        }
    }
    onSpotChartInstruChange(event) {
        // console.log(this.spot_chart_instru);
        this.chartingService.initSpotChart(this.spot_chart_instru, this.expand_single_charts);
    }
    onChartInstruChange(event) {
        this.update_charts_inputs();
    }
    onSimulateInstruChange(event) {
        this.simulate_expiries_arr = [];
        if (this.simulate_instru === 'NIFTY') {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.niftyExpiries.forEach(element => {
                let dformat = '' + element.getFullYear() + '-' + ('0' + (element.getMonth() + 1)).slice(-2) + '-' + ('0' + element.getDate()).slice(-2);
                this.simulate_expiries_arr.push(dformat);
            });
            this.simulate_expiries_arr.reverse();
        }
        if (this.simulate_instru === 'BANKNIFTY') {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfExpiries.forEach(element => {
                let dformat = '' + element.getFullYear() + '-' + ('0' + (element.getMonth() + 1)).slice(-2) + '-' + ('0' + element.getDate()).slice(-2);
                this.simulate_expiries_arr.push(dformat);
            });
            this.simulate_expiries_arr.reverse();
        }
        if (this.simulate_instru === 'FINNIFTY') {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.finniftyExpiries.forEach(element => {
                let dformat = '' + element.getFullYear() + '-' + ('0' + (element.getMonth() + 1)).slice(-2) + '-' + ('0' + element.getDate()).slice(-2);
                this.simulate_expiries_arr.push(dformat);
            });
            this.simulate_expiries_arr.reverse();
        }
        if (this.simulate_instru === 'MIDCPNIFTY') {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.midcapExpiries.forEach(element => {
                let dformat = '' + element.getFullYear() + '-' + ('0' + (element.getMonth() + 1)).slice(-2) + '-' + ('0' + element.getDate()).slice(-2);
                this.simulate_expiries_arr.push(dformat);
            });
            this.simulate_expiries_arr.reverse();
        }
        if (this.simulate_instru === 'SENSEX') {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.sensexExpiries.forEach(element => {
                let dformat = '' + element.getFullYear() + '-' + ('0' + (element.getMonth() + 1)).slice(-2) + '-' + ('0' + element.getDate()).slice(-2);
                this.simulate_expiries_arr.push(dformat);
            });
            this.simulate_expiries_arr.reverse();
        }
        if (this.simulate_instru === 'BANKEX') {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bankexExpiries.forEach(element => {
                let dformat = '' + element.getFullYear() + '-' + ('0' + (element.getMonth() + 1)).slice(-2) + '-' + ('0' + element.getDate()).slice(-2);
                this.simulate_expiries_arr.push(dformat);
            });
            this.simulate_expiries_arr.reverse();
        }
    }
    onSimulateExpiryChange(event) {
        this.simulateExpiryDate = this.simulate_expiries_arr_value;
        this.simulateStartDate = this.simulate_expiries_arr_value;
    }
    isChartStrikeInCurrStrategy(strike) {
        return this.chartService.isChartStrikeInCurrStrategy(strike);
    }
    expandSingleChartsChange(event) {
        this.chartingService.resizeSingleCharts(this.expand_single_charts);
    }
    ngOnInit() {
        /* let positions = {
          instru: 'NIFTY',
          expiry: '2020-10-01',
          trades:
          [
            {
              qty: -375,
              scrip: '10950PE',
              expiry: '01OCT2020',
              entry: 19.2,
              exit: 0,
            },
            {
              qty: 150,
              scrip: '11050PE',
              expiry: '01OCT2020',
              entry: 32.7,
              exit: 0,
            },
            {
              qty: -375,
              scrip: '11450CE',
              expiry: '01OCT2020',
              entry: 10,
              exit: 0,
            },
            {
              qty: 225,
              scrip: '11500CE',
              expiry: '01OCT2020',
              entry: 6.35,
              exit: 0,
            },
            {
              qty: -75,
              scrip: '11200CE',
              expiry: '01OCT2020',
              entry: 95.95,
              exit: 0,
            },
            {
              qty: -75,
              scrip: '11200PE',
              expiry: '01OCT2020',
              entry: 66.2,
              exit: 0,
            },
            {
              qty: 75,
              scrip: '11250CE',
              expiry: '01OCT2020',
              entry: 67.25,
              exit: 0,
            },
            {
              qty: 75,
              scrip: '11150PE',
              expiry: '01OCT2020',
              entry: 50,
              exit: 0,
            },
          ]
        };
        localStorage.setItem(
          'curr_positions1',
          JSON.stringify(positions)
        ); */
        // localStorage.removeItem('curr_positions1');
        // this.loadPayoffData();
        // this.getPayoff();
        // this.getMargin();
        // this.doStrategiesSubscriptions();
        /***** LOCAL STORAGE RETRIEVE SAVE ************************************* */
        //this.chartService.loadIntradayData(this.intradayWatch);
        //this.chartService.initFetchIntraday(this.intradayWatch);
        //this.chartService.saveIntradayData();
        /****************************************** */
        // this.chartingService.initTV_charts_static();
        // this.chartingService.initTV_charts_changing();
        this.currExpiry = this.mapService.findCurrExpiryForDisplay(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.niftyExpiries);
        this.currBnfExpiry = this.mapService.findCurrExpiryForDisplay(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfExpiries);
        this.currFinniftyExpiry = this.mapService.findCurrExpiryForDisplay(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.finniftyExpiries);
        this.currMidcapExpiry = this.mapService.findCurrExpiryForDisplay(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.midcapExpiries);
        this.currSensexExpiry = this.mapService.findCurrExpiryForDisplay(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.sensexExpiries);
        this.currBankexExpiry = this.mapService.findCurrExpiryForDisplay(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bankexExpiries);
        this.currUSDINRExpiry = this.mapService.findCurrExpiryForDisplay(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.usdinrExpiries);
        this.charts_expiry = this.currExpiry;
        this.reset_place_orders();
        this.onSimulateInstruChange(null);
        for (let i = 1; i <= _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.numStrategies; i++) {
            this.use_tag_strategies[i] = true;
            this.use_include_guid_strategies[i] = true;
            this.use_exclude_guid_strategies[i] = true;
        }
        this.alerts = [];
        for (let index = 0; index < _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.numAlerts; index += 1) {
            this.alerts.push({ selected: false, scrip1: '40000CE', scrip2: '', instru: 'BANKNIFTY', expiry: this.currExpiry, compare: '>', price: 20, status: '' });
        }
        let alert_interval = setInterval(() => {
            if (this.alerts) {
                this.alerts.forEach((alert) => {
                    alert.status = '';
                    if (alert.selected) {
                        let ltp = null;
                        if (alert.scrip1) {
                            let ltp1 = this.mapService.getScripLTP(alert.instru, alert.expiry, this.mapService.parseScrip(alert.scrip1).scrip, this.mapService.parseScrip(alert.scrip1).type);
                            ltp = ltp1;
                            if (alert.scrip2) {
                                let ltp2 = this.mapService.getScripLTP(alert.instru, alert.expiry, this.mapService.parseScrip(alert.scrip2).scrip, this.mapService.parseScrip(alert.scrip2).type);
                                ltp += ltp2;
                            }
                        }
                        else { // index
                            ltp = this.mapService.getScripLTP(null, null, alert.instru, null);
                        }
                        if (alert.compare === '>') {
                            if (ltp > alert.price) {
                                alert.status = 'Alert';
                                this.appService.playAudio('success');
                            }
                            else {
                                alert.status = '';
                            }
                        }
                        if (alert.compare === '<') {
                            if (ltp < alert.price) {
                                alert.status = 'Alert';
                                this.appService.playAudio('success');
                            }
                            else {
                                alert.status = '';
                            }
                        }
                    }
                });
            }
            this.checkAlerts();
            this.getStrategyPnL();
            this.getStrategyPnL(1);
            this.getStrategyPnL(2);
            this.getStrategyPnL(3);
            this.getStrategyPnL(4);
            this.getStrategyPnL(5);
            this.getStrategyPnL(6);
        }, 1000);
        let refresh_interval = setInterval(() => {
            if (!this.hide_payoff) {
                this.updateChartData(this.payOffData);
            }
            this.getCEPEWeightage();
        }, 5000);
        let refresh_intervalP = setInterval(() => {
            if (!this.hide_payoff) {
                this.getPayoff();
            }
        }, 60000);
        let oc_refresh_interval = setInterval(() => {
            this.chartService.updateSpotStrike();
            this.oc_strikes = this.chartService.updateOCValues();
            // console.log(this.oc_strikes);
        }, 1000);
        /* let refresh_intervalI = setInterval(() => {
          //this.updateIntradayChartData();
        }, 2000); */
        let refresh_interval_knife = setInterval(() => {
            if (this.auto_adjust_knife) {
                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.miscEvent$.next('refreshAll');
                setTimeout(() => {
                    this.adjustKnifeOrders();
                }, 4000);
            }
        }, 120000);
        for (let num = 1; num <= 6; num++) {
            let curr_positions = JSON.parse(localStorage.getItem('curr_positions' + num));
            if (curr_positions && curr_positions.trades) {
                if (num === 1) {
                    this.s1Trades = curr_positions;
                }
                if (num === 2) {
                    this.s2Trades = curr_positions;
                }
                if (num === 3) {
                    this.s3Trades = curr_positions;
                }
                if (num === 4) {
                    this.s4Trades = curr_positions;
                }
                if (num === 5) {
                    this.s5Trades = curr_positions;
                }
                if (num === 6) {
                    this.s6Trades = curr_positions;
                }
            }
        }
    }
    ngAfterViewInit() {
        setTimeout(() => {
            // this.chartService.init_opt_charts(this.num_charts);
        });
        /* this.cdr.detectChanges(); */
    }
    ordersTextareaUpdated(event) {
        // console.log(this.ordersTextarea);
        if (this.orders_broker === 'upstox') {
            this.parseUpstoxOrders();
        }
        else if (this.orders_broker === 'zerodha') {
            this.parseZerodhaOrders();
        }
    }
    posQtyUpdated(event, pos) {
        /* if ((pos.qty < 0 && pos.roll_qty > 0) || (pos.qty > 0 && pos.roll_qty < 0)) {
          pos.roll_qty = -pos.roll_qty;
        } */
        pos.roll_qty = this.appService.getQtyUptoFreezeLimit(this.instru, pos.qty);
    }
    parseZ1() {
        /*
        BANKNIFTY2240733500PE		200	1160	1190	30	2.5862	0	0		0	0	0
        BANKNIFTY2240733700PE		300	4470	6943.7499	2473.75	55.3412	0	0		0	0	0
    
              scrip                       qty   buy       sell   pnl    pnl       -   Open type value
        ['', 'BANKNIFTY2240733500PE', '', '200', '1160', '1190', '30', '2.5862', '0', '0', '', '0', '0', '0']
        */
        this.orders_parsed = [];
        let split = this.ordersTextarea.split('\n');
        console.log(split);
        for (let i = 0; i < split.length; i++) {
            let line = split[i];
            line = line.replace('\n', '\t');
            let details = line.split('\t');
            console.log(details);
            let o = new _common_models__WEBPACK_IMPORTED_MODULE_3__.OrderPasted1();
            o.instru = 'BANKNIFTY';
            o.scrip = details[1].slice(-7);
            o.qty = Number(details[3]);
            /* if (details[1] === 'SELL') {
              o.qty = -o.qty;
            } */
            o.entry = Number(details[4].replace(',', '')) / o.qty;
            o.exit = Number(details[5].replace(',', '')) / o.qty;
            o.strategy = this.currLoadNum;
            if (o.qty !== 0) {
                this.orders_parsed.push(o);
            }
            if (details[10] !== '') {
                let o1 = new _common_models__WEBPACK_IMPORTED_MODULE_3__.OrderPasted1();
                o1.instru = 'BANKNIFTY';
                o1.scrip = details[1].slice(-7);
                o1.qty = Number(details[9]);
                /* if (details[1] === 'SELL') {
                  o.qty = -o.qty;
                } */
                o1.entry = Number(details[11].replace(',', '')) / o1.qty;
                o1.exit = 0;
                if (details[10] == 'sell') {
                    o1.qty = -o1.qty;
                }
                o1.strategy = this.currLoadNum;
                this.orders_parsed.push(o1);
            }
        }
        console.log(this.orders_parsed);
    }
    parseZerodhaOrders() {
        /*
        
        09:32:37	SELL	BANKNIFTY FEB 40400 CE NFO	NRML	250 / 250	13.60	COMPLETE
        09:32:31	BUY	BANKNIFTY FEB 40000 CE NFO	NRML	250 / 250	22.65	COMPLETE
        
        14:59:52	BUY	BANKNIFTY 2nd w DEC 38000 CE NFO	NRML	125 / 125	7.20	COMPLETE
        11:36:58	SELL	BANKNIFTY 2nd w DEC 35000 PE NFO
        NRML	75 / 75	140.85	COMPLETE
        11:36:58	SELL	BANKNIFTY 2nd w DEC 35700 PE NFO
        NRML	175 / 175	303.71	COMPLETE
        11:36:58	BUY	BANKNIFTY 2nd w DEC 36300 CE NFO
        NRML	175 / 175	162.56	COMPLETE
        
        14:59:52	BUY	BANKNIFTY 2nd w DEC 38000 CE NFO
        NRML	125 / 125	7.20	COMPLETE
        11:36:58	SELL	BANKNIFTY 2nd w DEC 35000 PE NFO
        NRML	75 / 75	140.85	COMPLETE
        11:36:58	SELL	BANKNIFTY 2nd w DEC 35700 PE NFO	NRML	175 / 175	303.71	COMPLETE
        11:36:58	BUY	BANKNIFTY 2nd w DEC 36300 CE NFO	NRML	175 / 175	162.56	COMPLETE
        */
        this.orders_parsed = [];
        let split = this.ordersTextarea.split('COMPLETE\n');
        console.log(split);
        if (split) {
            for (let i = 0; i < split.length; i++) {
                let line = split[i];
                line = line.replace('\n', '\t');
                let details = line.split('\t');
                // details = 0: 09:32:37, 1: SELL, 2: BANKNIFTY FEB 40400 CE NFO, 3: NRML, 4: 250 / 250, 5: 13.60, 6: COMPLETE
                // details = 0: 09:32:37, 1: SELL, 2: BANKNIFTY 2nd w DEC 40400 CE NFO, 3: NRML, 4: 250 / 250, 5: 13.60, 6: COMPLETE
                let o = new _common_models__WEBPACK_IMPORTED_MODULE_3__.OrderPasted();
                o.instru = details[2].split(' ')[0];
                if (isNaN(parseInt(details[2].split(' ')[4]))) {
                    o.scrip = details[2].split(' ')[2] + details[2].split(' ')[3];
                }
                else {
                    o.scrip = details[2].split(' ')[4] + details[2].split(' ')[5];
                }
                o.qty = Number(details[4].split(' ')[0]);
                if (details[1] === 'SELL') {
                    o.qty = -o.qty;
                }
                o.price = Number(details[5].replace(',', ''));
                o.strategy = this.currLoadNum;
                this.orders_parsed.push(o);
            }
        }
        console.log(this.orders_parsed);
    }
    parseUpstoxOrders() {
        /*
    BANKNIFTY 36400CE
    NFO 02DEC21
    Complete
    03:26 PM	Delivery	Sell	175/175	54.00	0	0	54.51
        
    BANKNIFTY 36300CE
    NFO 02DEC21
    Complete
    03:26 PM	Delivery	Buy	175/175	70.00	0	0	69.40
    */
        this.orders_parsed = [];
        let split = this.ordersTextarea.split('\n\t\n');
        // console.log(split);
        if (split) {
            for (let i = 0; i < split.length; i++) {
                let line = split[i];
                let order = line.split('\n');
                console.log(order);
                let o = new _common_models__WEBPACK_IMPORTED_MODULE_3__.OrderPasted();
                o.instru = order[0].split(' ')[0];
                o.expiry = order[1].split(' ')[1];
                o.scrip = order[0].split(' ')[1];
                let object = { instru: o.instru, expiry: o.expiry, strike: this.mapService.parseScrip(o.scrip).scrip, optionType: this.mapService.parseScrip(o.scrip).type };
                o.symbol = this.mapService.getMapKey(object);
                let details = order[3].split('\t');
                o.qty = Number(details[3].split('/')[0]);
                if (details[2] === 'Sell') {
                    o.qty = -o.qty;
                }
                o.price = Number(details[7]);
                o.strategy = this.currLoadNum;
                this.orders_parsed.push(o);
            }
        }
        console.log(this.orders_parsed);
    }
    addOrdersToStrategy() {
        for (let i = 0; i < this.orders_parsed.length; i++) {
            this.addPosition(this.orders_parsed[i].qty, this.orders_parsed[i].scrip, this.orders_parsed[i].price);
            // this.addPosition1(this.orders_parsed[i].qty, this.orders_parsed[i].scrip, this.orders_parsed[i].entry, this.orders_parsed[i].exit);
        }
    }
    exportToCSV(num) {
        let export_file_name = 'Strategy_' + num + '_' + this.getDateInFormat() + '.csv';
        console.log('exporting: ', export_file_name);
        let curr_positions = JSON.parse(localStorage.getItem('curr_positions' + num));
        if (curr_positions && curr_positions.trades) {
            let instru = curr_positions.instru;
            let expiryDate = curr_positions.expiry;
            let curr_positions_trades = curr_positions.trades;
            console.log('exporting:', instru, expiryDate, curr_positions_trades);
            let str = '';
            str += instru + ',' + expiryDate + '\r\n';
            curr_positions_trades.forEach(pos => {
                let row = '';
                row += pos.qty + ',' + pos.scrip + ',' + pos.expiry + ',' + pos.entry + ',' + pos.exit;
                str += row + '\r\n';
            });
            const downloadFile = new Blob([str], {
                type: 'application/x-msdownload',
            });
            /* if (window.navigator && window.navigator.msSaveOrOpenBlob) {
              // for IE
              window.navigator.msSaveOrOpenBlob(downloadFile, export_file_name);
            } else { */
            const fileURL = URL.createObjectURL(downloadFile);
            const link = document.createElement('a');
            link.href = fileURL;
            link.target = '_blank';
            document.body.appendChild(link);
            link.download = export_file_name;
            link.click();
            link.parentNode.removeChild(link);
            // }
        }
    }
    getDateInFormat() {
        let date = new Date();
        let d = date.getDate();
        let m = date.getMonth() + 1; //Month from 0 to 11
        let y = date.getFullYear();
        let h = date.getHours();
        let mins = date.getMinutes();
        let s = date.getSeconds();
        let format = '' + (d <= 9 ? '0' + d : d) + (m <= 9 ? '0' + m : m) + y + '_' + (h <= 9 ? '0' + h : h) + (mins <= 9 ? '0' + mins : mins) + (s <= 9 ? '0' + s : s);
        return format;
    }
    fetchLastOI() {
        let ltp = this.mapService.getScripLTP(null, null, this.instru, null);
        let round_ltp = (Math.round(ltp / this.strikeStepValue) * this.strikeStepValue);
        let yday = this.appService.getLastWorkingDay(new Date());
        let yday_datetime = '' + yday.getFullYear() + '-' + ('0' + (yday.getMonth() + 1)).slice(-2) + '-' + ('0' + yday.getDate()).slice(-2) + 'T15:29:00+0530';
        let counter1 = 0;
        for (let i = (round_ltp - this.loadOIDistance); i <= (round_ltp + this.loadOIDistance); i += this.strikeStepValue) {
            setTimeout(() => {
                let candles_ce = this.chartService.fetchChartData(i + 'CE', this.instru, this.expiryDate).subscribe((res) => {
                    //console.log('scrip data:', scrip, res);
                    if (res.data.candles) {
                        let arr = res.data.candles;
                        if (arr.length === 0) {
                            console.log('ZERO CANDLES FOR ', i + 'CE');
                        }
                        this.updateLastDayOI(i + 'CE', arr, yday_datetime);
                    }
                }, error => {
                    console.log('zerodha fetch chart error', error);
                });
                let candles_pe = this.chartService.fetchChartData(i + 'PE', this.instru, this.expiryDate).subscribe((res) => {
                    //console.log('scrip data:', scrip, res);
                    if (res.data.candles) {
                        let arr = res.data.candles;
                        if (arr.length === 0) {
                            console.log('ZERO CANDLES FOR ', i + 'PE');
                        }
                        this.updateLastDayOI(i + 'PE', arr, yday_datetime);
                    }
                }, error => {
                    console.log('zerodha fetch chart error', error);
                });
            }, counter1 * 1000);
            counter1++;
        }
    }
    updateLastDayOI(scrip, candles, yday_datetime) {
        // console.log('updateLastDayOI', scrip, candles, yday_datetime);
        if (candles) {
            let obj = candles.find(o => o[0] === yday_datetime);
            if (obj) {
                let lastday_oi = obj[6];
                this.mapService.setLastDayOI(this.instru, this.expiryDate, this.mapService.parseScrip(scrip).scrip, this.mapService.parseScrip(scrip).type, lastday_oi);
            }
        }
        // console.log('lastDayOI Map', this.mapService.lastDayOIMap, this.mapService.oiMap);
    }
    uploadExpiryFile(fileInput) {
        let fileReaded = fileInput.target.files[0];
        let reader = new FileReader();
        reader.readAsText(fileReaded);
        reader.onload = e => {
            let csv = String(reader.result);
            // console.log('csv:', csv);
            this.loadExpiryFile(csv);
        };
    }
    loadExpiryFile(importData) {
        let allTextLines_all_data = importData.split(/\r|\n|\r/);
        let allTextLines = allTextLines_all_data.filter(function (elem) {
            return elem !== '';
        });
        // console.log('allTextLines: ', allTextLines);
        let firstLine = allTextLines[0].split(','); // ignore first line header
        _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.simulateData = {};
        _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.stockChartData = {};
        for (let index = 1; index < allTextLines.length; index++) {
            // Ticker	Date/Time	Open	High	Low	Close	Volume	Open Interest
            // BANKNIFTY, 30-07-2021 9:15:00, 34698.8, 34698.8, 34445.4, 34607.7, 0, 0
            let split = allTextLines[index].split(',');
            let instru_name = split[0];
            instru_name = instru_name.replace('NIFTY FIN SERVICE', 'FINNIFTY');
            instru_name = instru_name.replace('NIFTY MIDCAP SELECT (MIDCPNIFTY)', 'MIDCPNIFTY');
            instru_name = instru_name.replace('BSE INDEX BANKEX', 'BANKEX');
            /* if (instru_name === 'USDINR') {
              instru_name = 'USDINR';
            } */
            let timeDict = {};
            timeDict = _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.simulateData[instru_name];
            if (!timeDict) {
                timeDict = {};
            }
            timeDict[split[1]] = Number(split[5]); // time = closing price
            _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.simulateData[instru_name] = timeDict;
            let instruDict = [];
            instruDict = _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.stockChartData[instru_name];
            if (!instruDict) {
                instruDict = [];
            }
            let datesplit = split[1].split(' ');
            let dateparts = datesplit[0].split('-');
            let timeparts = datesplit[1].split(':');
            let datecurr = new Date(Number(dateparts[2]), Number(dateparts[1]) - 1, Number(dateparts[0]), Number(timeparts[0]), Number(timeparts[1]), 0).getTime();
            instruDict.push([datecurr, Number(split[2]), Number(split[3]), Number(split[4]), Number(split[5]), Number(split[6])]);
            _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.stockChartData[instru_name] = instruDict;
        }
        console.log('simulateData', _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.simulateData);
        console.log('stockChartData', _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.stockChartData);
        if (_common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.simulateData) {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.isSimulatedStrategy = true;
        }
        this.simulateCurrDateObj = new Date(this.simulateStartDate);
        this.simulateCurrDateObj.setHours(this.simulateCurrHour);
        this.simulateCurrDateObj.setMinutes(this.simulateCurrMins);
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.simulateCurrDateObj = this.simulateCurrDateObj;
        let curr_date_string = '' + ('0' + this.simulateCurrDateObj.getDate()).slice(-2) + '-' + ('0' + (this.simulateCurrDateObj.getMonth() + 1)).slice(-2) + '-' + this.simulateCurrDateObj.getFullYear();
        this.simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + this.simulateCurrDateObj.getHours()).slice(-2) + ':' + ('0' + this.simulateCurrDateObj.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
        this.loadSimulatedOCForTime(this.simulate_instru, this.simulateCurrDateTimeString, this.simulateExpiryDate);
        this.loadOptionChain(this.simulate_instru, this.simulateExpiryDate);
    }
    loadSimulatedNextMins(mins = null) {
        if (this.simulateTimeAdv === 'add' || (mins && mins > 0)) {
            console.log('adding next', mins);
            if (mins) {
                this.simulateCurrDateObj.setMinutes(this.simulateCurrDateObj.getMinutes() + mins);
            }
            else {
                this.simulateCurrDateObj.setMinutes(this.simulateCurrDateObj.getMinutes() + Number(this.simulateTimeMins));
            }
            if ((this.simulateCurrDateObj.getHours() === 15 && this.simulateCurrDateObj.getMinutes() > 30) || this.simulateCurrDateObj.getHours() > 15) {
                let eod = new Date(this.simulateCurrDateObj);
                eod.setHours(15);
                eod.setMinutes(30);
                let diff = this.simulateCurrDateObj.getTime() - eod.getTime(); // difference in milliseconds
                let newday = new Date(this.simulateCurrDateObj);
                newday.setDate(newday.getDate() + 1);
                newday.setHours(9);
                newday.setMinutes(15);
                newday.setMilliseconds(newday.getMilliseconds() + diff);
                this.simulateCurrDateObj = new Date(newday);
                //console.log(eod, diff, newday);
            }
        }
        if (this.simulateTimeAdv === 'subtract' || (mins && mins < 0)) {
            console.log('subtract next', mins);
            if (mins) {
                console.log('mins', this.simulateCurrDateObj.getMinutes());
                this.simulateCurrDateObj.setMinutes(this.simulateCurrDateObj.getMinutes() + mins);
                console.log('mins2', this.simulateCurrDateObj.getMinutes());
            }
            else {
                this.simulateCurrDateObj.setMinutes(this.simulateCurrDateObj.getMinutes() - Number(this.simulateTimeMins));
            }
            if ((this.simulateCurrDateObj.getHours() === 9 && this.simulateCurrDateObj.getMinutes() < 15) || this.simulateCurrDateObj.getHours() < 9) {
                let sod = new Date(this.simulateCurrDateObj);
                sod.setHours(9);
                sod.setMinutes(15);
                let diff = sod.getTime() - this.simulateCurrDateObj.getTime(); // difference in milliseconds
                let newday = new Date(this.simulateCurrDateObj);
                newday.setDate(newday.getDate() - 1);
                newday.setHours(15);
                newday.setMinutes(30);
                newday.setMilliseconds(newday.getMilliseconds() - diff);
                this.simulateCurrDateObj = new Date(newday);
                //console.log(sod, diff, newday);
            }
        }
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.simulateCurrDateObj = this.simulateCurrDateObj;
        let curr_date_string = '' + ('0' + this.simulateCurrDateObj.getDate()).slice(-2) + '-' + ('0' + (this.simulateCurrDateObj.getMonth() + 1)).slice(-2) + '-' + this.simulateCurrDateObj.getFullYear();
        this.simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + this.simulateCurrDateObj.getHours()).slice(-2) + ':' + ('0' + this.simulateCurrDateObj.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
        this.loadSimulatedOCForTime(this.simulate_instru, this.simulateCurrDateTimeString, this.simulateExpiryDate);
    }
    loadSimulatedOCForTime(instru, dateTimeString, expiry_date) {
        let curr_date_time = dateTimeString;
        console.log('loadSimulatedOCForTime', curr_date_time);
        for (let [key, value] of Object.entries(_common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.simulateData)) {
            // console.log(`${key}: ${value}`);
            if (key === instru || (key.startsWith(instru) && (key.endsWith('CE') || key.endsWith('PE')))) {
                if (key === instru) {
                    let symbol = instru;
                    if (instru === 'NIFTY') {
                        symbol = 'NIFTY50';
                    }
                    if (instru === 'USDINR') {
                        symbol = 'USDINR';
                        // let expiry = this.mapService.getExpiryString(AppConstants.monthlyExpiryDatesUSDINR[AppConstants.year + AppConstants.USDINR_FUT_MONTH]);
                        // symbol = 'USDINR' + expiry + AppConstants.USDINR_FUT_MONTH + 'FUT';
                    }
                    this.mapService.setLtp(symbol, value[curr_date_time]);
                }
                else {
                    let scrip = key;
                    scrip = scrip.replace(instru, '');
                    scrip = scrip.replace('WK', '');
                    let object = { instru: instru, expiry: expiry_date, strike: this.mapService.parseScrip(scrip).scrip, optionType: this.mapService.parseScrip(scrip).type };
                    let symbol = this.mapService.getMapKey(object);
                    let ltp = value[curr_date_time];
                    this.mapService.setLtp(symbol, ltp);
                }
            }
        }
        this.addScripToChart(this.simulate_instru, null);
        this.getPayoff();
        console.log('ltpMap', this.mapService.ltpMap);
    }
    importCSV(fileInput, num) {
        let fileReaded = fileInput.target.files[0];
        let reader = new FileReader();
        reader.readAsText(fileReaded);
        reader.onload = e => {
            let csv = String(reader.result);
            console.log('csv:', csv);
            this.loadPayoffData(num, true, csv);
        };
    }
    loadImportedPositions(importData) {
        let allTextLines_all_data = importData.split(/\r|\n|\r/);
        let allTextLines = allTextLines_all_data.filter(function (elem) {
            return elem !== '';
        });
        console.log('allTextLines: ', allTextLines);
        let firstLine = allTextLines[0].split(',');
        let instru = firstLine[0];
        let expiryDate = firstLine[1];
        let trades = [];
        for (let index = 1; index < allTextLines.length; index++) {
            let line = allTextLines[index].split(',');
            trades.push({ qty: Number(line[0]), scrip: line[1], expiry: line[2], entry: Number(line[3]), exit: Number(line[4]) });
        }
        let curr_positions = { instru: '', expiry: '', trades: {} };
        curr_positions.instru = instru;
        curr_positions.expiry = expiryDate;
        curr_positions.trades = trades;
        return curr_positions;
    }
    loadOptionChain(instru = null, expiryDate = null) {
        if (instru && expiryDate) {
            this.chartService.optionChainEvent$.next([instru, expiryDate]);
            this.oc_instru = instru;
            this.setInlineOCQty(this.oc_instru);
            this.chartService.processOCRequest(instru, expiryDate);
        }
        else if (this.instru && this.expiryDate) {
            this.chartService.optionChainEvent$.next([this.instru, this.expiryDate]);
            this.oc_instru = this.instru;
            this.setInlineOCQty(this.oc_instru);
            this.chartService.processOCRequest(this.instru, this.expiryDate);
        }
        else {
            console.log('No data to load');
        }
    }
    setInlineOCQty(instru) {
        if (instru === 'NIFTY') {
            this.inlineOC_qty = -600;
        }
        else if (instru === 'BANKNIFTY') {
            this.inlineOC_qty = -510;
        }
        else if (instru === 'FINNIFTY') {
            this.inlineOC_qty = -600;
        }
        else if (instru === 'MIDCPNIFTY') {
            this.inlineOC_qty = -450;
        }
        else if (instru === 'SENSEX') {
            this.inlineOC_qty = -300;
        }
        else if (instru === 'BANKEX') {
            this.inlineOC_qty = -645;
        }
        else {
            this.inlineOC_qty = -300;
        }
    }
    doSingleStrategySubscription(alert) {
        if (this.instru && this.expiryDate && this.curr_positions_trades) {
            this.subscribeStrategiesPositionsFeed(this.instru, this.expiryDate, this.curr_positions_trades);
        }
        else {
            console.log('Nothing to subscribe');
        }
    }
    doStrategiesSubscriptions() {
        for (let num = 1; num <= 6; num++) {
            let curr_positions = JSON.parse(localStorage.getItem('curr_positions' + num));
            if (curr_positions && curr_positions.trades) {
                if (num === 1) {
                    this.s1Trades = curr_positions;
                }
                if (num === 2) {
                    this.s2Trades = curr_positions;
                }
                if (num === 3) {
                    this.s3Trades = curr_positions;
                }
                if (num === 4) {
                    this.s4Trades = curr_positions;
                }
                if (num === 5) {
                    this.s5Trades = curr_positions;
                }
                if (num === 6) {
                    this.s6Trades = curr_positions;
                }
                let instru = curr_positions.instru;
                let expiryDate = curr_positions.expiry;
                let trades = curr_positions.trades;
                this.subscribeStrategiesPositionsFeed(instru, expiryDate, trades);
            }
        }
        this.subscribeOrders();
        this.subscribeAlerts();
        this.subscribeKnife();
        /* this.intradayWatch.forEach(element => {
          if (element.scrip !== 'FUT' && element.scrip !== 'SPOT') {
            this.subscribeIntradayWatchFeed(element.instru, element.expiry, element.scrip);
          }
        }); */
    }
    subscribeOrders() {
        let sub = [];
        if (this.place_orders) {
            this.place_orders.forEach((pos) => {
                if (pos.curr_scrip) {
                    let e1 = this.mapService.getSubscriptionObject(pos.curr_scrip, pos.instru, pos.expiry_date);
                    sub.push(e1);
                }
                if (pos.new_scrip) {
                    let e2 = this.mapService.getSubscriptionObject(pos.new_scrip, pos.instru, pos.expiry_date);
                    sub.push(e2);
                }
            });
        }
        console.log('orders feed', sub);
        this.appService.sendSubscriptions(sub);
    }
    subscribeAlerts() {
        let sub = [];
        if (this.alerts) {
            this.alerts.forEach((pos) => {
                if (pos.selected) {
                    if (pos.scrip1) {
                        let e1 = this.mapService.getSubscriptionObject(pos.scrip1, pos.instru, pos.expiry);
                        sub.push(e1);
                    }
                    if (pos.scrip2) {
                        let e2 = this.mapService.getSubscriptionObject(pos.scrip2, pos.instru, pos.expiry);
                        sub.push(e2);
                    }
                }
            });
        }
        console.log('alerts feed', sub);
        this.appService.sendSubscriptions(sub);
    }
    subscribeKnife() {
        let sub = [];
        if (this.knife_orders) {
            this.knife_orders.forEach((k) => {
                if (k.scrip) {
                    let e1 = this.mapService.getSubscriptionObject(k.scrip, k.instru, k.expiry_date);
                    sub.push(e1);
                }
            });
        }
        console.log('knife feed', sub);
        this.appService.sendSubscriptions(sub);
    }
    subscribeStrategiesPositionsFeed(instru, expiry_date, trades) {
        let sub = [];
        trades.forEach(pos => {
            let e1 = this.mapService.getSubscriptionObject(pos.scrip, instru, pos.expiry);
            sub.push(e1);
            if (pos.rollstrike_new) {
                let e2 = this.mapService.getSubscriptionObject(pos.rollstrike_new, instru, pos.expiry);
                sub.push(e2);
            }
            if (pos.exit === 0) {
                let symbol = pos.scrip;
                let type = '';
                if (symbol.includes('CE')) {
                    type = 'CE';
                }
                if (symbol.includes('PE')) {
                    type = 'PE';
                }
                symbol = Number(symbol.slice(0, -2)); // remove CE PE at end
                let strike = (symbol + 200) + type;
                sub.push(this.mapService.getSubscriptionObject(strike, instru, pos.expiry));
                strike = (symbol + 100) + type;
                sub.push(this.mapService.getSubscriptionObject(strike, instru, pos.expiry));
                strike = (symbol - 100) + type;
                sub.push(this.mapService.getSubscriptionObject(strike, instru, pos.expiry));
            }
        });
        sub.push(this.mapService.getSubscriptionObject(this.hypo_future_strike + 'CE', instru, expiry_date));
        sub.push(this.mapService.getSubscriptionObject(this.hypo_future_strike + 'PE', instru, expiry_date));
        /* let ltp = 14000; // TODO: HOW TO DECIDE LTP OF INSTRUMENT AT TIME OF INITIAL SUBSCRIPTIONS !?
        let range = 1000;
        let range_multiple = 50;
        let increment = 50;
        if (this.instru === 'BANKNIFTY') {
          ltp = 32000;
          range = 3000;
          range_multiple = 100;
          increment = 100;
        }
        if (this.instru === 'USDINR') {
          ltp = this.hypo_future_strike;
          range = 2;
          range_multiple = 0.25;
          increment = 0.25;
        }
    
        let round_ltp = (Math.round(ltp / range_multiple) * range_multiple);
        let lower_range = round_ltp - range; // TODO: range depends on instru
        let upper_range = round_ltp + range;
    
        for (let point = lower_range; point <= upper_range; point += increment) {
    
          let expiryDate = new Date(expiry_date).toDateString();
    
          let e1 = new Instrument();
          e1.expiry = expiryDate;
          e1.instru = instru;
          e1.strike = Number(point);
          e1.type = 'CE';
          sub.push(e1);
    
          let e2 = new Instrument();
          e2.expiry = expiryDate;
          e2.instru = instru;
          e2.strike = Number(point);
          e2.type = 'PE';
          sub.push(e2);
        } */
        console.log('strategies positions feed', sub);
        this.appService.sendSubscriptions(sub);
    }
    subscribeIntradayWatchFeed(instru, expiry_date, scrip) {
        let sub = [];
        let symbol = scrip;
        let type = '';
        if (symbol.includes('CE')) {
            type = 'CE';
        }
        if (symbol.includes('PE')) {
            type = 'PE';
        }
        console.log('subscribeIntradayWatchFeed symbol: ' + symbol);
        symbol = symbol.slice(0, -2); // remove CE PE at end
        let expiryDate = new Date(expiry_date).toDateString();
        let e1 = new _common_models__WEBPACK_IMPORTED_MODULE_3__.Instrument();
        e1.expiry = expiryDate;
        e1.instru = instru;
        e1.strike = Number(symbol);
        e1.type = type;
        sub.push(e1);
        console.log('intraday watch feed', sub);
        this.appService.sendSubscriptions(sub);
    }
    loadPayoffData(num, isImported = false, importData = null) {
        let curr_positions = null;
        if (!isImported) {
            curr_positions = JSON.parse(localStorage.getItem('curr_positions' + num));
        }
        else {
            curr_positions = this.loadImportedPositions(importData);
        }
        this.currLoadNum = num;
        console.log('curr_positions: ', curr_positions);
        this.curr_positions_trades = null;
        if (curr_positions && curr_positions.trades) {
            this.instru = curr_positions.instru;
            this.expiryDate = curr_positions.expiry;
            this.curr_positions_trades = curr_positions.trades;
            this.curr_positions_trades.forEach(e => {
                e.addToOrders = false;
                e.selected = true;
                e.selectedActual = true;
                e.roll_qty = this.appService.getQtyUptoFreezeLimit(this.instru, e.qty);
                e.rollstrike = null;
                e.rollstrike_new = e.scrip;
                e.alertPrice = null;
                e.alertStatus = '';
            });
            if (this.instru === 'NIFTY') {
                this.stepValue = 50;
                this.strikeStepValue = 50;
                this.loadOIDistance = 500;
            }
            else if (this.instru === 'BANKNIFTY') {
                this.stepValue = 15;
                this.strikeStepValue = 100;
                this.loadOIDistance = 1000;
            }
            else if (this.instru === 'FINNIFTY') {
                this.stepValue = 40;
                this.strikeStepValue = 50;
                this.loadOIDistance = 500;
            }
            else if (this.instru === 'MIDCPNIFTY') {
                this.stepValue = 75;
                this.strikeStepValue = 25;
                this.loadOIDistance = 300;
            }
            else if (this.instru === 'SENSEX') {
                this.stepValue = 10;
                this.strikeStepValue = 100;
                this.loadOIDistance = 1000;
            }
            else if (this.instru === 'BANKEX') {
                this.stepValue = 15;
                this.strikeStepValue = 100;
                this.loadOIDistance = 1000;
            }
            else {
                this.stepValue = 1000;
                this.strikeStepValue = 0.25;
                this.loadOIDistance = 2;
            }
            this.sortPositions();
        }
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.curr_positions_trades = this.curr_positions_trades;
        this.constructUrlToFetch();
        this.getCEPEWeightage();
    }
    sortPositions() {
        this.curr_positions_trades.sort((a, b) => {
            // -1 means a should come before b
            // 1 means a should come after b
            /*
            exit and exit
            exit and no exit
            no exit and exit
            same strike no exit and no exit
            no exit and no exit
            */
            // console.log(a.exit, b.exit);
            if (a.exit !== 0 && b.exit !== 0) {
                //return b.scrip.localeCompare(a.scrip);
                return this.compareForSorting(a.scrip, b.scrip);
            }
            if (a.exit !== 0 && b.exit === 0) {
                return -1;
            }
            if (a.exit === 0 && b.exit !== 0) {
                return 1;
            }
            let a_symbol = a.scrip.slice(0, -2);
            let b_symbol = b.scrip.slice(0, -2);
            if (a_symbol === b_symbol && a.scrip.includes('CE') && b.scrip.includes('PE')) { // same strike CE PE, CE should occur first
                return -1;
            }
            if (a_symbol === b_symbol && a.scrip.includes('PE') && b.scrip.includes('CE')) { // same strike CE PE, CE should occur first
                return 1;
            }
            if (a_symbol === b_symbol && (a.scrip.includes('CE') && b.scrip.includes('CE') || a.scrip.includes('PE') && b.scrip.includes('PE'))) { // same strike and type with different expiries
                let d1 = new Date(a.expiry);
                let d2 = new Date(b.expiry);
                if (d1 < d2) {
                    return -1;
                }
                return 1;
            }
            //return b.scrip.localeCompare(a.scrip); // negative if a is before b
            return this.compareForSorting(a.scrip, b.scrip);
        });
    }
    compareForSorting(ascrip, bscrip) {
        // All CE strikes to be before PE
        if (ascrip.includes('CE') && bscrip.includes('PE')) { // CE should occur first
            return -1;
        }
        if (ascrip.includes('PE') && bscrip.includes('CE')) { // CE should occur first
            return 1;
        }
        // same type of options
        let a_symbol = ascrip.slice(0, -2);
        let b_symbol = bscrip.slice(0, -2);
        if (a_symbol > b_symbol) {
            return -1;
        }
        return 1;
    }
    constructUrlToFetch() {
        /* if (this.curr_positions_trades) {
          let url = 'https://opstra.definedge.com/api/free/strategybuilder/payoff/NIFTY$';
          this.curr_positions_trades.forEach(element => {
            // -375x10950PEx01OCT2020x19.2x0x0&
            let pos = '' + (element.qty <= 0 ? element.qty : '+' + element.qty) + 'x' + element.scrip + 'x' + element.expiry + 'x' + element.entry + 'x' + element.exit + 'x0&';
            url += pos;
          });
          url = url.replace(/&\s*$/, ''); // remove last &
          url += '$' + this.expiryDate;
          url += '$0$0$0';
          // $2020-10-01$0$0$0
          console.log('urlToFetch: ' + url);
          this.urlToFetch = url;
        } */
    }
    addPosition1(qty = null, scrip = null, entry = null, exit = null) {
        if (this.curr_positions_trades === null) {
            this.curr_positions_trades = [];
        }
        let d = new Date(this.expiryDate);
        let monthNames = ['JAN', 'FEB', 'MAR', 'APR',
            'MAY', 'JUN', 'JUL', 'AUG',
            'SEP', 'OCT', 'NOV', 'DEC'];
        let day = ('0' + d.getDate()).slice(-2);
        let monthIndex = d.getMonth();
        let monthName = monthNames[monthIndex];
        let year = d.getFullYear();
        let dateString = day + monthName + year;
        // console.log('***: ', day + monthName + year);
        this.curr_positions_trades.push({ qty: qty, scrip: scrip, expiry: dateString, entry: entry, exit: exit, addToOrders: false, selected: true, selectedActual: false, rollstrike: null, rollstrike_new: scrip, roll_qty: this.appService.getQtyUptoFreezeLimit(this.instru, qty), alertPrice: null, alertStatus: '' });
    }
    addPosition(qty = null, scrip = null, entry = null, expiry = null) {
        if (this.curr_positions_trades === null) {
            this.curr_positions_trades = [];
        }
        let d = new Date(this.expiryDate);
        if (expiry) {
            d = new Date(expiry);
        }
        let monthNames = ['JAN', 'FEB', 'MAR', 'APR',
            'MAY', 'JUN', 'JUL', 'AUG',
            'SEP', 'OCT', 'NOV', 'DEC'];
        let day = ('0' + d.getDate()).slice(-2);
        let monthIndex = d.getMonth();
        let monthName = monthNames[monthIndex];
        let year = d.getFullYear();
        let dateString = day + monthName + year;
        // console.log('***: ', day + monthName + year);
        this.curr_positions_trades.push({ qty: qty, scrip: scrip, expiry: dateString, entry: entry, exit: 0, addToOrders: false, selected: true, selectedActual: false, rollstrike: null, rollstrike_new: scrip, roll_qty: this.appService.getQtyUptoFreezeLimit(this.instru, qty), alertPrice: null, alertStatus: '' });
    }
    addPositionCustom(arr, qty = null, scrip = null, entry = null) {
        let d = new Date(this.expiryDate);
        let monthNames = ['JAN', 'FEB', 'MAR', 'APR',
            'MAY', 'JUN', 'JUL', 'AUG',
            'SEP', 'OCT', 'NOV', 'DEC'];
        let day = ('0' + d.getDate()).slice(-2);
        let monthIndex = d.getMonth();
        let monthName = monthNames[monthIndex];
        let year = d.getFullYear();
        let dateString = day + monthName + year;
        // console.log('***: ', day + monthName + year);
        arr.push({ qty: qty, scrip: scrip, expiry: dateString, entry: entry, exit: 0, addToOrders: false, selected: true, selectedActual: false, rollstrike: null, rollstrike_new: scrip, roll_qty: this.appService.getQtyUptoFreezeLimit(this.instru, qty), alertPrice: null, alertStatus: '' });
    }
    splitPosition(pos) {
        this.curr_positions_trades.push({ qty: 0, scrip: pos.scrip, expiry: pos.expiry, entry: pos.entry, exit: pos.exit, addToOrders: false, selected: true, selectedActual: false, rollstrike: null, rollstrike_new: pos.scrip, roll_qty: this.appService.getQtyUptoFreezeLimit(this.instru, 0), alertPrice: null, alertStatus: '' });
    }
    deletePosition(pos) {
        let found_index = -100;
        for (let index = 0; index < this.curr_positions_trades.length; index++) {
            let element = this.curr_positions_trades[index];
            if (element.qty === pos.qty && element.scrip === pos.scrip && element.expiry === pos.expiry && element.entry === pos.entry &&
                element.exit === pos.exit) {
                found_index = index;
                break;
            }
        }
        if (found_index !== -100) {
            this.curr_positions_trades.splice(found_index, 1);
        }
    }
    deleteSLLOrder(pos) {
        let found_index = -100;
        for (let index = 0; index < this.sl_trades.length; index++) {
            let element = this.sl_trades[index];
            if (element.qty === pos.qty && element.scrip === pos.scrip && element.expiry === pos.expiry && element.price === pos.price &&
                element.trigger_price === pos.trigger_price) {
                found_index = index;
                break;
            }
        }
        if (found_index !== -100) {
            this.sl_trades.splice(found_index, 1);
        }
    }
    calculatePayoff() {
        //this.constructUrlToFetch();
        this.getPayoff();
        this.getMargin();
        //this.getSelectedPnL();
    }
    reloadPayoffData(num) {
        if (this.currLoadNum) { // before setting new currLoadNum
            this.prev_positions[this.currLoadNum] = this.curr_positions_trades;
        }
        this.loadPayoffData(num);
        this.getPayoff();
        this.getMargin();
        //this.getSelectedPnL();
        this.crossCheckPositions();
        this.copyProperties(this.prev_positions[num]);
        // after setting new currLoadNum
        if (this.use_cf_strategies[this.currLoadNum]) {
            this.use_cf = this.use_cf_strategies[this.currLoadNum];
        }
        else {
            this.use_cf = false;
        }
        if (this.use_tag_strategies[this.currLoadNum]) {
            this.use_tag = this.use_tag_strategies[this.currLoadNum];
        }
        else {
            this.use_tag = false;
        }
        if (this.use_include_guid_strategies[this.currLoadNum]) {
            this.use_include_guid = this.use_include_guid_strategies[this.currLoadNum];
        }
        else {
            this.use_include_guid = false;
        }
        if (this.use_exclude_guid_strategies[this.currLoadNum]) {
            this.use_exclude_guid = this.use_exclude_guid_strategies[this.currLoadNum];
        }
        else {
            this.use_exclude_guid = false;
        }
    }
    getFunds() {
        this.appService.getFunds().subscribe((res) => {
            console.log('getFunds res: ', res);
            if (res.data && res.data.equity) {
                this.avail_margin = Math.round(res.data.equity.net).toLocaleString('en-IN');
                this.used_margin = Math.round(res.data.equity.utilised.debits).toLocaleString('en-IN');
            }
        }, error => {
            console.log('getFunds error', error);
        });
    }
    crossCheckPositions() {
        if (this.curr_positions_trades) {
            let strat_pos = [];
            for (let i = 0; i < this.curr_positions_trades.length; i++) {
                let element = this.curr_positions_trades[i];
                if (element.exit == 0) {
                    let a = { 'scrip': element.scrip, 'qty': element.qty /* , 'expiry': element.expiry */ };
                    strat_pos.push(a);
                }
            }
            let fetched_pos = [];
            for (let i = 0; i < _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.fetchedPositions.length; i++) {
                let element = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.fetchedPositions[i];
                if (element.instru === this.instru && element.netQty !== 0) {
                    let a = { 'scrip': element.scrip, 'qty': element.netQty /* , 'expiry': element.expiry */ };
                    fetched_pos.push(a);
                }
            }
            //console.log('strat_pos',JSON.stringify(strat_pos));
            //console.log('fetched_pos',JSON.stringify(fetched_pos));
            //console.log('***', this.deepEqual(strat_pos, fetched_pos))
            /* console.log('strat_pos',strat_pos);
            console.log('fetched_pos',fetched_pos);
            console.log('json1',JSON.stringify(strat_pos));
            console.log('json2',JSON.stringify(fetched_pos));
            console.log('equal',JSON.stringify(strat_pos) === JSON.stringify(fetched_pos)); */
            this.matchPositions = JSON.stringify(strat_pos) === JSON.stringify(fetched_pos);
        }
    }
    deepEqual(x, y) {
        let ok = Object.keys, tx = typeof x, ty = typeof y;
        return x && y && tx === 'object' && tx === ty ? (ok(x).length === ok(y).length &&
            ok(x).every(key => this.deepEqual(x[key], y[key]))) : (x === y);
    }
    mergePositions() {
        let exitedMap = new Map(); // will contain all exited positions - values will be array since can be multiple exited positions of same strike
        let mergeMap = new Map(); // will contain all open positions - values will be single elements
        for (let i = 0; i < this.curr_positions_trades.length; i++) {
            let element = this.curr_positions_trades[i];
            let key = element.scrip + ' ' + element.expiry;
            let exitedMap_value = exitedMap.get(key);
            let mergeMap_value = mergeMap.get(key);
            if (element.exit !== 0) { // if element is exited
                if (!exitedMap_value) {
                    exitedMap_value = [];
                }
                exitedMap_value.push(element);
                exitedMap.set(key, exitedMap_value);
            }
            else { // element not exited
                if (!mergeMap_value) { // element not in mergeMap
                    mergeMap.set(key, element);
                }
                else { // element exists in mergeMap
                    if (mergeMap_value.qty == -element.qty) { // if complete exit
                        mergeMap_value.exit = element.entry;
                        if (!exitedMap_value) {
                            exitedMap_value = [];
                        }
                        exitedMap_value.push(mergeMap_value);
                        exitedMap.set(key, exitedMap_value);
                        mergeMap.delete(key);
                    }
                    else if ((mergeMap_value.qty > 0 && element.qty > 0) || (mergeMap_value.qty < 0 && element.qty < 0)) { // if adding to existing position (i.e. both are buy or both are sell)
                        mergeMap_value.entry = ((mergeMap_value.entry * mergeMap_value.qty) + (element.entry * element.qty)) / (mergeMap_value.qty + element.qty);
                        mergeMap_value.entry = (Math.round((mergeMap_value.entry + 0.00001) * 10000) / 10000); // round to four decimals
                        mergeMap_value.qty += element.qty;
                        mergeMap.set(key, mergeMap_value);
                    }
                    else { // if opposite positions of different quantities
                        if (Math.abs(mergeMap_value.qty) > Math.abs(element.qty)) { // if existing qty in mergemap is greater than element qty
                            /*
                            merge 600     40  0
                            elem  -150    35  0
              
                            exit  150     40  35
                            merge 450     40  0
              
                            new mergemap qty = old mergemap qty + element qty
              
                            exitedmap qty = -element qty
                            exitedmap entry = mergemap entry
                            exitedmap exit = element entry
                            */
                            mergeMap_value.qty = mergeMap_value.qty + element.qty;
                            mergeMap.set(key, mergeMap_value);
                            element.qty = -element.qty;
                            element.exit = element.entry;
                            element.entry = mergeMap_value.entry;
                            if (!exitedMap_value) {
                                exitedMap_value = [];
                            }
                            exitedMap_value.push(element);
                            exitedMap.set(key, exitedMap_value);
                        }
                        else { // if existing qty in mergemap is lesser than element qty
                            /*
                            merge 50     40   0
                            elem  -150   35   0
              
                            exit  50    40  35
                            merge -100   35  0
              
                            new mergemap qty = old mergemap qty + element qty
                            new mergeMap entry = element.entry
              
                            exitedmap qty = mergemap qty
                            exitedmap entry = mergemap entry
                            exitedmap exit = element entry
                            */
                            let exitedQty = mergeMap_value.qty;
                            let exitedEntry = mergeMap_value.entry;
                            mergeMap_value.qty = mergeMap_value.qty + element.qty;
                            mergeMap_value.entry = element.entry;
                            mergeMap.set(key, mergeMap_value);
                            element.qty = exitedQty;
                            element.exit = element.entry;
                            element.entry = exitedEntry;
                            if (!exitedMap_value) {
                                exitedMap_value = [];
                            }
                            exitedMap_value.push(element);
                            exitedMap.set(key, exitedMap_value);
                        }
                    }
                }
            }
        }
        console.log('exitedMap:', exitedMap);
        console.log('mergeMap:', mergeMap);
        this.curr_positions_trades = [];
        for (let [key, v] of exitedMap) {
            v.forEach(value => {
                this.curr_positions_trades.push({ qty: value.qty, scrip: value.scrip, expiry: value.expiry, entry: value.entry, exit: value.exit, addToOrders: value.addToOrders, selected: value.selected, selectedActual: value.selectedActual, rollstrike: value.rollstrike, rollstrike_new: value.rollstrike_new, roll_qty: value.roll_qty, alertPrice: value.alertPrice, alertStatus: '' });
            });
        }
        for (let [key, value] of mergeMap) {
            this.curr_positions_trades.push({ qty: value.qty, scrip: value.scrip, expiry: value.expiry, entry: value.entry, exit: value.exit, addToOrders: value.addToOrders, selected: value.selected, selectedActual: value.selectedActual, rollstrike: value.rollstrike, rollstrike_new: value.rollstrike_new, roll_qty: value.roll_qty, alertPrice: value.alertPrice, alertStatus: '' });
        }
    }
    savePositions(num, showConfirm = true) {
        // To combine positions of same scrip
        // other way is iterating through the array and use Map with scrip as key and rest of params as value
        /* const combinedItems = (arr = []) => {
          const res = arr.reduce((acc, obj) => {
            
            //console.log(obj);
            
            if (obj.exit !== 0) {
              acc.push(obj);
              return acc;
            }
    
            if (obj.notconsider === true) {
              return acc;
            }
            
            //this.curr_positions_trades.push({ qty: qty, scrip: scrip, expiry: dateString, entry: entry, exit: 0 });
    
            let found = false;
    
            for (let i = 0; i < acc.length; i++) {
    
              if (acc[i].notconsider === true) {
                continue;
              }
              
              if (acc[i].exit === 0 && acc[i].scrip === obj.scrip && acc[i].expiry === obj.expiry) {
                found = true;
    
                if ((acc[i].qty > 0 && obj.qty > 0) || (acc[i].qty < 0 && obj.qty < 0)) {
                  acc[i].entry = ((acc[i].entry * acc[i].qty) + (obj.entry * obj.qty)) / (acc[i].qty + obj.qty);
                  acc[i].entry = (Math.round((acc[i].entry + 0.00001) * 10000) / 10000); // round to four decimals
                  acc[i].qty += obj.qty;
                } else {
                  let qtydiff = acc[i].qty + obj.qty;
                  
                  if (qtydiff !== 0) { // if quantity mismatch, add another entry
    
                    if (Math.abs(acc[i].qty) > Math.abs(obj.qty)) {
                      
                      let copy = Object.assign({}, acc[i]);
                      copy.qty = qtydiff;
                      copy.entry = acc[i].entry;
                      copy.notconsider = true;
                      acc.push(copy);
    
                      acc[i].qty = -obj.qty;
                      acc[i].exit = obj.entry;
    
                      // console.log('qtydiff', qtydiff, copy);
                    } else {
                      
                      let copy = Object.assign({}, acc[i]);
                      copy.qty = qtydiff;
                      copy.entry = obj.entry;
                      copy.notconsider = true;
                      acc.push(copy);
    
                      acc[i].exit = obj.entry;
                    }
    
                  } else {
                    acc[i].exit = obj.entry;
                  }
                }
              }
            }
            if (found === false) {
              acc.push(obj);
            }
            return acc;
          }, []);
          return res;
        } */
        //this.curr_positions_trades = combinedItems(this.curr_positions_trades);
        //console.log(ne);
        this.mergePositions();
        console.log('curr_positions_trades', this.curr_positions_trades);
        //let c_positions = Object.assign({}, this.curr_positions_trades);
        //let c_positions = structuredClone(this.curr_positions_trades);
        let c_positions = this.curr_positions_trades.map(a => Object.assign({}, a));
        console.log('c_positions', c_positions);
        if (!showConfirm || confirm('Sure save ' + num + '?')) {
            let curr_positions = { instru: '', expiry: '', trades: {} };
            curr_positions.instru = this.instru;
            curr_positions.expiry = this.expiryDate;
            c_positions.forEach(element => {
                delete element.addToOrders;
                delete element.selected;
                delete element.selectedActual;
                delete element.roll_qty;
                delete element.rollstrike;
                delete element.rollstrike_new;
                delete element.pnl;
                delete element.alertPrice;
                delete element.alertStatus;
            });
            curr_positions.trades = c_positions;
            console.log('Saving positions: ', curr_positions);
            console.log('Saving positions json: ', JSON.stringify(curr_positions));
            localStorage.setItem('curr_positions' + num, JSON.stringify(curr_positions));
            this.reloadPayoffData(num);
            // this.doStrategiesSubscriptions();
            //for (let num = 1; num <= 6; num++) {
            //  let curr_positions = JSON.parse(localStorage.getItem('curr_positions' + num));
            if (curr_positions && curr_positions.trades) {
                if (num === 1) {
                    this.s1Trades = curr_positions;
                }
                if (num === 2) {
                    this.s2Trades = curr_positions;
                }
                if (num === 3) {
                    this.s3Trades = curr_positions;
                }
                if (num === 4) {
                    this.s4Trades = curr_positions;
                }
                if (num === 5) {
                    this.s5Trades = curr_positions;
                }
                if (num === 6) {
                    this.s6Trades = curr_positions;
                }
            }
            //}
        }
    }
    getCEPEWeightage() {
        /* this.cePremium = 0;
        this.pePremium = 0;
        this.ceWeight = 0;
        this.peWeight = 0;
        this.ceLots = 0;
        this.peLots = 0;
        if (this.curr_positions_trades) {
          this.curr_positions_trades.forEach(element => {
    
            if (element.exit === null || element.exit === 0) {
              if (element.scrip.includes('CE') && element.qty < 0) {
                let mkt_price = this.getLTP_strike({ scrip : element.scrip }, this.instru, element.expiry);
                let currPremium = element.qty * mkt_price;
                this.cePremium += currPremium;
                this.ceLots += element.qty / 1000;
              }
              if (element.scrip.includes('PE') && element.qty < 0) {
                let mkt_price = this.getLTP_strike({ scrip : element.scrip }, this.instru, element.expiry);
                let currPremium = element.qty * mkt_price;
                this.pePremium += currPremium;
                this.peLots += element.qty / 1000;
              }
            }
    
            let totalCEPE = this.cePremium + this.pePremium;
            this.ceWeight = (this.cePremium / totalCEPE) * 100;
            this.peWeight = (this.pePremium / totalCEPE) * 100;
    
            this.cePremium = Math.round(this.cePremium);
            this.pePremium = Math.round(this.pePremium);
            this.ceWeight = Math.round(this.ceWeight);
            this.peWeight = Math.round(this.peWeight);
          });
        } */
    }
    findDS_BuyExit() {
        let buy_pos;
        let sell_pos;
        if (this.curr_positions_trades) {
            this.curr_positions_trades.forEach(element => {
                if (element.exit === 0) {
                    if (element.addToOrders) {
                        if (element.qty < 0) {
                            sell_pos = element;
                        }
                        if (element.qty > 0) {
                            buy_pos = element;
                        }
                    }
                }
            });
            if (buy_pos && sell_pos && Math.abs(buy_pos.qty) === Math.abs(sell_pos.qty)) {
                let points = (sell_pos.entry - 0.5 * buy_pos.entry) / 0.5;
                this.ds_buy_exit = buy_pos.entry - points;
            }
        }
        this.ds_buy_exit = (Math.round((this.ds_buy_exit + 0.00001) * 100) / 100);
        console.log('findDS_BuyExit :', this.ds_buy_exit);
        return this.ds_buy_exit;
    }
    unselectStraddlePositions() {
        let strikes = [];
        let straddle_strike;
        let qty;
        if (this.curr_positions_trades) {
            this.curr_positions_trades.forEach(element => {
                if (element.exit === 0) {
                    let pos_strike = element.scrip.slice(0, -2); // remove CE PE at end
                    if (strikes.includes(pos_strike)) {
                        straddle_strike = pos_strike;
                        qty = Math.abs(element.qty);
                    }
                    else {
                        strikes.push(pos_strike);
                    }
                }
            });
            console.log('straddle strike:', straddle_strike);
            if (straddle_strike) {
                this.curr_positions_trades.forEach(element => {
                    if (element.exit === 0) {
                        let pos_strike = element.scrip.slice(0, -2); // remove CE PE at end
                        if (pos_strike === straddle_strike) {
                            element.selected = false;
                        }
                    }
                });
            }
            console.log('selected:', this.curr_positions_trades);
        }
        return [Number(straddle_strike), Number(qty)];
    }
    findStraddleHedge(straddle_strike, qty, type) {
        let strike;
        if (this.curr_positions_trades) {
            this.curr_positions_trades.forEach(element => {
                if (element.exit === 0) {
                    if (element.addToOrders) {
                        if (element.scrip.includes(type) && element.qty === qty) {
                            strike = element.scrip.slice(0, -2); // remove CE PE at end
                        }
                    }
                }
            });
        }
        console.log('findStraddleHedge strike:', strike);
        return Number(strike);
    }
    whatIsStraddleHedge(straddle_strike, qty, type) {
        let strike;
        if (this.curr_positions_trades) {
            this.curr_positions_trades.forEach(element => {
                if (element.exit === 0) {
                    if (element.selected) {
                        if (element.scrip.includes(type) && element.qty === qty) {
                            strike = element.scrip.slice(0, -2); // remove CE PE at end
                        }
                    }
                }
            });
        }
        console.log('hedge strike:', strike);
        return Number(strike);
    }
    payoffCheckboxChange(event) {
        if (event.currentTarget.checked) {
            if (this.overlay_strike) {
                let new_strike1 = this.overlay_strike;
                let straddle_strike = this.unselectStraddlePositions();
                let new_premium1_ce = this.mapService.getScripLTP(this.instru, this.expiryDate, new_strike1, 'CE');
                this.addPosition(-straddle_strike[1], new_strike1 + 'CE', new_premium1_ce);
                let new_premium1_pe = this.mapService.getScripLTP(this.instru, this.expiryDate, new_strike1, 'PE');
                this.addPosition(-straddle_strike[1], new_strike1 + 'PE', new_premium1_pe);
                this.calculatePayoff();
            }
        }
        else {
            this.reloadPayoffData(this.currLoadNum);
        }
    }
    getPayoff() {
        let myPayoff = { chart: [] };
        let ltp = 0;
        if (this.instru === 'USDINR') {
            if (this.use_hypo_future) {
                let ce_premium = this.mapService.getScripLTP(this.instru, this.expiryDate, this.hypo_future_strike, 'CE');
                let pe_premium = this.mapService.getScripLTP(this.instru, this.expiryDate, this.hypo_future_strike, 'PE');
                ltp = ce_premium - pe_premium + this.hypo_future_strike; // Find future price from Put Call Parity
                ltp = (Math.round((ltp + 0.00001) * 100) / 100);
                // console.log('hypo fut:' + ltp);
            }
            else {
                ltp = this.mapService.getScripLTP(null, null, this.instru, null);
                ltp = (Math.round((ltp + 0.00001) * 100) / 100); // TODO: ltp rounding for usdinr to two decimal
            }
        }
        else {
            ltp = this.mapService.getScripLTP(null, null, this.instru, null);
            ltp = Math.round(ltp);
        }
        console.log('ltp is: ', ltp);
        let range = 1000;
        let increment = 1;
        let multiple = 50;
        if (this.instru === 'BANKNIFTY') {
            range = 3000;
            multiple = 100;
        }
        if (this.instru === 'USDINR') {
            range = 2;
            increment = 0.01;
            multiple = 0.25;
        }
        if (this.payoff_range && this.instru !== 'USDINR') {
            range = this.payoff_range;
        }
        let lower_range = ltp - range;
        let upper_range = ltp + range;
        let pnlForBreakeven = [];
        let pnlExitedPos = 0;
        let actualPos = [];
        let shiftedPos = [];
        let overlayPos1 = [];
        let overlayPos2 = [];
        let overlayPos3 = [];
        if (this.curr_positions_trades) {
            if (this.ce_side_overlay || this.pe_side_overlay) {
                let straddle_strike = this.unselectStraddlePositions();
                this.curr_positions_trades.forEach(element => {
                    overlayPos1.push(element);
                    overlayPos2.push(element);
                    overlayPos3.push(element);
                });
                let type = 'CE';
                if (this.pe_side_overlay) {
                    type = 'PE';
                    multiple = -100;
                }
                let hedge_strike = this.whatIsStraddleHedge(straddle_strike[0], straddle_strike[1], type);
                let new_strike1 = hedge_strike - multiple;
                let new_premium1_ce = this.mapService.getScripLTP(this.instru, this.expiryDate, new_strike1, 'CE');
                this.addPositionCustom(overlayPos1, -straddle_strike[1], new_strike1 + 'CE', new_premium1_ce);
                let new_premium1_pe = this.mapService.getScripLTP(this.instru, this.expiryDate, new_strike1, 'PE');
                this.addPositionCustom(overlayPos1, -straddle_strike[1], new_strike1 + 'PE', new_premium1_pe);
                console.log('overlayPos1:', overlayPos1);
                let new_strike2 = hedge_strike - 2 * multiple;
                let new_premium2_ce = this.mapService.getScripLTP(this.instru, this.expiryDate, new_strike2, 'CE');
                this.addPositionCustom(overlayPos2, -straddle_strike[1], new_strike2 + 'CE', new_premium2_ce);
                let new_premium2_pe = this.mapService.getScripLTP(this.instru, this.expiryDate, new_strike2, 'PE');
                this.addPositionCustom(overlayPos2, -straddle_strike[1], new_strike2 + 'PE', new_premium2_pe);
                console.log('overlayPos2:', overlayPos2);
                let new_strike3 = hedge_strike - 3 * multiple;
                let new_premium3_ce = this.mapService.getScripLTP(this.instru, this.expiryDate, new_strike3, 'CE');
                this.addPositionCustom(overlayPos3, -straddle_strike[1], new_strike3 + 'CE', new_premium3_ce);
                let new_premium3_pe = this.mapService.getScripLTP(this.instru, this.expiryDate, new_strike1, 'PE');
                this.addPositionCustom(overlayPos3, -straddle_strike[1], new_strike3 + 'PE', new_premium3_pe);
                console.log('overlayPos3:', overlayPos3);
            }
            if (this.straddle_shiftCE_overlay || this.straddle_shiftPE_overlay) {
                let straddle_strike = this.unselectStraddlePositions();
                this.curr_positions_trades.forEach(element => {
                    shiftedPos.push(element);
                });
                let type = 'CE';
                let hedgeType = 'PE';
                let multiple = 100;
                if (this.instru === 'BANKNIFTY') {
                    multiple = 200;
                }
                if (this.straddle_shiftPE_overlay) {
                    type = 'PE';
                    hedgeType = 'CE';
                    multiple = -multiple;
                }
                let straddle_qty = straddle_strike[1];
                if (this.straddle_shiftQty_overlay) {
                    straddle_qty = this.straddle_shiftQty_overlay;
                }
                // add new straddle
                let new_sd_strike1 = straddle_strike[0] + (multiple / 2);
                let new_sd_premium1_ce = this.mapService.getScripLTP(this.instru, this.expiryDate, new_sd_strike1, 'CE');
                this.addPositionCustom(shiftedPos, -straddle_qty, new_sd_strike1 + 'CE', new_sd_premium1_ce);
                let new_sd_premium1_pe = this.mapService.getScripLTP(this.instru, this.expiryDate, new_sd_strike1, 'PE');
                this.addPositionCustom(shiftedPos, -straddle_qty, new_sd_strike1 + 'PE', new_sd_premium1_pe);
                // add for existing existing straddle
                let sd_premium1_ce = this.mapService.getScripLTP(this.instru, this.expiryDate, straddle_strike[0], 'CE');
                this.addPositionCustom(shiftedPos, straddle_qty, straddle_strike[0] + 'CE', sd_premium1_ce);
                let sd_premium1_pe = this.mapService.getScripLTP(this.instru, this.expiryDate, straddle_strike[0], 'PE');
                this.addPositionCustom(shiftedPos, straddle_qty, straddle_strike[0] + 'PE', sd_premium1_pe);
                // shift hedge
                let hedge_strike = this.findStraddleHedge(straddle_strike[0], straddle_qty, hedgeType);
                if (hedge_strike) {
                    let new_strike1 = hedge_strike + multiple;
                    let hedge_premium = this.mapService.getScripLTP(this.instru, this.expiryDate, hedge_strike, hedgeType);
                    this.addPositionCustom(shiftedPos, -straddle_qty, hedge_strike + hedgeType, hedge_premium);
                    let new_premium = this.mapService.getScripLTP(this.instru, this.expiryDate, new_strike1, hedgeType);
                    this.addPositionCustom(shiftedPos, straddle_qty, new_strike1 + hedgeType, new_premium);
                }
                console.log('shiftedPos:', shiftedPos);
            }
            this.curr_positions_trades.forEach(element => {
                if (element.exit && element.exit > 0) {
                    let pospnl = this.getPnL(element);
                    pnlExitedPos += pospnl;
                }
                if (this.payoff_overlay && element.selectedActual === true) {
                    actualPos.push(element);
                }
            });
            for (let point = lower_range; point <= upper_range; point += increment) {
                let pnl = 0;
                let t0 = 0;
                let t1 = 0;
                let t2 = 0;
                let overlayPnL = 0;
                let overlayT0 = 0;
                let overlayPnL2 = 0;
                let overlayPnL3 = 0;
                let arr = [];
                point = (Math.round((point + 0.00001) * 100) / 100); // for USDINR two decimal places
                if (this.payoff_overlay) {
                    arr = this.calculatePnLAtPoint(this.curr_positions_trades, point, ltp, true);
                    overlayPnL += arr[0];
                    overlayPnL += pnlExitedPos;
                    overlayPnL = (Math.round((overlayPnL + 0.00001) * 100) / 100);
                    overlayT0 += arr[1];
                    overlayT0 += pnlExitedPos;
                    overlayT0 = (Math.round((overlayT0 + 0.00001) * 100) / 100);
                    arr = this.calculatePnLAtPoint(actualPos, point, ltp, false);
                }
                else if (this.straddle_shiftCE_overlay || this.straddle_shiftPE_overlay) {
                    arr = this.calculatePnLAtPoint(shiftedPos, point, ltp, false);
                    overlayPnL += arr[0];
                    overlayPnL += pnlExitedPos;
                    overlayPnL = (Math.round((overlayPnL + 0.00001) * 100) / 100);
                    overlayT0 += arr[1];
                    overlayT0 += pnlExitedPos;
                    overlayT0 = (Math.round((overlayT0 + 0.00001) * 100) / 100);
                    arr = this.calculatePnLAtPoint(this.curr_positions_trades, point, ltp, false);
                }
                else if (this.ce_side_overlay || this.pe_side_overlay) {
                    arr = this.calculatePnLAtPoint(overlayPos1, point, ltp, true);
                    overlayPnL += arr[0];
                    overlayPnL += pnlExitedPos;
                    overlayPnL = (Math.round((overlayPnL + 0.00001) * 100) / 100);
                    arr = this.calculatePnLAtPoint(overlayPos2, point, ltp, true);
                    overlayPnL2 += arr[0];
                    overlayPnL2 += pnlExitedPos;
                    overlayPnL2 = (Math.round((overlayPnL2 + 0.00001) * 100) / 100);
                    arr = this.calculatePnLAtPoint(overlayPos3, point, ltp, true);
                    overlayPnL3 += arr[0];
                    overlayPnL3 += pnlExitedPos;
                    overlayPnL3 = (Math.round((overlayPnL3 + 0.00001) * 100) / 100);
                    arr = this.calculatePnLAtPoint(this.curr_positions_trades, point, ltp, false);
                }
                else {
                    arr = this.calculatePnLAtPoint(this.curr_positions_trades, point, ltp, false);
                }
                pnl += arr[0];
                pnl += pnlExitedPos;
                pnl = (Math.round((pnl + 0.00001) * 100) / 100);
                t0 += arr[1];
                t0 += pnlExitedPos;
                t0 = (Math.round((t0 + 0.00001) * 100) / 100);
                t1 += arr[2];
                t1 += pnlExitedPos;
                t1 = (Math.round((t1 + 0.00001) * 100) / 100);
                t2 += arr[3];
                t2 += pnlExitedPos;
                t2 = (Math.round((t2 + 0.00001) * 100) / 100);
                pnlForBreakeven.push(pnl);
                myPayoff.chart.push({ Final: pnl, StockPrice: point, Today: t0, T1: t1, T2: t2, Overlay: overlayPnL, OverlayT0: overlayT0, Overlay2: overlayPnL2, Overlay3: overlayPnL3 });
            }
            console.log('myPayoff:', myPayoff);
            this.payOffData = myPayoff;
            this.updateChartData(myPayoff);
            this.breakevens = '';
            for (let i = 1; i < myPayoff.chart.length; i++) {
                let element = myPayoff.chart[i];
                let prev_element = myPayoff.chart[i - 1];
                if ((element.Final > 0 && prev_element.Final <= 0) || (element.Final < 0 && prev_element.Final >= 0)) {
                    this.breakevens = this.breakevens + prev_element.StockPrice + ' ';
                }
            }
        }
        /* this.appService.get(this.urlToFetch).subscribe(res => {
          console.log('getPayoff: ', res);
    
          // this.payOffData = res;
    
          if ((res as any).breakevens !== null) {
            this.breakevens = (res as any).breakevens;
          }
    
          // this.updateChartData(res);
    
          // this.appService.payOffEvent$.next(res);
        },
        error => {
          console.log('getPayoff error', error);
        }); */
    }
    calculatePnLAtPoint(positions, point, ltp, overlay) {
        let pnl = 0;
        let t0 = 0;
        let t1 = 0;
        let t2 = 0;
        positions.forEach(element => {
            /*  {
              qty: 75,
              scrip: '11150CE',
              expiry: '01OCT2020',
              entry: 50,
              exit: 0,
            }, */
            if (element.exit === null || element.exit === 0) {
                let type = null;
                let typet0 = null;
                if (element.scrip.includes('CE') && element.qty < 0) {
                    type = _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.CEsell;
                    typet0 = _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.CE;
                }
                if (element.scrip.includes('PE') && element.qty < 0) {
                    type = _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.PEsell;
                    typet0 = _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.PE;
                }
                if (element.scrip.includes('CE') && element.qty > 0) {
                    type = _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.CEbuy;
                    typet0 = _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.CE;
                }
                if (element.scrip.includes('PE') && element.qty > 0) {
                    type = _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.PEbuy;
                    typet0 = _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.PE;
                }
                let pos_strike = element.scrip.slice(0, -2); // remove CE PE at end
                let expiry = element.expiry; // this.expiryDate;
                let d1 = new Date(expiry); // position expiry
                let d2 = new Date(this.expiryDate);
                if (d1.getFullYear() === d2.getFullYear() && d1.getMonth() === d2.getMonth() && d1.getDate() === d2.getDate()) {
                    if (overlay && !element.selected) {
                        pnl += this.getPnL(element);
                    }
                    else {
                        pnl += this.calculatePnLAtPointForStrike(point, pos_strike, element.qty, element.entry, type);
                    }
                }
                else { // for Calendar position - position expiry not same as strategy expiry date
                    let d3 = new Date(); // today
                    //let days_diff = this.appService.calcWorkingDays(d3, d2);
                    //let add_days = days_diff;
                    let holidays = this.appService.calcHolidays(d3, d2);
                    let add_days = Math.round((d2.getTime() - d3.getTime()) / (1000 * 3600 * 24)) - holidays;
                    // console.log('add_days: ', add_days);
                    let mkt_price = this.mapService.getScripLTP(this.instru, expiry, this.mapService.parseScrip(element.scrip).scrip, this.mapService.parseScrip(element.scrip).type);
                    let iv = this.calculateIV(ltp, pos_strike, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.INTEREST_RATE, expiry, typet0, mkt_price);
                    // console.log('*** ', pos_strike, typet0, expiry, iv);
                    let t0_ = this.calculateT0AtPointForStrike(point, pos_strike, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.INTEREST_RATE, expiry, iv, typet0, add_days);
                    t0_ = t0_ - element.entry;
                    t0_ = t0_ * element.qty;
                    pnl += t0_;
                }
                // T+0 calculation:
                if (overlay && !element.selected) {
                    t0 += this.getPnL(element);
                }
                else {
                    let mkt_price = this.mapService.getScripLTP(this.instru, expiry, this.mapService.parseScrip(element.scrip).scrip, this.mapService.parseScrip(element.scrip).type);
                    let iv = this.calculateIV(ltp, pos_strike, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.INTEREST_RATE, expiry, typet0, mkt_price);
                    let t0_ = this.calculateT0AtPointForStrike(point, pos_strike, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.INTEREST_RATE, expiry, iv, typet0);
                    // console.log('*** ', pos_strike, typet0, expiry, mkt_price, iv, t0_);
                    t0_ = t0_ - element.entry;
                    t0_ = t0_ * element.qty;
                    t0 += t0_;
                    if (this.multi_t0) {
                        let t1_ = this.calculateT0AtPointForStrike(point, pos_strike, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.INTEREST_RATE, expiry, iv, typet0, 1);
                        t1_ = t1_ - element.entry;
                        t1_ = t1_ * element.qty;
                        t1 += t1_;
                        let t2_ = this.calculateT0AtPointForStrike(point, pos_strike, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.INTEREST_RATE, expiry, iv, typet0, 2);
                        t2_ = t2_ - element.entry;
                        t2_ = t2_ * element.qty;
                        t2 += t2_;
                    }
                }
            }
        });
        //console.log('t0', t0);
        return [pnl, t0, t1, t2];
    }
    // IV calculation logic is taken from OptionTradingWorkbook. I've added it to this repository under GreeksCalculationExcel folder
    calculateIV(spot, strike, int_rate, expiry_date, type, mkt_price, add_days) {
        let high = 80;
        let low = 0;
        let iv = 0;
        /* let date_expiry = new Date(expiry_date);
    
        let date_now = new Date();
        if (this.simulate_strategy) {
          date_now = this.simulateCurrDateObj;
        } */
        /* let days_diff = this.appService.calcWorkingDays(date_now, date_expiry);
        let seconds = days_diff * 86400;
        
        // let seconds = Math.floor((date_expiry.getTime() - date_now.getTime()) / 1000);
        let	minutes = Math.floor(seconds / 60);
        let	hours = Math.floor(minutes / 60);
        let	delta_t = (Math.floor(hours / 24)) / 365.0; */
        /* if (hours < 24) {
          return 0;
        } */
        while ((high - low) > 0.0001) {
            if (this.calculateT0AtPointForStrike(spot, strike, int_rate, expiry_date, (high + low) / 2, type, add_days) > mkt_price) {
                high = (high + low) / 2;
            }
            else {
                low = (high + low) / 2;
            }
        }
        iv = (high + low) / 2;
        return iv;
    }
    // this logis is conbination of CallOption and PutOption code in zerodha bl.js
    calculateT0AtPointForStrike(spot, strike, int_rate, expiry_date, volatility, type, add_days) {
        let t0 = 0;
        let date_expiry = new Date(expiry_date);
        if (this.instru === 'USDINR') {
            date_expiry.setHours(12, 30, 0);
        }
        else {
            date_expiry.setHours(15, 30, 0);
        }
        let date_now = new Date();
        if (this.simulate_strategy) {
            date_now = this.simulateCurrDateObj;
        }
        let add_days_seconds = 0;
        if (add_days) {
            // add_days = 0;
            let newDate = new Date(date_now);
            newDate.setDate(newDate.getDate() + add_days);
            newDate.setHours(9, 15, 0);
            add_days_seconds = Math.floor((newDate.getTime() - date_now.getTime()) / 1000);
        }
        //let days_diff = this.appService.calcWorkingDays(date_now, date_expiry);
        //days_diff = days_diff - add_days;
        //let seconds = days_diff * 86400;
        let holidays_seconds = this.appService.calcHolidays(date_now, date_expiry) * 86400;
        let seconds = Math.floor((date_expiry.getTime() - date_now.getTime()) / 1000) - holidays_seconds - add_days_seconds;
        //console.log('aniket', add_days, seconds);
        /* aniket undefined 171348
        aniket 1 108899
        aniket 2 22499 */
        if (seconds > 0) {
            /* let	minutes = Math.floor(seconds / 60);
            let	hours = Math.floor(minutes / 60);
            let	delta_t = (Math.floor(hours / 24)) / 365.0; // time */
            let minutes = seconds / 60;
            let hours = minutes / 60;
            let delta_t = hours / 24 / 365.0; // time
            /* if (hours < 12) {
              return 0;
            }
            else { */
            let volt = volatility / 100;
            int_rate = int_rate / 100;
            let d1 = (Math.log(spot / strike) + (int_rate + (Math.pow(volt, 2) / 2)) * delta_t) / (volt * Math.sqrt(delta_t));
            // let d2 = (Math.log(spot / strike) + (int_rate - (Math.pow(volt, 2) / 2)) * delta_t) / (volt * Math.sqrt(delta_t));
            let d2 = d1 - (volt * Math.sqrt(delta_t));
            let fv_strike = (strike) * Math.exp(-1 * int_rate * delta_t);
            if (type === _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.CE) {
                t0 = spot * this.getCDF(d1) - fv_strike * this.getCDF(d2);
            }
            if (type === _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.PE) {
                t0 = fv_strike * this.getCDF(-1 * d2) - spot * this.getCDF(-1 * d1);
            }
            /* } */
        }
        return t0;
    }
    getCDF(x) {
        let standardDeviation = Math.sqrt(this.variance);
        return 0.5 * this.erfc(-(x - this.mean) / (standardDeviation * Math.sqrt(2)));
    }
    // Complementary error function
    // From Numerical Recipes in C 2e p221
    erfc(x) {
        let z = Math.abs(x);
        let t = 1 / (1 + z / 2);
        let r = t * Math.exp(-z * z - 1.26551223 + t * (1.00002368 +
            t * (0.37409196 + t * (0.09678418 + t * (-0.18628806 +
                t * (0.27886807 + t * (-1.13520398 + t * (1.48851587 +
                    t * (-0.82215223 + t * 0.17087277)))))))));
        return x >= 0 ? r : 2 - r;
    }
    calculatePnLAtPointForStrike(point, pos_strike, qty, entry, type) {
        let pnl = 0;
        if (type === _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.CEsell) {
            if (point > pos_strike) {
                pnl = (pos_strike - point + entry) * Math.abs(qty);
            }
            else {
                pnl = entry * Math.abs(qty);
            }
        }
        if (type === _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.PEsell) {
            if (point < pos_strike) {
                pnl = (-pos_strike + point + entry) * Math.abs(qty);
            }
            else {
                pnl = entry * Math.abs(qty);
            }
        }
        if (type === _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.CEbuy) {
            if (point > pos_strike) {
                pnl = (-pos_strike + point - entry) * Math.abs(qty);
            }
            else {
                pnl = entry * -Math.abs(qty);
            }
        }
        if (type === _common_models__WEBPACK_IMPORTED_MODULE_3__.PositionTypeForPayOff.PEbuy) {
            if (point < pos_strike) {
                pnl = (pos_strike - point - entry) * Math.abs(qty);
            }
            else {
                pnl = entry * -Math.abs(qty);
            }
        }
        // pnl = pnl * lotsize;
        if (pnl !== 0) {
            pnl = (Math.round((pnl + 0.00001) * 100) / 100);
        }
        return pnl;
    }
    getMargin() {
        /* let url = this.urlToFetch.replace('payoff', 'margin');
        this.appService.get(url).subscribe(res => {
          console.log('getMargin: ', res);
          this.margin = (res as any).margin.toLocaleString();
        },
        error => {
          console.log('getMargin error', error);
        }); */
        if (this.curr_positions_trades) {
            let d = new Date(this.expiryDate);
            // let month = d.toLocaleString('default', { month: 'short' }).toUpperCase();
            let month = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.monthsMapping[d.getMonth() + 1];
            console.log('getMargin: ', this.curr_positions_trades);
            this.appService.getZerodhaMargin(this.instru, /* month, */ this.curr_positions_trades, this.instru, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.broker_auth).subscribe((res) => {
                console.log('getMargin res: ', res);
                if (res.data && res.data.final) {
                    this.margin = Math.round(res.data.final.total).toLocaleString('en-IN');
                }
            }, error => {
                console.log('getMargin error', error);
            });
        }
    }
    getROI() {
        // console.log('roi: ', this.getStrategyPnL(), parseFloat(this.margin.replace(/,/g, '')));
        if (this.margin) {
            let roi = (this.strategyPnl / parseFloat(this.margin.replace(/,/g, ''))) * 100;
            roi = (Math.round((roi + 0.00001) * 100) / 100);
            return roi;
        }
    }
    getPnL(pos, instru, expiry_date) {
        let pnl = null;
        let exit = null;
        if (pos.exit !== null && pos.exit !== 0) {
            exit = pos.exit;
        }
        else {
            if (!instru) {
                instru = this.instru;
            }
            if (!expiry_date) {
                expiry_date = pos.expiry; // this.expiryDate;
            }
            exit = this.mapService.getScripLTP(instru, expiry_date, this.mapService.parseScrip(pos.scrip).scrip, this.mapService.parseScrip(pos.scrip).type);
        }
        if (pos.qty > 0) {
            let p = (exit - pos.entry) * pos.qty;
            pnl = p;
        }
        else if (pos.qty < 0) {
            let p = (pos.entry - exit) * -pos.qty;
            pnl = p;
        }
        /* if (position.scrip.includes('USDINR')) {
          pnl *= 1000;
        } */
        pnl = (Math.round((pnl + 0.00001) * 100) / 100);
        pos.pnl = pnl;
        return pnl;
    }
    getStrategyDelta() {
        let delta = 0;
        let trades = this.curr_positions_trades;
        if (trades) {
            trades.forEach(pos => {
                if (pos.exit === null || pos.exit === 0) {
                    if (this.payoff_overlay && !pos.selected) {
                        return;
                    }
                    let type = '';
                    let s = pos.scrip;
                    if (s.includes('CE')) {
                        type = 'CE';
                    }
                    if (s.includes('PE')) {
                        type = 'PE';
                    }
                    let strike = s.slice(0, -2); // remove CE PE at end
                    let ltp = this.mapService.getScripLTP(this.instru, pos.expiry, this.mapService.parseScrip(pos.scrip).scrip, this.mapService.parseScrip(pos.scrip).type);
                    delta += (this.appService.getDelta(this.instru, strike, type, pos.expiry, ltp, this.simulate_strategy, this.simulateCurrDateObj) * pos.qty);
                }
            });
        }
        delta = Math.round((delta + 0.00001) * 100) / 100;
        let suggest_string = ' ( 50: ' + (Math.round(((-delta / 50) + 0.00001) * 100) / 100) +
            ' , 100: ' + (Math.round(((-delta / 100) + 0.00001) * 100) / 100) +
            ' , 150: ' + (Math.round(((-delta / 150) + 0.00001) * 100) / 100) +
            ' , 200: ' + (Math.round(((-delta / 200) + 0.00001) * 100) / 100) + ' )';
        return delta + suggest_string;
    }
    getStrategyPnLAfterCharges() {
        let pnl = this.strategyPnl;
        // https://zerodha.com/charges#tab-equities
        // https://upstox.com/pricing/
        let charges = 0;
        let trades = this.curr_positions_trades;
        if (trades) {
            trades.forEach(pos => {
                let brokerage = 0;
                if (pos.exit !== null && pos.exit !== 0) {
                    brokerage = 40;
                }
                else {
                    brokerage = 20;
                }
                let total_premium = (Math.abs(pos.qty) * pos.entry) + (Math.abs(pos.qty) * pos.exit);
                let sell_premium = 0;
                if (pos.qty < 0) {
                    sell_premium = pos.entry * Math.abs(pos.qty);
                }
                else {
                    sell_premium = pos.exit * Math.abs(pos.qty);
                }
                let stt = 0.000625 * sell_premium;
                let exchange_fees = total_premium * 0.00053;
                let gst = 0.18 * (brokerage + exchange_fees);
                let clearing_charges = 0.00005 * total_premium;
                let stamp_duty = 0.00003 * total_premium;
                charges += brokerage + stt + exchange_fees + gst + clearing_charges + stamp_duty;
                // console.log(brokerage, stt, exchange_fees, gst, clearing_charges, stamp_duty);
            });
        }
        return Math.round(pnl - charges) + ', ' + Math.round(charges);
    }
    getSoldPremium() {
        let soldQtyCE = 0;
        let soldNumeratorCE = 0;
        let weightedSoldCE = 0;
        let soldQtyPE = 0;
        let soldNumeratorPE = 0;
        let weightedSoldPE = 0;
        let strangleSold = 0;
        let currentCE = 0;
        let weightedCurrentCE = 0;
        let currentPE = 0;
        let weightedCurrentPE = 0;
        let currentSold = 0;
        let trades = null;
        trades = this.curr_positions_trades;
        if (trades) {
            trades.forEach(pos => {
                if (pos.exit === 0 && pos.qty < 0) {
                    if (pos.scrip.includes('CE')) {
                        soldNumeratorCE += (-pos.qty * pos.entry);
                        soldQtyCE += -pos.qty;
                        let ltp = this.mapService.getScripLTP(this.instru, pos.expiry, this.mapService.parseScrip(pos.scrip).scrip, this.mapService.parseScrip(pos.scrip).type);
                        currentCE += (-pos.qty * ltp);
                    }
                    if (pos.scrip.includes('PE')) {
                        soldNumeratorPE += (-pos.qty * pos.entry);
                        soldQtyPE += -pos.qty;
                        let ltp = this.mapService.getScripLTP(this.instru, pos.expiry, this.mapService.parseScrip(pos.scrip).scrip, this.mapService.parseScrip(pos.scrip).type);
                        currentPE += (-pos.qty * ltp);
                    }
                }
            });
            if (soldQtyCE && soldNumeratorCE) {
                weightedSoldCE = soldNumeratorCE / soldQtyCE;
                weightedCurrentCE = currentCE / soldQtyCE;
            }
            if (soldQtyPE && soldNumeratorPE) {
                weightedSoldPE = soldNumeratorPE / soldQtyPE;
                weightedCurrentPE = currentPE / soldQtyPE;
            }
            strangleSold = weightedSoldCE + weightedSoldPE;
            strangleSold = (Math.round((strangleSold + 0.00001) * 100) / 100);
            currentSold = weightedCurrentCE + weightedCurrentPE;
            currentSold = (Math.round((currentSold + 0.00001) * 100) / 100);
            this.currentSold = currentSold;
            // console.log('****', weightedSoldCE, weightedCurrentCE, weightedSoldPE, weightedCurrentPE);
        }
        return [strangleSold, currentSold];
    }
    getStrategyPnL(num = null) {
        let pnl = 0;
        let pointsProfit = 0;
        let trades = null;
        let instru = null;
        let expiry = null;
        if (num === null) {
            trades = this.curr_positions_trades;
        }
        if (num === 1 && this.s1Trades) {
            trades = this.s1Trades.trades;
            instru = this.s1Trades.instru;
            expiry = this.s1Trades.expiry;
        }
        if (num === 2 && this.s2Trades) {
            trades = this.s2Trades.trades;
            instru = this.s2Trades.instru;
            expiry = this.s2Trades.expiry;
        }
        if (num === 3 && this.s3Trades) {
            trades = this.s3Trades.trades;
            instru = this.s3Trades.instru;
            expiry = this.s3Trades.expiry;
        }
        if (num === 4 && this.s4Trades) {
            trades = this.s4Trades.trades;
            instru = this.s4Trades.instru;
            expiry = this.s4Trades.expiry;
        }
        if (num === 5 && this.s5Trades) {
            trades = this.s5Trades.trades;
            instru = this.s5Trades.instru;
            expiry = this.s5Trades.expiry;
        }
        if (num === 6 && this.s6Trades) {
            trades = this.s6Trades.trades;
            instru = this.s6Trades.instru;
            expiry = this.s6Trades.expiry;
        }
        if (trades) {
            trades.forEach(pos => {
                if (num) {
                    let posPnl = this.getPnL(pos, instru, pos.expiry);
                    pnl += posPnl;
                    //pointsProfit += posPnl / Math.abs(pos.qty);
                    // console.log('points:', pointsProfit);
                }
                else {
                    let posPnl = this.getPnL(pos); // pos.pnl;
                    pnl += posPnl;
                    //pointsProfit += posPnl / Math.abs(pos.qty);
                }
            });
        }
        pnl = (Math.round((pnl + 0.00001) * 100) / 100);
        //pointsProfit = (Math.round((pointsProfit + 0.00001) * 100) / 100);
        // console.log('pointsProfit:', pointsProfit);
        if (num === null) {
            this.strategyPnl = pnl;
        }
        if (num === 1 && this.s1Trades) {
            this.strategyPnl1 = pnl;
        }
        if (num === 2 && this.s2Trades) {
            this.strategyPnl2 = pnl;
        }
        if (num === 3 && this.s3Trades) {
            this.strategyPnl3 = pnl;
        }
        if (num === 4 && this.s4Trades) {
            this.strategyPnl4 = pnl;
        }
        if (num === 5 && this.s5Trades) {
            this.strategyPnl5 = pnl;
        }
        if (num === 6 && this.s6Trades) {
            this.strategyPnl6 = pnl;
        }
        this.chartService.strategyPnLEvent$.next([pnl, pointsProfit]);
        return pnl;
    }
    getSelectedPnL() {
        let trades = this.curr_positions_trades;
        let pnl = 0;
        let strikes = [];
        this.selectedPnL = 0;
        this.selectedMaxProfit = 0;
        this.selectedMaxLoss = 0;
        let qty = 1000000;
        if (trades) {
            trades.forEach(pos => {
                if (pos.addToOrders) {
                    let s = pos.scrip;
                    let strike = s.slice(0, -2); // remove CE PE at end
                    strikes.push(strike);
                }
            });
            strikes.sort((a, b) => b - a);
            if (strikes.length === 2 || strikes.length === 3) { // Butterfly
                trades.forEach(pos => {
                    if (pos.addToOrders) {
                        let posPnl = this.getPnL(pos); // pos.pnl;
                        pnl += posPnl;
                        let curr_premium = pos.entry * pos.qty;
                        this.selectedMaxLoss += curr_premium;
                        if (Math.abs(pos.qty) < qty) {
                            qty = Math.abs(pos.qty);
                        }
                    }
                });
                let maxDiff = -1;
                for (let i = 0; i < strikes.length - 1; i++) {
                    let diff = strikes[i] - strikes[i + 1];
                    if (diff > maxDiff) {
                        maxDiff = diff;
                    }
                }
                this.selectedMaxProfit = (maxDiff * qty) - this.selectedMaxLoss;
                // console.log('strikes, maxdiff, qty', strikes, maxDiff, qty);
                this.selectedPnL = (Math.round((pnl + 0.00001) * 100) / 100);
                this.selectedMaxProfit = (Math.round((this.selectedMaxProfit + 0.00001) * 100) / 100);
                this.selectedMaxLoss = (Math.round((this.selectedMaxLoss + 0.00001) * 100) / 100);
            }
            if (strikes.length === 4) { // IronFly
                trades.forEach(pos => {
                    if (pos.addToOrders) {
                        let posPnl = this.getPnL(pos); // pos.pnl;
                        pnl += posPnl;
                        let curr_premium = pos.entry * pos.qty;
                        this.selectedMaxProfit += curr_premium;
                        if (Math.abs(pos.qty) < qty) {
                            qty = Math.abs(pos.qty);
                        }
                    }
                });
                let maxDiff = -1;
                for (let i = 0; i < strikes.length - 1; i++) {
                    let diff = strikes[i] - strikes[i + 1];
                    if (diff > maxDiff) {
                        maxDiff = diff;
                    }
                }
                // console.log('strikes, maxdiff, qty', strikes, maxDiff, qty);
                this.selectedPnL = (Math.round((pnl + 0.00001) * 100) / 100);
                this.selectedMaxProfit = Math.abs(Math.round((this.selectedMaxProfit + 0.00001) * 100) / 100);
                this.selectedMaxLoss = (maxDiff * qty) - this.selectedMaxProfit;
                this.selectedMaxLoss = (Math.round((this.selectedMaxLoss + 0.00001) * 100) / 100);
            }
        }
    }
    getAlertLtp(alert) {
        if (alert.selected) {
            if (alert.scrip1) {
                let ltp1 = this.mapService.getScripLTP(alert.instru, alert.expiry, this.mapService.parseScrip(alert.scrip1).scrip, this.mapService.parseScrip(alert.scrip1).type);
                let ltp = ltp1;
                if (alert.scrip2) {
                    let ltp2 = this.mapService.getScripLTP(alert.instru, alert.expiry, this.mapService.parseScrip(alert.scrip1).scrip, this.mapService.parseScrip(alert.scrip1).type);
                    ltp += ltp2;
                }
                return ltp;
            }
            else { // index
                return this.mapService.getScripLTP(null, null, alert.instru, null);
            }
        }
    }
    addScripToChart(scrip, type) {
        for (let [key, value] of Object.entries(_common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.simulateData)) {
            if (key === scrip || (key.startsWith(this.simulate_instru) && key.endsWith(scrip))) {
                let chartData = { chart: [] };
                let curr_date = this.simulateCurrDateTimeString.split(' ')[0];
                for (let [k, v] of Object.entries(value)) {
                    if (k.startsWith(curr_date)) {
                        chartData.chart.push({ label: k, close: v });
                    }
                }
                console.log('value', curr_date, chartData, value);
                this.updateFinChartData(chartData, type);
            }
        }
    }
    updateFinChartData(res, type) {
        if (res) {
            let labels = [];
            let close = [];
            if (res.chart && Array.isArray(res.chart)) {
                res.chart.forEach(element => {
                    labels.push(element.label);
                    close.push(element.close);
                });
            }
            if (!type) {
                this.finLineChartLabelsInstru = labels;
                this.finLineChartDataInstru = [
                    { data: close, label: 'close' },
                ];
            }
            else if (type === 'CE') {
                this.finLineChartLabels1 = labels;
                this.finLineChartData1 = [
                    { data: close, label: 'close' },
                ];
            }
            else if (type === 'PE') {
                this.finLineChartLabels2 = labels;
                this.finLineChartData2 = [
                    { data: close, label: 'close' },
                ];
            }
            this.finLineChartOptions = {
                responsive: true,
                scales: {
                    xAxes: [{}],
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                animation: {
                    duration: 0
                },
                /* annotation: {
                  events: ['click'],
                  annotations: this.getChartAnnotations(ltp),
                } */
            };
        }
    }
    updateChartData(res) {
        if (res) {
            this.labels = [];
            this.pnl = [];
            let overlay = [];
            let overlayT0 = [];
            let overlay2 = [];
            let overlay3 = [];
            let t0 = [];
            let t1 = [];
            let t2 = [];
            this.zeroline = [];
            let count = 0;
            let oi_bar_pe = [];
            let oi_bar_ce = [];
            if (res.chart && Array.isArray(res.chart)) {
                res.chart.forEach(element => {
                    // Change: -8.1, Final: -102518, StockPrice: 10318, Today: -115484.48, bes: 0
                    count++;
                    if (count < 100) {
                        /* this.labels.push(element.StockPrice);
                        this.pnl.push(element.Final);
                        this.zeroline.push(0); */
                    }
                    this.labels.push(element.StockPrice);
                    this.pnl.push(element.Final);
                    if (element.StockPrice % this.strikeStepValue === 0) {
                        let oi_pe = this.mapService.getScripOI(this.instru, this.expiryDate, element.StockPrice, 'PE');
                        let oi_ce = this.mapService.getScripOI(this.instru, this.expiryDate, element.StockPrice, 'CE');
                        let lastDayOICE = this.mapService.getScripLastDayOI(this.instru, this.expiryDate, element.StockPrice, 'CE');
                        let lastDayOIPE = this.mapService.getScripLastDayOI(this.instru, this.expiryDate, element.StockPrice, 'PE');
                        //if (oi_pe && oi_ce && lastDayOICE && lastDayOIPE) {
                        let diffCE = oi_ce - lastDayOICE;
                        let diffPE = oi_pe - lastDayOIPE;
                        oi_bar_pe.push(diffPE);
                        oi_bar_ce.push(diffCE);
                    }
                    else {
                        oi_bar_pe.push(0);
                        oi_bar_ce.push(0);
                    }
                    if (this.multi_t0) {
                        t1.push(element.T1);
                        t2.push(element.T2);
                    }
                    this.zeroline.push(0);
                    if (this.payoff_overlay || this.straddle_shiftCE_overlay || this.straddle_shiftPE_overlay) {
                        overlay.push(element.Overlay);
                        overlayT0.push(element.OverlayT0);
                    }
                    if (this.ce_side_overlay || this.pe_side_overlay) {
                        overlay.push(element.Overlay);
                        overlay2.push(element.Overlay2);
                        overlay3.push(element.Overlay3);
                    }
                    if (this.show_t0) {
                        t0.push(element.Today);
                    }
                    /* overlay.push(10000); */
                });
            }
            // console.log('payOffEvent labels: ', this.labels);
            // console.log('payOffEvent pnl: ', this.pnl);
            this.lineChartLabels = this.labels;
            this.lineChartData = [
                { data: this.pnl, label: 'PnL', yAxisID: 'y-axis-l' },
                { data: t0, label: 'T+0', fill: false, yAxisID: 'y-axis-l' },
                { data: t1, label: 'T+1', fill: false, yAxisID: 'y-axis-l' },
                { data: t2, label: 'T+2', fill: false, yAxisID: 'y-axis-l' },
                { data: overlay, label: 'Overlay', fill: false, yAxisID: 'y-axis-l' },
                { data: overlayT0, label: 'OverlayT0', fill: false, yAxisID: 'y-axis-l' },
                { data: overlay2, label: 'Overlay2', fill: false, yAxisID: 'y-axis-l' },
                { data: overlay3, label: 'Overlay3', fill: false, yAxisID: 'y-axis-l' },
                { data: oi_bar_pe, label: 'PE OI', type: 'bar', yAxisID: 'y-axis-r', barThickness: 5 },
                { data: oi_bar_ce, label: 'CE OI', type: 'bar', yAxisID: 'y-axis-r', barThickness: 5 },
                /* { data: this.zeroline, label: 'Zero line' }, */
            ];
            let ltp = 0;
            if (this.instru === 'USDINR') {
                if (this.use_hypo_future) {
                    let ce_premium = this.mapService.getScripLTP(this.instru, this.expiryDate, this.hypo_future_strike, 'CE');
                    let pe_premium = this.mapService.getScripLTP(this.instru, this.expiryDate, this.hypo_future_strike, 'PE');
                    ltp = ce_premium - pe_premium + this.hypo_future_strike; // Find future price from Put Call Parity
                    ltp = (Math.round((ltp + 0.00001) * 100) / 100);
                    console.log('hypo fut:' + ltp);
                }
                else {
                    ltp = this.mapService.getScripLTP(null, null, this.instru, null);
                    ltp = (Math.round((ltp + 0.00001) * 100) / 100); // TODO: ltp rounding for usdinr to two decimal
                }
            }
            else {
                ltp = this.mapService.getScripLTP(null, null, this.instru, null);
                ltp = Math.round(ltp);
            }
            this.lineChartOptions = {
                responsive: true,
                scales: {
                    xAxes: [{
                        /* barThickness: 5, */
                        }],
                    yAxes: [
                        {
                            id: 'y-axis-l',
                            position: 'left',
                        },
                        {
                            id: 'y-axis-r',
                            position: 'right',
                            /* scaleLabel: {
                              display: true,
                              labelString: 'OI'
                            },  */
                            gridLines: {
                                display: false
                            },
                            ticks: {
                                callback: value => {
                                    if (value >= 100000 || value <= -100000) {
                                        return value / 1e5 + 'L';
                                    }
                                    else if (value >= 1000 || value <= -1000) {
                                        return value / 1e3 + 'K';
                                    }
                                    return value;
                                }
                            }
                        }
                    ]
                },
                tooltips: {
                    mode: 'index',
                    intersect: false,
                },
                animation: {
                    duration: 0
                },
                annotation: {
                    events: ['click'],
                    annotations: this.getChartAnnotations(ltp),
                }
            };
        }
    }
    getChartAnnotations(ltp) {
        let annotations = [];
        /* let range = 1000;
        let range_multiple = 50;
        let increment = 50;
        if (this.instru === 'BANKNIFTY') {
          range = 3000;
          range_multiple = 100;
          increment = 100;
        }
        if (this.instru === 'USDINR') {
          range = 2;
          range_multiple = 0.25;
          increment = 0.25;
        }
    
        let round_ltp = (Math.round(ltp / range_multiple) * range_multiple);
        let lower_range = round_ltp - range; // TODO: range depends on instru
        let upper_range = round_ltp + range; */
        /* for (let point = lower_range; point <= upper_range; point += increment) {
          let symbol = point;
          let ce_premium = this.getLTP_strike({ scrip : symbol + 'CE' }, this.instru, this.expiryDate);
          let pe_premium = this.getLTP_strike({ scrip : symbol + 'PE' }, this.instru, this.expiryDate);
    
          annotations.push({
            drawTime: 'afterDatasetsDraw',
            type: 'line',
            mode: 'vertical',
            scaleID: 'x-axis-0',
            value: symbol,
            borderColor: 'white',
            borderWidth: 0,
            label: {
              yAdjust: 180,
              enabled: true,
              fontColor: 'white',
              content: ce_premium
            },
            onClick: function(this, e) {
              let scrip = point + 'CE';
              console.log('Adding scrip from payoff to strategy: ' + scrip);
              let qty = 75;
              if (this.instru === 'BANKNIFTY') {
                qty = 25;
              }
              if (this.instru === 'USDINR') {
                qty = 1000;
              }
              console.log(e);
              localStorage.setItem('addScripToStrategy', JSON.stringify({qty: qty, scrip: scrip, premium: ce_premium}));
            }
          });
          annotations.push({
            drawTime: 'afterDatasetsDraw',
            type: 'line',
            mode: 'vertical',
            scaleID: 'x-axis-0',
            value: symbol,
            borderColor: 'white',
            borderWidth: 0,
            label: {
              yAdjust: 200,
              enabled: true,
              fontColor: 'white',
              content: pe_premium
            },
            onClick: function(e) {
              let scrip = point + 'PE';
              console.log('Adding scrip from payoff to strategy: ' + scrip);
              let qty = 75;
              if (this.instru === 'BANKNIFTY') {
                qty = 25;
              }
              if (this.instru === 'USDINR') {
                qty = 1000;
              }
              this.addPosition(qty, scrip, pe_premium); // TODO: check instru for lot size
            }
          });
        } */
        /*
            this.curr_positions_trades.forEach(element => { */
        /* {
          qty: 75,
          scrip: '11150CE',
          expiry: '01OCT2020',
          entry: 50,
          exit: 0,
        }, */
        // -375x10950PEx01OCT2020x19.2x0x0&
        /*       if (element.exit === 0) {
                let symbol = element.scrip.slice(0, -2);
                symbol = parseFloat(symbol);
                symbol = (Math.round((symbol + 0.00001) * 100) / 100); // ltp rounding for usdinr to two decimal
        
                let labelcolor = 'white'; //'lightgreen';
                let linecolor = 'darkgrey' //'limegreen';
                let yAdjustBase = 0;
        
                if (element.scrip.includes('PE')) {
                  //labelcolor = 'salmon';
                  //linecolor = 'salmon';
                  yAdjustBase = 60;
                } */
        /* if (this.doAnnotationsContainSymbol(annotations, symbol)) {
          //yAdjustBase = 80;
          //linecolor = 'darkturquoise';
        } */
        /* if (element.qty >= 0) {
          labelcolor = 'white';
        } */
        //let pos = '' + (element.qty <= 0 ? element.qty : '+' + element.qty) + 'x' + element.scrip + 'x' + element.expiry + 'x' + element.entry + 'x' + element.exit + 'x0&';
        /* annotations.push({
          drawTime: 'afterDatasetsDraw',
          type: 'line',
          mode: 'vertical',
          scaleID: 'x-axis-0',
          value: symbol,
          borderColor: linecolor,
          borderWidth: 1,
          label: {
            yAdjust: 0,
            enabled: true,
            fontColor: labelcolor,
            content: symbol
          }
        });

        annotations.push({
          drawTime: 'afterDatasetsDraw',
          type: 'line',
          mode: 'vertical',
          scaleID: 'x-axis-0',
          value: symbol,
          borderColor: linecolor,
          borderWidth: 1,
          label: {
            yAdjust: yAdjustBase + 40,
            enabled: true,
            fontColor: labelcolor,
            content: element.qty / 1000
          }
        });

        let pnlcolor = 'lightgreen';
        if (element.pnl < 0) {
          pnlcolor = 'salmon';
        }
        annotations.push({
          drawTime: 'afterDatasetsDraw',
          type: 'line',
          mode: 'vertical',
          scaleID: 'x-axis-0',
          value: symbol,
          borderColor: linecolor,
          borderWidth: 1,
          label: {
            yAdjust: yAdjustBase + 60,
            enabled: true,
            fontColor: pnlcolor,
            content: element.pnl
          }
        });
      }
    }); */
        annotations.push({
            drawTime: 'afterDatasetsDraw',
            type: 'line',
            mode: 'vertical',
            scaleID: 'x-axis-0',
            value: ltp,
            borderColor: 'orange',
            borderWidth: 1,
            label: {
                yAdjust: -40,
                enabled: true,
                fontColor: 'orange',
                content: ltp
            }
        });
        // console.log(annotations);
        return annotations;
    }
    doAnnotationsContainSymbol(annotations, symbol) {
        for (let i = 0; i < annotations.length; i++) {
            if (symbol === annotations[i].value) {
                return true;
            }
        }
        return false;
    }
    updateIntradayChartData() {
        let labels = [];
        let prices = [];
        let spot = [];
        let ce_intraday = this.chartService.getIntradayData('74CE', 'USDINR', '2020-11-13');
        let pe_intraday = this.chartService.getIntradayData('74PE', 'USDINR', '2020-11-13');
        let spot_intraday = this.chartService.getIntradayData('FUT', 'USDINR', '2020-11-13' /* AppConstants.USDINR_FUT_MONTH */);
        if (ce_intraday) {
            ce_intraday.forEach(ce_elem => {
                let ce_time = ce_elem.time;
                pe_intraday.forEach(pe_elem => {
                    if (ce_time === pe_elem.time) {
                        let p = ce_elem.price + pe_elem.price;
                        p = Math.round((p + 0.00001) * 100) / 100; // round to 2 decimal places
                        labels.push(ce_time);
                        prices.push(p);
                        return;
                    }
                });
                if (spot_intraday) {
                    spot_intraday.forEach(elem => {
                        if (ce_time === elem.time) {
                            spot.push(elem.price);
                            return;
                        }
                    });
                }
            });
        }
        // console.log('updateIntradayChartData: ', labels, prices);
        this.i1ChartLabels = labels;
        this.i1ChartData = [
            { data: prices, label: 'Price' },
            { data: spot, label: 'Underlying', yAxisID: 'y-axis-1' },
        ];
    }
    rollPosition(pos) {
        console.log(pos, pos.rollstrike_new);
        let pos1 = {
            instru: this.instru,
            expiry_date: pos.expiry,
            curr_qty: pos.roll_qty,
            curr_scrip: pos.scrip,
            new_scrip: pos.rollstrike_new
        };
        this.place_roll_orders(pos1, true);
    }
    getPosRollStrike(pos, num) {
        let multiple = 50;
        if (this.instru === 'BANKNIFTY') {
            multiple = 100;
        }
        if (this.instru === 'USDINR') {
            multiple = 0.25;
        }
        let type = '';
        if (pos.scrip.includes('CE')) {
            type = 'CE';
        }
        if (pos.scrip.includes('PE')) {
            type = 'PE';
        }
        let strike = Number(pos.scrip.slice(0, -2)); // remove CE PE at end
        strike = strike + (num * multiple);
        return strike + type;
    }
    getPosRollStrikeLTP(pos, num) {
        let multiple = 50;
        if (this.instru === 'BANKNIFTY') {
            multiple = 100;
        }
        if (this.instru === 'USDINR') {
            multiple = 0.25;
        }
        let type = '';
        if (pos.scrip.includes('CE')) {
            type = 'CE';
        }
        if (pos.scrip.includes('PE')) {
            type = 'PE';
        }
        let strike = Number(pos.scrip.slice(0, -2)); // remove CE PE at end
        strike = strike + (num * multiple);
        // console.log(strike);
        return this.mapService.getScripLTP(pos.instru, pos.expiry, strike, type);
    }
    getOrderLtp(pos, newpos = false) {
        let scrip = pos.curr_scrip;
        if (newpos) {
            scrip = pos.new_scrip;
        }
        if (scrip) {
            return this.mapService.getScripLTP(pos.instru, pos.expiry_date, this.mapService.parseScrip(scrip).scrip, this.mapService.parseScrip(scrip).type);
        }
    }
    adjustKnifeOrders() {
        this.knife_orders.forEach(k => {
            let knife = this.getKnifeOrderStatus(k);
            let status = knife[0];
            let price = knife[1];
            let orderId = knife[2];
            if (status === 'OPEN') {
                let ltp = this.getLTP(k.expiry_date, k.scrip, k.instru);
                let threshold1 = Math.round(price + (price * (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.knife_threshold_adjust1 / 100)));
                let threshold2 = Math.round(price + (price * (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.knife_threshold_adjust2 / 100)));
                if (ltp && (ltp < threshold1 || ltp > threshold2)) {
                    console.log('Adjusting knife order', k.scrip);
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.requestStatusEvent$.next({ 'status': 'info', 'message': 'Adjusting knife order ' + k.scrip });
                    this.appService.playAudio('success');
                    let limit = Math.round(ltp - (ltp * (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.knife_threshold / 100)));
                    let pos = {
                        instru: k.instru,
                        expiry_date: k.expiry_date,
                        curr_qty: -k.qty,
                        curr_scrip: k.scrip,
                        new_scrip: null
                    };
                    if (limit) {
                        this.place_roll_orders(pos, true, false, limit, orderId, "MIS");
                        setTimeout(() => {
                            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.miscEvent$.next('refreshAll');
                        }, 4000);
                    }
                    else {
                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.requestStatusEvent$.next({ 'status': 'danger', 'message': 'Limit price could not be calculated for ' + k.scrip });
                    }
                }
            }
        });
    }
    getKnifeOrderStatus(k) {
        // console.log(AppConstants.orders);
        let object = { instru: k.instru, expiry: k.expiry_date, strike: this.mapService.parseScrip(k.scrip).scrip, optionType: this.mapService.parseScrip(k.scrip).type };
        let symbol = this.mapService.getMapKey(object);
        let status = '';
        let latest_time = null;
        let price = null;
        let orderId = null;
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.orders.forEach((o) => {
            if (symbol === o.tradingsymbol) {
                if (latest_time === null || o.time > latest_time) {
                    status = o.status;
                    latest_time = o.time;
                    price = o.tradedPrice;
                    orderId = o.id;
                }
            }
        });
        //console.log('tradedPrice', symbol, latest_time);
        return [status, price, orderId];
    }
    place_knife_orders() {
        this.knife_orders.forEach(k => {
            this.place_knife_order(k);
        });
        // this.place_knife_order(this.knife_orders[2]);
        setTimeout(() => {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.miscEvent$.next('refreshAll');
        }, 4000);
    }
    place_knife_order(k) {
        let pos = {
            instru: k.instru,
            expiry_date: k.expiry_date,
            curr_qty: -k.qty,
            curr_scrip: k.scrip,
            new_scrip: null
        };
        let ltp = this.getLTP(k.expiry_date, k.scrip, k.instru);
        let limit = Math.round(ltp - (ltp * (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.knife_threshold / 100)));
        if (limit) {
            this.place_roll_orders(pos, true, false, limit, null, "MIS");
        }
        else {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.requestStatusEvent$.next({ 'status': 'danger', 'message': 'Limit price could not be calculated for ' + k.scrip });
        }
    }
    place_all_orders() {
        if (confirm('Place All ?')) {
            this.place_orders.forEach(pos => {
                this.place_roll_orders(pos, true, false);
            });
        }
    }
    place_roll_orders(pos, first_order, confirm_orders = true, limit_price = null, orderId = null, product_type = "NRML", tag = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.defaultTag, trigger_price = 0, slabOrderId = null) {
        /*
          instru: 'BANKNIFTY',
          expiry_date: '2022-03-10',
          curr_qty: -200,
          curr_scrip: '39000CE',
          new_scrip: '38900CE'
        */
        let confirmed = false;
        if (first_order && confirm_orders) {
            confirmed = confirm('Sure? ' + pos.curr_qty + ' ' + pos.curr_scrip + ' ' + pos.new_scrip);
        }
        else {
            confirmed = true;
        }
        if (confirmed) {
            if (first_order && !pos.curr_scrip) { // to handle condition where only new position has to be executed
                this.place_roll_orders(pos, false);
            }
            else {
                let qty = pos.curr_qty;
                let scrip = pos.curr_scrip;
                if (first_order) {
                    qty = -qty; // to exit
                }
                else {
                    scrip = pos.new_scrip;
                }
                console.log('place order', qty, scrip);
                if (qty != '' && qty != null && scrip) {
                    let object = { instru: pos.instru, expiry: pos.expiry_date, strike: this.mapService.parseScrip(scrip).scrip, optionType: this.mapService.parseScrip(scrip).type };
                    let symbol = this.mapService.getMapKey(object);
                    console.log('placing ', first_order ? 'first order ' : 'second order ', symbol);
                    this.zerodhaService.place_order(symbol, qty, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.broker_auth, limit_price, orderId, product_type, tag, trigger_price).subscribe((res) => {
                        console.log('place_roll_orders response', res);
                        // {"status":"success","data":{"order_id":"231023302678937"}}
                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.requestStatusEvent$.next({ 'status': 'secondary', 'message': 'Placed ' + scrip + ' ' + qty });
                        if (first_order && pos.new_scrip) {
                            setTimeout(() => {
                                this.place_roll_orders(pos, false);
                            }, 1000);
                        }
                        else {
                            if (slabOrderId) {
                                console.log('Algo - Order Id:', res.data.order_id);
                                slabOrderId = res.data.order_id;
                            }
                        }
                    }, error => {
                        console.log('place_roll_orders error', error);
                        let errmsg = 'Error (mostly timeout)';
                        if (error.error && error.error.message) {
                            errmsg = error.error.message;
                        }
                        else {
                            errmsg = error.message;
                        }
                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.requestStatusEvent$.next({ 'status': 'danger', 'message': scrip + ' ' + qty + ' ' + errmsg });
                        this.appService.playAudio('error');
                    });
                }
                else {
                    console.log('Not valid data to place order');
                }
            }
        }
    }
    saveAsCF() {
        let c_positions = this.curr_positions_trades.map(a => Object.assign({}, a));
        console.log('c_positions', c_positions);
        let curr_positions = { instru: '', expiry: '', trades: {} };
        curr_positions.instru = this.instru;
        curr_positions.expiry = this.expiryDate;
        c_positions.forEach(element => {
            delete element.addToOrders;
            delete element.selected;
            delete element.selectedActual;
            delete element.roll_qty;
            delete element.rollstrike;
            delete element.rollstrike_new;
            delete element.pnl;
            delete element.alertPrice;
            delete element.alertStatus;
        });
        curr_positions.trades = c_positions;
        console.log('Saving positions CF: ', curr_positions);
        console.log('Saving positions json CF: ', JSON.stringify(curr_positions));
        localStorage.setItem('cf_curr_positions' + this.currLoadNum, JSON.stringify(curr_positions));
    }
    removeCF() {
        localStorage.removeItem('cf_curr_positions' + this.currLoadNum);
    }
    use_cf_change(event) {
        this.use_cf_strategies[this.currLoadNum] = this.use_cf;
    }
    use_tag_change(event) {
        this.use_tag_strategies[this.currLoadNum] = this.use_tag;
    }
    use_include_guid_change(event) {
        this.use_include_guid_strategies[this.currLoadNum] = this.use_include_guid;
    }
    use_exclude_guid_change(event) {
        this.use_exclude_guid_strategies[this.currLoadNum] = this.use_exclude_guid;
    }
    refreshPositions() {
        console.log('refreshing positions');
        // states:
        /*
        CANCELLED
        CANCEL PENDING
        MODIFIED
        MODIFY PENDING
        MODIFY VALIDATION PENDING
        TRIGGER PENDING
        OPEN PENDING
        VALIDATION PENDING
        PUT ORDER REQ RECEIVED
         */
        let prev_positions = this.curr_positions_trades;
        this.curr_positions_trades = [];
        this.sl_trades = [];
        // this.curr_positions_trades.push({ qty: qty, scrip: scrip, expiry: dateString, entry: entry, exit: 0, addToOrders: false, selected: true, selectedActual: false, rollstrike: null, rollstrike_new: scrip, roll_qty: roll_qty, alertPrice: null, alertStatus: '' });
        let tagSearch = this.tagSearch;
        if (!this.use_tag) {
            tagSearch = '';
        }
        let includeGUIDs = this.includeGUIDs;
        if (!this.use_include_guid) {
            includeGUIDs = '';
        }
        let excludeGUIDs = this.excludeGUIDs;
        if (!this.use_exclude_guid) {
            excludeGUIDs = '';
        }
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.orders.forEach((o) => {
            console.log('tag search', o.tags, tagSearch);
            if (o.instru === this.instru && ((o.tags.includes(tagSearch) && !excludeGUIDs.includes(o.guid)) || includeGUIDs.includes(o.guid)) && o.status === 'COMPLETE') {
                let d = new Date(o.expiry);
                let monthNames = ['JAN', 'FEB', 'MAR', 'APR',
                    'MAY', 'JUN', 'JUL', 'AUG',
                    'SEP', 'OCT', 'NOV', 'DEC'];
                let day = ('0' + d.getDate()).slice(-2);
                let monthIndex = d.getMonth();
                let monthName = monthNames[monthIndex];
                let year = d.getFullYear();
                let dateString = day + monthName + year;
                this.curr_positions_trades.push({ qty: o.qty, scrip: o.scrip, expiry: dateString, entry: o.tradedPrice, exit: 0, addToOrders: false, selected: true, selectedActual: false, rollstrike: null, rollstrike_new: o.scrip, roll_qty: this.appService.getQtyUptoFreezeLimit(this.instru, o.qty), alertPrice: null, alertStatus: '' });
            }
            if (o.instru === this.instru && o.status === 'TRIGGER PENDING' && o.triggerPrice !== 0) {
                let d = new Date(o.expiry);
                let monthNames = ['JAN', 'FEB', 'MAR', 'APR',
                    'MAY', 'JUN', 'JUL', 'AUG',
                    'SEP', 'OCT', 'NOV', 'DEC'];
                let day = ('0' + d.getDate()).slice(-2);
                let monthIndex = d.getMonth();
                let monthName = monthNames[monthIndex];
                let year = d.getFullYear();
                let dateString = day + monthName + year;
                this.sl_trades.push({ qty: o.qty, scrip: o.scrip, expiry: dateString, price: o.tradedPrice, trigger_price: o.triggerPrice, order_id: o.id });
            }
        });
        console.log('this.curr_positions_trades before adding CF', this.curr_positions_trades);
        if (this.use_cf) {
            let curr_positions = JSON.parse(localStorage.getItem('cf_curr_positions' + this.currLoadNum));
            if (curr_positions && curr_positions.trades) {
                curr_positions.trades.forEach(o => {
                    this.curr_positions_trades.push({ qty: o.qty, scrip: o.scrip, expiry: o.expiry, entry: o.entry, exit: o.exit, addToOrders: false, selected: true, selectedActual: false, rollstrike: null, rollstrike_new: o.scrip, roll_qty: this.appService.getQtyUptoFreezeLimit(this.instru, o.qty), alertPrice: null, alertStatus: '' });
                });
            }
            console.log('this.curr_positions_trades after adding CF', this.curr_positions_trades);
        }
        //this.savePositions(this.currLoadNum);
        this.mergePositions();
        this.sortPositions();
        console.log('this.curr_positions_trades after merge', this.curr_positions_trades);
        console.log('prev_positions', prev_positions);
        this.getPayoff();
        this.getMargin();
        this.crossCheckPositions();
        this.copyProperties(prev_positions);
        //this.reloadPayoffData(this.currLoadNum);
        this.sortSLLPositions();
        this.updateOCValuesForSLL();
    }
    copyProperties(prev_positions) {
        console.log('prev pos', prev_positions);
        if (this.curr_positions_trades) {
            this.curr_positions_trades.forEach(a => {
                if (a.exit === 0) {
                    let found = this.findInPrevious(prev_positions, a.scrip);
                    console.log('chart component found', found);
                    if (found) {
                        if (found.rollstrike_new) {
                            a.rollstrike_new = found.rollstrike_new;
                        }
                        if (found.alertPrice) {
                            a.alertPrice = found.alertPrice;
                        }
                        if (a.qty === found.qty) {
                            a.roll_qty = found.roll_qty;
                        }
                        else {
                            a.roll_qty = this.appService.getQtyUptoFreezeLimit(this.instru, a.qty);
                        }
                    }
                }
            });
        }
    }
    findInPrevious(prev_positions, strikeToFind) {
        let found = null;
        if (prev_positions) {
            prev_positions.forEach(a => {
                // console.log('chart component findInPrevious', a);
                if (a.exit === 0 && a.scrip === strikeToFind) {
                    // console.log('chart component found prev', a);
                    found = a;
                    return;
                }
            });
            return found;
        }
    }
    // algo code starts
    startAlgo() {
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.enableAlgo = true;
        this.enableAlgo = true;
        this.loadAlgoPosFromLocal();
        this.findInstruToTrade();
    }
    stopAlgo() {
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.enableAlgo = false;
        this.enableAlgo = false;
    }
    loadAlgoPosFromLocal() {
        let d = new Date();
        let dateString = '' + d.getFullYear() + '-' + ('0' + (d.getMonth() + 1)).slice(-2) + '-' + ('0' + d.getDate()).slice(-2);
        let algoLog = JSON.parse(localStorage.getItem('algo_log_' + dateString));
        if (algoLog) {
            this.addToAlgoLog('Loading algoLog from localStorage');
            this.algoLog = algoLog;
            console.log('algo log', this.algoLog, algoLog);
        }
        let slabEntered = JSON.parse(localStorage.getItem('algo_slabEntered_' + dateString));
        if (slabEntered) {
            this.addToAlgoLog('Loading slabEntered from localStorage');
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabEntered = slabEntered;
            console.log('algo slabEntered', _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabEntered, slabEntered);
        }
        let slabOrderId = JSON.parse(localStorage.getItem('algo_slabOrderId_' + dateString));
        if (slabOrderId) {
            this.addToAlgoLog('Loading slabOrderId from localStorage');
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabOrderId = slabOrderId;
            console.log('algo slabOrderId', _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabOrderId, slabOrderId);
        }
        let slabStrikes = JSON.parse(localStorage.getItem('algo_slabStrikes_' + dateString));
        if (slabStrikes) {
            this.addToAlgoLog('Loading slabStrikes from localStorage');
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes = slabStrikes;
            console.log('algo slabStrikes', _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes, slabStrikes);
        }
        let slabCurrEntryPrice = JSON.parse(localStorage.getItem('algo_slabCurrEntryPrice_' + dateString));
        if (slabCurrEntryPrice) {
            this.addToAlgoLog('Loading slabCurrEntryPrice from localStorage');
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice = slabCurrEntryPrice;
            console.log('algo slabCurrEntryPrice', _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice, slabCurrEntryPrice);
        }
    }
    saveAlgoPosToLocal() {
        let d = new Date();
        let dateString = '' + d.getFullYear() + '-' + ('0' + (d.getMonth() + 1)).slice(-2) + '-' + ('0' + d.getDate()).slice(-2);
        localStorage.setItem('algo_log_' + dateString, JSON.stringify(this.algoLog));
        localStorage.setItem('algo_slabEntered_' + dateString, JSON.stringify(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabEntered));
        localStorage.setItem('algo_slabOrderId_' + dateString, JSON.stringify(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabOrderId));
        localStorage.setItem('algo_slabStrikes_' + dateString, JSON.stringify(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes));
        localStorage.setItem('algo_slabCurrEntryPrice_' + dateString, JSON.stringify(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice));
    }
    addToAlgoLog(logMessage) {
        this.algoLog += new Date().toLocaleTimeString() + ' - ' + logMessage + '\r\n';
        console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + logMessage);
    }
    isMarketClosed() {
        let curr_date = new Date();
        let exitDateObj = new Date();
        exitDateObj.setHours(15);
        exitDateObj.setMinutes(30);
        exitDateObj.setSeconds(0, 0);
        if (curr_date.getTime() >= exitDateObj.getTime()) {
            return true;
        }
        return false;
    }
    isSystemOkay() {
        if (this.enableAlgo) {
            if (this.zerodhaService.isSocketConnected()) {
                return true;
            }
        }
        return false;
    }
    findInstruToTrade() {
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade = 'BANKNIFTY';
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade = this.mapService.findTodayExpiry(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bnfExpiries);
        if (!_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade) {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade = 'FINNIFTY';
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade = this.mapService.findTodayExpiry(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.finniftyExpiries);
        }
        if (!_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade) {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade = 'SENSEX';
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade = this.mapService.findTodayExpiry(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.sensexExpiries);
        }
        if (!_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade) {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade = 'BANKEX';
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade = this.mapService.findTodayExpiry(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.bankexExpiries);
        }
        if (!_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade) {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade = 'NIFTY';
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade = this.mapService.findTodayExpiry(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.niftyExpiries);
        }
        if (!_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade) {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade = 'MIDCPNIFTY';
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade = this.mapService.findTodayExpiry(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.midcapExpiries);
        }
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade = 'MIDCPNIFTY';
        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade = new Date(2023, 9, 30);
        if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade) {
            let expiryString = '' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade.getFullYear() + '-' + ('0' + (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade.getMonth() + 1)).slice(-2) + '-' + ('0' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade.getDate()).slice(-2);
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade = expiryString;
            this.loadAlgoStrategySlot();
            this.recreateAlgoPos();
            setTimeout(() => {
                this.entryScheduler();
                this.algoScheduler();
            }, 2000);
        }
        else {
            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade = '';
            this.addToAlgoLog('No instrument found to trade today');
        }
        this.instruToTrade = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade;
        this.expiryDateToTrade = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade;
    }
    loadAlgoStrategySlot() {
        this.instru = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade;
        this.expiryDate = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade;
        this.reloadPayoffData(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.algoStrategyNum);
        this.loadOptionChain();
    }
    entryScheduler() {
        console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + 'entryInterval starting now');
        this.entryInterval = setInterval(() => {
            /* if (this.isMarketClosed()) {
              this.addToAlgoLog('Market closed. Stopping entryInterval');
              clearInterval(this.entryInterval);
              return;
            } */
            if (!this.isSystemOkay()) {
                console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + 'entryInterval - System not okay. Skipping...');
                return;
            }
            // console.log('entryInterval', new Date().getSeconds());
            let curr_date = new Date();
            let slabEntryTime = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabEntryTime[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade];
            for (let [key, value] of Object.entries(slabEntryTime)) {
                let v = String(value);
                let splitValue = v.split(':');
                let hrs = Number(splitValue[0]);
                let mins = Number(splitValue[1]);
                let slabDateObj = new Date();
                slabDateObj.setHours(hrs);
                slabDateObj.setMinutes(mins);
                slabDateObj.setSeconds(0, 0);
                // console.log(key, value, hrs, mins);
                if (curr_date.getTime() >= slabDateObj.getTime()) {
                    if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabEntered[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] == false) {
                        // find ce and pe strikes to enter for this slab based on slabEntryDist
                        let strike_diff = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.strike_diff[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade];
                        let atm = this.mapService.getScripLTP(null, null, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade, null);
                        atm = (Math.round(atm / strike_diff) * strike_diff);
                        let entryDist = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabEntryDist[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key];
                        let ce_strike = (atm + entryDist);
                        let ce = ce_strike + 'CE';
                        let pe_strike = (atm - entryDist);
                        let pe = pe_strike + 'PE';
                        let ce_ltp = this.getLTP(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade, ce, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade);
                        let pe_ltp = this.getLTP(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade, pe, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade);
                        if (ce_ltp && pe_ltp) {
                            if (this.algoSimulated) {
                                this.addToAlgoLog('Enter - Slab ' + key + ' - ' + ce + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - ' + ce_ltp + ' - marked for time ' + hrs + ':' + mins);
                                this.addToAlgoLog('Enter - Slab ' + key + ' - ' + pe + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - ' + pe_ltp + ' - marked for time ' + hrs + ':' + mins);
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = ce_strike;
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = pe_strike;
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabEntered[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] = true;
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = ce_ltp; // TODO: find from COMPLETE order_id
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = pe_ltp; // TODO: find from COMPLETE order_id
                                this.addPosition(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key], ce, ce_ltp, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade);
                                this.addPosition(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key], pe, pe_ltp, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade);
                                this.recreateAlgoPos();
                                this.savePositions(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.algoStrategyNum, false);
                            }
                            else {
                                this.executeAlgoOrder(key, ce, null, 'CE');
                                this.executeAlgoOrder(key, pe, null, 'PE');
                                this.addToAlgoLog('Enter - Slab ' + key + ' - ' + ce + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - marked for time ' + hrs + ':' + mins);
                                this.addToAlgoLog('Enter - Slab ' + key + ' - ' + pe + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - marked for time ' + hrs + ':' + mins);
                            }
                        }
                        else {
                            console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + 'LTPs not found for entering algo', ce, ce_ltp, pe, pe_ltp);
                        }
                    }
                    else {
                        // console.log('Slab ' + key + ' already entered');
                    }
                }
            }
            let allSlabsEntered = true;
            let slabEntered = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabEntered[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade];
            for (let [key, value] of Object.entries(slabEntered)) {
                if (value == false) {
                    allSlabsEntered = false;
                }
            }
            if (allSlabsEntered) {
                this.addToAlgoLog('All Slabs entered. Stopping entryInterval');
                clearInterval(this.entryInterval);
                return;
            }
        }, 1000); // every second
    }
    isMinDist(new_strike) {
        let strike_diff = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.strike_diff[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade];
        let atm = this.mapService.getScripLTP(null, null, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade, null);
        atm = (Math.round(atm / strike_diff) * strike_diff);
        let curr_date = new Date();
        let minDistTillTime = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.minDistTillTime[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade];
        let minDist = 0;
        for (let [key, value] of Object.entries(minDistTillTime)) {
            let v = String(key);
            let splitValue = v.split(':');
            let hrs = Number(splitValue[0]);
            let mins = Number(splitValue[1]);
            let slabDateObj = new Date();
            slabDateObj.setHours(hrs);
            slabDateObj.setMinutes(mins);
            slabDateObj.setSeconds(0, 0);
            if (curr_date.getTime() <= slabDateObj.getTime()) {
                minDist = Number(value);
                break;
            }
        }
        if (Math.abs(atm - new_strike) >= minDist) {
            return true;
        }
        return false;
    }
    sortAlgoPositions() {
        this.algo_pos.sort((a, b) => {
            // -1 means a should come before b
            // 1 means a should come after b
            let a_symbol = a.scrip.slice(0, -2);
            let b_symbol = b.scrip.slice(0, -2);
            if (a_symbol === b_symbol && a.scrip.includes('CE') && b.scrip.includes('PE')) { // same strike CE PE, CE should occur first
                return -1;
            }
            if (a_symbol === b_symbol && a.scrip.includes('PE') && b.scrip.includes('CE')) { // same strike CE PE, CE should occur first
                return 1;
            }
            return this.compareForSorting(a.scrip, b.scrip);
        });
    }
    getAlgoPosLTP(pos) {
        return this.getLTP(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade, pos, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade);
    }
    recreateAlgoPos() {
        this.algo_pos = [];
        let slabStrikes = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade];
        for (let [key, value] of Object.entries(slabStrikes)) {
            let sl_perc = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabSL[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key];
            let rollin_perc = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabRollIn[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key];
            let qty = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key];
            if (!this.algoSimulated) {
                if (value['CE'] == '' || !_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE']) {
                    if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabOrderId[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE']) {
                        let obj_ce = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.orders.find(o => o.id === _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabOrderId[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE']);
                        if (obj_ce) {
                            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = this.mapService.parseScrip(obj_ce.scrip).scrip; // same as value['CE'] = ...
                            if (obj_ce.status === 'COMPLETE') {
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = obj_ce.tradedPrice;
                            }
                        }
                    }
                }
                if (value['PE'] == '' || _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE']) {
                    if (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabOrderId[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE']) {
                        let obj_pe = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.orders.find(o => o.id === _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabOrderId[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE']);
                        if (obj_pe) {
                            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = this.mapService.parseScrip(obj_pe.scrip).scrip; // same as value['PE'] = ...
                            if (obj_pe.status === 'COMPLETE') {
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = obj_pe.tradedPrice;
                            }
                        }
                    }
                }
            }
            let ce_strike = value['CE'];
            if (ce_strike !== '') {
                let ce_entry = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'];
                let ce_sl = null;
                let ce_rollin = null;
                if (ce_entry) {
                    ce_entry = (Math.round((ce_entry + 0.001) * 100) / 100);
                    ce_sl = ce_entry + (ce_entry * sl_perc);
                    ce_sl = (Math.round((ce_sl + 0.001) * 100) / 100);
                    ce_rollin = ce_entry - (ce_entry * rollin_perc);
                    ce_rollin = (Math.round((ce_rollin + 0.001) * 100) / 100);
                }
                this.algo_pos.push({ qty: qty, entry: ce_entry, scrip: ce_strike + 'CE', sl: ce_sl, rollin: ce_rollin, });
            }
            let pe_strike = value['PE'];
            if (pe_strike !== '') {
                let pe_entry = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'];
                let pe_sl = null;
                let pe_rollin = null;
                if (pe_entry) {
                    pe_entry = (Math.round((pe_entry + 0.001) * 100) / 100);
                    pe_sl = pe_entry + (pe_entry * sl_perc);
                    pe_sl = (Math.round((pe_sl + 0.001) * 100) / 100);
                    pe_rollin = pe_entry - (pe_entry * rollin_perc);
                    pe_rollin = (Math.round((pe_rollin + 0.001) * 100) / 100);
                }
                this.algo_pos.push({ qty: qty, entry: pe_entry, scrip: pe_strike + 'PE', sl: pe_sl, rollin: pe_rollin, });
            }
        }
        this.sortAlgoPositions();
        this.saveAlgoPosToLocal();
    }
    executeAlgoOrder(key, scrip, new_scrip, type) {
        console.log('executeAlgoOrder', key, scrip, new_scrip, type);
        let pos1 = {
            instru: _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade,
            expiry_date: _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade,
            curr_qty: _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key],
            curr_scrip: scrip,
            new_scrip: new_scrip
        };
        this.place_roll_orders(pos1, true, false, null, null, "NRML", _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.defaultTag, 0, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabOrderId[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key][type]);
    }
    algoScheduler() {
        console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + 'algoInterval starting now');
        this.algoInterval = setInterval(() => {
            /* if (this.isMarketClosed()) {
              this.addToAlgoLog('Market closed. Stopping algoInterval');
              clearInterval(this.algoInterval);
              return;
            } */
            if (!this.isSystemOkay()) {
                console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + 'algoInterval - System not okay. Skipping...');
                return;
            }
            let slabEntered = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabEntered[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade];
            for (let [key, value] of Object.entries(slabEntered)) {
                if (value == true) {
                    // console.log('Slab ' + key + ' handled by algoScheduler');
                    let sl_perc = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabSL[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key];
                    let rollin_perc = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabRollIn[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key];
                    let ce_strike = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'];
                    let ce_entry = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'];
                    if (ce_strike && ce_entry) {
                        let ce_ltp = this.getLTP(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade, ce_strike + 'CE', _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade);
                        let ce_sl = ce_entry + (ce_entry * sl_perc);
                        let ce_rollin = ce_entry - (ce_entry * rollin_perc);
                        //console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + ' CE: ', key, ce_ltp, ce_sl);
                        //////////////////////////////////// CE ROLL OUT //////////////////////////////////
                        if (ce_ltp >= ce_sl) {
                            let ce_sl_counter = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabSLCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'];
                            console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + ' Counter-SL CE: ', key, ce_ltp, ce_sl, ce_sl_counter);
                            if (ce_sl_counter >= _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.secsToWaitForSL) {
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabSLCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = 0;
                                let new_ce_strike = ce_strike + (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.strike_diff[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade] * _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.rolloutStrikeMultiple);
                                let new_ce = new_ce_strike + 'CE';
                                if (this.algoSimulated) {
                                    let new_ce_ltp = this.getLTP(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade, new_ce, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade);
                                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = new_ce_strike;
                                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = new_ce_ltp; // TODO: find from COMPLETE order_id
                                    this.addPosition(-_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key], ce_strike + 'CE', ce_ltp, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade);
                                    this.addPosition(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key], new_ce, new_ce_ltp, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade);
                                    this.recreateAlgoPos();
                                    this.savePositions(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.algoStrategyNum, false);
                                    this.addToAlgoLog('Exit - Slab ' + key + ' - ' + ce_strike + 'CE - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - ' + ce_ltp);
                                    this.addToAlgoLog('Rollout - Slab ' + key + ' - ' + new_ce + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - ' + new_ce_ltp);
                                }
                                else {
                                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = '';
                                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = null;
                                    this.executeAlgoOrder(key, ce_strike + 'CE', new_ce, 'CE');
                                    this.addToAlgoLog('Exit - Slab ' + key + ' - ' + ce_strike + 'CE - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]);
                                    this.addToAlgoLog('Rollout - Slab ' + key + ' - ' + new_ce + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]);
                                }
                            }
                            else {
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabSLCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = ce_sl_counter + 1;
                            }
                        }
                        else {
                            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabSLCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = 0;
                        }
                        //////////////////////////////////// CE ROLL IN //////////////////////////////////
                        if (ce_ltp <= ce_rollin || ce_ltp < 1) {
                            let ce_rollin_counter = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabRollInCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'];
                            console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + ' Counter-RI CE: ', key, ce_ltp, ce_rollin, ce_rollin_counter);
                            if (ce_rollin_counter >= _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.secsToWaitForSL) {
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabRollInCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = 0;
                                let new_ce_strike = ce_strike - _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.strike_diff[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade];
                                if (this.isMinDist(new_ce_strike)) {
                                    let new_ce = new_ce_strike + 'CE';
                                    if (this.algoSimulated) {
                                        let new_ce_ltp = this.getLTP(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade, new_ce, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade);
                                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = new_ce_strike;
                                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = new_ce_ltp; // TODO: find from COMPLETE order_id
                                        this.addPosition(-_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key], ce_strike + 'CE', ce_ltp, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade);
                                        this.addPosition(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key], new_ce, new_ce_ltp, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade);
                                        this.recreateAlgoPos();
                                        this.savePositions(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.algoStrategyNum, false);
                                        this.addToAlgoLog('Exit - Slab ' + key + ' - ' + ce_strike + 'CE - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - ' + ce_ltp);
                                        this.addToAlgoLog('Rollin - Slab ' + key + ' - ' + new_ce + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - ' + new_ce_ltp);
                                    }
                                    else {
                                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = '';
                                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = null;
                                        this.executeAlgoOrder(key, ce_strike + 'CE', new_ce, 'CE');
                                        this.addToAlgoLog('Exit - Slab ' + key + ' - ' + ce_strike + 'CE - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]);
                                        this.addToAlgoLog('Rollin - Slab ' + key + ' - ' + new_ce + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]);
                                    }
                                }
                                else {
                                    console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + ' Cannot Roll In CE due to min. distance', key);
                                }
                            }
                            else {
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabRollInCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = ce_rollin_counter + 1;
                            }
                        }
                        else {
                            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabRollInCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['CE'] = 0;
                        }
                    }
                    let pe_strike = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'];
                    let pe_entry = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'];
                    if (pe_strike && pe_entry) {
                        let pe_ltp = this.getLTP(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade, pe_strike + 'PE', _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade);
                        let pe_sl = pe_entry + (pe_entry * sl_perc);
                        let pe_rollin = pe_entry - (pe_entry * rollin_perc);
                        //console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + ' PE: ', key, pe_ltp, pe_sl);
                        //////////////////////////////////// PE ROLL OUT //////////////////////////////////
                        if (pe_ltp >= pe_sl) {
                            let pe_sl_counter = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabSLCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'];
                            console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + ' Counter-SL PE: ', key, pe_ltp, pe_sl, pe_sl_counter);
                            if (pe_sl_counter >= _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.secsToWaitForSL) {
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabSLCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = 0;
                                let new_pe_strike = pe_strike - (_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.strike_diff[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade] * _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.rolloutStrikeMultiple);
                                let new_pe = new_pe_strike + 'PE';
                                if (this.algoSimulated) {
                                    let new_pe_ltp = this.getLTP(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade, new_pe, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade);
                                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = new_pe_strike;
                                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = new_pe_ltp; // TODO: find from COMPLETE order_id
                                    this.addPosition(-_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key], pe_strike + 'PE', pe_ltp, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade);
                                    this.addPosition(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key], new_pe, new_pe_ltp, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade);
                                    this.recreateAlgoPos();
                                    this.savePositions(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.algoStrategyNum, false);
                                    this.addToAlgoLog('Exit - Slab ' + key + ' - ' + pe_strike + 'PE - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - ' + pe_ltp);
                                    this.addToAlgoLog('Rollout - Slab ' + key + ' - ' + new_pe + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - ' + new_pe_ltp);
                                }
                                else {
                                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = '';
                                    _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = null;
                                    this.executeAlgoOrder(key, pe_strike + 'PE', new_pe, 'PE');
                                    this.addToAlgoLog('Exit - Slab ' + key + ' - ' + pe_strike + 'PE - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]);
                                    this.addToAlgoLog('Rollout - Slab ' + key + ' - ' + new_pe + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]);
                                }
                            }
                            else {
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabSLCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = pe_sl_counter + 1;
                            }
                        }
                        else {
                            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabSLCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = 0;
                        }
                        //////////////////////////////////// PE ROLL IN //////////////////////////////////
                        if (pe_ltp <= pe_rollin || pe_ltp < 1) {
                            let pe_rollin_counter = _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabRollInCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'];
                            console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + ' Counter-RI PE: ', key, pe_ltp, pe_rollin, pe_rollin_counter);
                            if (pe_rollin_counter >= _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.secsToWaitForSL) {
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabRollInCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = 0;
                                let new_pe_strike = pe_strike + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.strike_diff[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade];
                                if (this.isMinDist(new_pe_strike)) {
                                    let new_pe = new_pe_strike + 'PE';
                                    if (this.algoSimulated) {
                                        let new_pe_ltp = this.getLTP(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade, new_pe, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade);
                                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = new_pe_strike;
                                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = new_pe_ltp; // TODO: find from COMPLETE order_id
                                        this.addPosition(-_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key], pe_strike + 'PE', pe_ltp, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade);
                                        this.addPosition(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key], new_pe, new_pe_ltp, _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.expiryDateToTrade);
                                        this.recreateAlgoPos();
                                        this.savePositions(_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.algoStrategyNum, false);
                                        this.addToAlgoLog('Exit - Slab ' + key + ' - ' + pe_strike + 'PE - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - ' + pe_ltp);
                                        this.addToAlgoLog('Rollin - Slab ' + key + ' - ' + new_pe + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key] + ' - ' + new_pe_ltp);
                                    }
                                    else {
                                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabStrikes[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = '';
                                        _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabCurrEntryPrice[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = null;
                                        this.executeAlgoOrder(key, pe_strike + 'PE', new_pe, 'PE');
                                        this.addToAlgoLog('Exit - Slab ' + key + ' - ' + pe_strike + 'PE - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]);
                                        this.addToAlgoLog('Rollin - Slab ' + key + ' - ' + new_pe + ' - ' + _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabQty[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]);
                                    }
                                }
                                else {
                                    console.log('ALGO ' + new Date().toLocaleTimeString() + ' - ' + ' Cannot Roll In PE due to min. distance', key);
                                }
                            }
                            else {
                                _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabRollInCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = pe_rollin_counter + 1;
                            }
                        }
                        else {
                            _common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.slabRollInCounter[_common_application_constant__WEBPACK_IMPORTED_MODULE_2__.AppConstants.instruToTrade][key]['PE'] = 0;
                        }
                    }
                }
            }
        }, 1000); // every second
    }
}
ChartComponent.ɵfac = function ChartComponent_Factory(t) { return new (t || ChartComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_app_service__WEBPACK_IMPORTED_MODULE_4__.AppService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_common_zerodha_service__WEBPACK_IMPORTED_MODULE_5__.ZerodhaService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_common_websocket_service__WEBPACK_IMPORTED_MODULE_6__.WebsocketService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_common_angelwebsocket_service__WEBPACK_IMPORTED_MODULE_7__.AngelWebsocketService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_chart_service__WEBPACK_IMPORTED_MODULE_8__.ChartService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_charting_service__WEBPACK_IMPORTED_MODULE_9__.ChartingService), _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdirectiveInject"](_backtest_service__WEBPACK_IMPORTED_MODULE_10__.BacktestService)); };
ChartComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵdefineComponent"]({ type: ChartComponent, selectors: [["app-chart"]], viewQuery: function ChartComponent_Query(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵviewQuery"](ng2_charts__WEBPACK_IMPORTED_MODULE_13__.BaseChartDirective, 7);
    } if (rf & 2) {
        let _t;
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵqueryRefresh"](_t = _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵloadQuery"]()) && (ctx.chart = _t.first);
    } }, decls: 333, vars: 115, consts: [["id", "accordionPayoff", 1, "accordion", "mb-2"], [1, "accordion-item"], ["id", "headingOne", 1, "accordion-header"], ["type", "button", "data-bs-toggle", "collapse", "data-bs-target", "#payOffSection", "aria-expanded", "true", "aria-controls", "payOffSection", 1, "accordion-button", "fw-bold"], ["id", "payOffSection", "aria-labelledby", "headingOne", "data-bs-parent", "#accordionPayoff", 1, "accordion-collapse", "collapse", "show", "p-2"], [1, "chart-all-strategies-pnl", "text-center"], [1, "d-inline-block"], [1, "mb-2"], [1, "fw-bold", 3, "ngClass"], ["placeholder", "< Alert Price", "type", "number", 1, "ms-4", "me-2", "form-control", "form-control-sm", "strategy_alert_field", 3, "ngModel", "ngModelChange"], [1, "text-danger"], [1, "d-inline-block", "ps-4", "pe-4"], [2, "display", "flex", "justify-content", "space-between"], [1, "chart-flex-container"], [1, "chart-positions"], ["id", "algo-container"], [1, "form-check", "form-check-inline"], ["type", "checkbox", "value", "", "id", "show_algo", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "show_algo", 1, "form-check-label"], ["class", "d-inline", 4, "ngIf"], [4, "ngIf"], [1, "form-check", "form-check-inline", "use-hypo-future-class", 2, "padding-left", "0"], ["for", "use-range", 1, "form-check-label"], ["id", "use-range", "type", "number", "placeholder", "Payoff Range", 1, "ms-2", "form-control", "form-control-sm", 2, "width", "100px", "display", "inline-block", 3, "ngModel", "ngModelChange"], [1, "form-check", "form-check-inline", "use-hypo-future-class"], ["type", "checkbox", "value", "", "id", "hide-closed", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "hide-closed", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "show_t0", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "show_t0", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "hide-roll", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "hide-roll", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "hide-extra", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "hide-extra", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "show-multit0", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "show-multit0", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "simulate_strategy", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "simulate_strategy", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "showInlineOC", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "showInlineOC", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "showExtraOptions", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "showExtraOptions", 1, "form-check-label"], ["class", "mb-2", 4, "ngIf"], ["class", "text-success", 4, "ngIf"], ["class", "text-danger", 4, "ngIf"], [1, "strategy_instru", "form-select", "form-select-sm", "me-2", 3, "ngModel", "ngModelChange"], [3, "value", 4, "ngFor", "ngForOf"], ["placeholder", "Expiry YYYY-MM-DD", "id", "payOffExpiry", 1, "mb-1", "me-3", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "mb-1", "me-2", 3, "click"], ["type", "checkbox", "value", "", "id", "use_cf", 1, "form-check-input", 3, "ngModel", "ngModelChange", "change"], ["for", "use_cf", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "use_tag", 1, "form-check-input", "me-1", "mt-2", 3, "ngModel", "ngModelChange", "change"], ["placeholder", "Tag", "id", "tagSearch", 1, "me-2", "form-control", "form-control-sm", "d-inline-block", 2, "width", "200px", 3, "ngModel", "ngModelChange"], ["type", "checkbox", "value", "", "id", "use_include_guid", 1, "form-check-input", "me-1", "mt-2", 3, "ngModel", "ngModelChange", "change"], ["type", "text", "id", "includeGUIDs", "placeholder", "Include GUIDs", 1, "form-control", "form-control-sm", "d-inline-block", "me-2", 2, "width", "400px", 3, "ngModel", "ngModelChange"], ["type", "checkbox", "value", "", "id", "use_exclude_guid", 1, "form-check-input", "me-1", "mt-2", 3, "ngModel", "ngModelChange", "change"], ["type", "text", "id", "excludeGUIDs", "placeholder", "Exclude GUIDs", 1, "form-control", "form-control-sm", "d-inline-block", 2, "width", "400px", 3, "ngModel", "ngModelChange"], [1, "table", "table-sm", "table-bordered", "shadow", "text-center"], [3, "ngClass", 4, "ngFor", "ngForOf"], ["class", "table table-sm table-bordered shadow text-center", 4, "ngIf"], ["class", "chart-chart", 4, "ngIf"], [2, "display", "flex"], [1, "form-select", "form-select-sm", "d-inline-block", "mb-2", "me-2", 2, "width", "120px", 3, "ngModel", "ngModelChange", "change"], ["type", "checkbox", "value", "", "id", "expand_single_charts", 1, "form-check-input", 3, "ngModel", "change", "ngModelChange"], ["for", "expand_single_charts", 1, "form-check-label"], [2, "display", "flex", "flex-wrap", "wrap"], ["id", "spot-chart", 1, "opt_chart", "me-4"], [1, "d-flex"], ["id", "chart-ce", 1, "opt_chart", "me-4"], [1, "chart-legend"], [1, "chart-legend-qty"], ["id", "chart-pe", 1, "opt_chart", "me-4"], [1, "ms-2"], ["type", "checkbox", "value", "", "id", "add_strangle_chart", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "add_strangle_chart", 1, "form-check-label"], ["placeholder", "Scrip 1", 1, "me-3", "form-control", "form-control-sm", 2, "display", "inline-block", "width", "80px", 3, "ngModel", "ngModelChange"], ["placeholder", "Scrip 2", 1, "me-3", "form-control", "form-control-sm", 2, "display", "inline-block", "width", "80px", 3, "ngModel", "ngModelChange"], ["class", "form-check form-check-inline use-hypo-future-class", 4, "ngIf"], ["type", "button", 1, "btn", "btn-light", "btn-sm", "me-2", 3, "click"], ["class", "opt_chart me-4", "id", "spot-chart-simulate", 4, "ngIf"], ["id", "strangle-chart", 1, "opt_chart"], ["type", "checkbox", "value", "", "id", "show_news", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "show_news", 1, "form-check-label"], ["href", "https://www.google.com/search?sca_esv=556714279&rlz=1C5CHFA_enIN1013IN1013&sxsrf=AB5stBj127G0qRSDvJgWwiqXPwupGLEmJQ:1692010519401&q=moneycontrol+top+10&tbm=nws&source=univ&tbo=u&sa=X&ved=2ahUKEwjD_duv_tuAAxW9SGwGHWA5BBgQt8YBKAF6BAgNEAY&biw=1728&bih=930&dpr=2", "target", "_blank", "rel", "noopener noreferrer", 1, "me-2"], ["href", "https://www.google.com/search?q=bq+prime+all+you+need+to+know&sca_esv=558740822&rlz=1C5CHFA_enIN1013IN1013&biw=1728&bih=930&tbm=nws&sxsrf=AB5stBiwZOAWiIkwVU-a2ny8zymQqmhjEQ%3A1692620043930&ei=C1XjZKi3OIuV-AaN0qyIBg&ved=0ahUKEwjo6NSD3e2AAxWLCt4KHQ0pC2EQ4dUDCA0&uact=5&oq=bq+prime+all+you+need+to+know&gs_lp=Egxnd3Mtd2l6LW5ld3MiHWJxIHByaW1lIGFsbCB5b3UgbmVlZCB0byBrbm93MgUQABiABDIIEAAYigUYhgMyCBAAGIoFGIYDMggQABiKBRiGA0jAC1COCViOCXAAeACQAQCYAXmgAe0BqgEDMC4yuAEDyAEA-AEBwgIHEAAYgAQYCogGAQ&sclient=gws-wiz-news", "target", "_blank", "rel", "noopener noreferrer", 1, "me-2"], ["href", "https://www.cnbctv18.com/live-tv/", "target", "_blank", "rel", "noopener noreferrer", 1, "me-2"], ["class", "opt-charts-parent-0", 4, "ngIf"], [1, "opt-charts-parent"], [1, "form-select", "form-select-sm", "me-2", "charts-inputs", 3, "ngModel", "ngModelChange", "change"], ["placeholder", "Expiry", 1, "charts-inputs", "mb-1", "me-3", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["placeholder", "Call Lower", 1, "charts-inputs", "mb-1", "me-3", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["placeholder", "Call Higher", 1, "charts-inputs", "mb-1", "me-3", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["placeholder", "Put Lower", 1, "charts-inputs", "mb-1", "me-3", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["placeholder", "Put Higher", 1, "charts-inputs", "mb-1", "me-3", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["placeholder", "Multiple", 1, "charts-inputs", "mb-1", "me-3", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], [1, "charts-heading", 2, "color", "green"], [1, "opt_chart_wrapper_parent"], ["class", "opt_chart_wrapper", 3, "click", 4, "ngFor", "ngForOf"], [2, "margin", "0"], [1, "charts-heading", 2, "color", "red"], ["id", "accordionKnife", 1, "accordion", "mb-2"], ["type", "button", "data-bs-toggle", "collapse", "data-bs-target", "#knifeSection", "aria-expanded", "false", "aria-controls", "knifeSection", 1, "accordion-button", "fw-bold"], ["id", "knifeSection", "aria-labelledby", "headingOne", "data-bs-parent", "#accordionKnife", 1, "accordion-collapse", "collapse", "p-2"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "me-4", 3, "click"], ["type", "checkbox", "value", "", "id", "auto_adjust_knife", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "auto_adjust_knife", 1, "form-check-label"], [1, "table", "table-sm", "table-bordered", "shadow", "text-center", 2, "max-width", "1000px"], [1, "table-light"], ["scope", "col"], [4, "ngFor", "ngForOf"], ["id", "accordionAlerts", 1, "accordion", "mb-2"], ["type", "button", "data-bs-toggle", "collapse", "data-bs-target", "#alertsSection", "aria-expanded", "false", "aria-controls", "alertsSection", 1, "accordion-button", "collapsed", "fw-bold"], ["id", "alertsSection", "aria-labelledby", "headingOne", "data-bs-parent", "#accordionAlerts", 1, "accordion-collapse", "collapse", "p-2"], ["class", "alerts-flex-container", 4, "ngFor", "ngForOf"], ["type", "button", 1, "btn", "btn-link", 3, "click"], ["id", "accordionOrders", 1, "accordion", "mb-2"], ["type", "button", "data-bs-toggle", "collapse", "data-bs-target", "#ordersSection", "aria-expanded", "false", "aria-controls", "ordersSection", 1, "accordion-button", "collapsed", "fw-bold"], ["id", "ordersSection", "aria-labelledby", "headingOne", "data-bs-parent", "#accordionOrders", 1, "accordion-collapse", "collapse", "p-2"], [1, "place_multi_orders"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", "me-1", 3, "click"], ["class", "accordion mb-2", "id", "accordionStraddle", 4, "ngIf"], ["class", "accordion", "id", "accordionCharts", 4, "ngIf"], [1, "d-inline"], [1, "algo_params", "d-inline"], ["type", "checkbox", "value", "", "id", "algoSimulated", "disabled", "", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "algoSimulated", 1, "form-check-label"], ["type", "button", "class", "btn btn-outline-primary btn-sm me-2", 3, "click", 4, "ngIf"], ["placeholder", "Expiry YYYY-MM-DD", "id", "payOffExpiry", 1, "me-2", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "btn-outline-primary", "btn-sm", "me-2", 3, "click"], [3, "value"], [1, "mt-2"], ["readonly", "", 2, "width", "100%", "height", "300px", 3, "ngModel", "ngModelChange"], ["scope", "col", 1, "width80"], [1, "width80"], ["type", "checkbox", "value", "", "id", "hide-payoff", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "hide-payoff", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "use-hypo-future", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "use-hypo-future", 1, "form-check-label"], ["type", "number", "placeholder", "Closest Strike", 1, "ms-2", "form-control", "form-control-sm", 2, "width", "80px", "display", "inline-block", 3, "ngModel", "ngModelChange"], ["type", "checkbox", "value", "", "id", "hide-roll3", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "hide-roll3", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "ce_side_overlay", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "ce_side_overlay", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "pe_side_overlay", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "pe_side_overlay", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "straddle_shiftCE_overlay", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "straddle_shiftCE_overlay", 1, "form-check-label"], ["type", "checkbox", "value", "", "id", "straddle_shiftPE_overlay", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "straddle_shiftPE_overlay", 1, "form-check-label"], ["type", "number", "placeholder", "Straddle Qty", 1, "me-3", "form-control", "form-control-sm", 2, "width", "100px", "display", "inline-block", 3, "ngModel", "ngModelChange"], ["type", "checkbox", "value", "", "id", "payoff_overlay", 1, "form-check-input", 3, "ngModel", "ngModelChange", "change"], ["for", "payoff_overlay", 1, "form-check-label"], ["type", "number", "placeholder", "Overlay strike", 1, "ms-2", "form-control", "form-control-sm", 2, "width", "100px", "display", "inline-block", 3, "ngModel", "ngModelChange"], [1, "strategy_instru", "form-select", "form-select-sm", "me-2", 3, "ngModel", "ngModelChange", "change"], ["placeholder", "Expiry YYYY-MM-DD", 1, "simulateDate", "mb-1", "me-3", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["placeholder", "Start YYYY-MM-DD", 1, "simulateDate", "mb-1", "me-3", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "btn", "btn-light", "btn-sm", "me-1", 3, "click"], [1, "form-check-inline", "use-hypo-future-class"], ["type", "checkbox", "value", "", "id", "show_simulate_charts", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "show_simulate_charts", 1, "form-check-label"], ["type", "file", "name", "File Upload Expiry", "accept", ".csv", 2, "display", "none", 3, "change"], ["fileImportInputExpiry", ""], [1, "text-success"], [3, "ngClass"], [1, "width32"], [1, "form-check-inline", "posCheckbox"], ["type", "checkbox", "value", "", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange"], [1, "width160"], [2, "display", "flex", "align-items", "center"], ["type", "number", "placeholder", "Qty", 1, "form-control", "form-control-sm", "me-1", 3, "step", "ngModel", "ngClass", "ngModelChange"], ["type", "number", "placeholder", "Roll Qty", 1, "form-control", "form-control-sm", 3, "step", "ngModel", "ngClass", "ngModelChange"], [1, "fw-bold", "width48", 2, "padding-top", "8px"], ["type", "number", "placeholder", "Entry", 1, "form-control", "form-control-sm", 2, "max-width", "80px !important", 3, "ngModel", "ngModelChange"], [1, "nostretch"], ["placeholder", "Scrip 11500CE", 1, "form-control", "form-control-sm", "me-2", "width80", 3, "ngModel", "ngModelChange"], [2, "display", "inline-block", "width", "60px"], ["type", "button", "class", "btn btn-link", 3, "click", 4, "ngIf"], ["type", "button", "class", "btn btn-link red", 3, "click", 4, "ngIf"], ["class", "nostretch", 4, "ngIf"], ["class", "width110", 4, "ngIf"], ["class", "width80", 4, "ngIf"], ["style", "text-align: left;", 4, "ngIf"], [1, ""], ["type", "number", "placeholder", "> Alert", 1, "form-control", "form-control-sm", "d-inline-block", "width80", 3, "ngModel", "ngModelChange"], [1, "text-danger", "ms-2"], ["type", "checkbox", "value", "", 1, "form-check-input", "me-1", 3, "ngModel", "disabled", "ngModelChange"], ["type", "checkbox", "value", "", 1, "form-check-input", 3, "ngModel", "disabled", "ngModelChange"], ["type", "button", 1, "btn", "btn-link", "red", 3, "click"], ["type", "radio", 1, "form-check-input", 3, "name", "id", "value", "ngModel", "ngModelChange"], [1, "form-check-label", 3, "for"], ["placeholder", "Scrip 11500CE", 1, "form-control", "form-control-sm", "me-2", "width80", 3, "ngModel", "ngModelChange", "keyup"], [1, "width110"], ["placeholder", "Expiry 01OCT2020", 1, "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["type", "number", "placeholder", "Exit", 1, "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], [2, "text-align", "left"], ["type", "button", 1, "btn", "btn-light", "btn-sm", 3, "click"], ["scope", "col", 1, "width32"], ["scope", "col", 1, "nostretch"], ["type", "number", "placeholder", "Qty", 1, "form-control", "form-control-sm", 3, "step", "ngModel", "ngClass", "ngModelChange"], ["placeholder", "11500CE", 1, "form-control", "form-control-sm", "me-2", "width80", 3, "ngModel", "ngModelChange"], ["type", "number", "placeholder", "Price", 1, "form-control", "form-control-sm", "me-1", 2, "max-width", "80px !important", 3, "ngModel", "ngModelChange"], ["type", "number", "placeholder", "Trigger Price", 1, "form-control", "form-control-sm", 2, "max-width", "80px !important", 3, "ngModel", "ngModelChange"], ["style", "display: flex; align-items: center;", 4, "ngIf"], [1, "width32", 2, "text-align", "left"], ["type", "button", "class", "btn btn-light btn-sm", 3, "click", 4, "ngIf"], [1, "chart-chart"], [2, "min-width", "600px", "max-width", "600px", "margin-right", "20px"], ["baseChart", "", "width", "2", "height", "1", 3, "datasets", "labels", "options", "colors", "legend", "chartType", "plugins"], [2, "min-width", "450px"], [1, "mt-1", "mb-2"], [1, "me-4", "strategy_alert_field"], ["placeholder", "> Alert Price", "type", "number", 1, "me-2", "form-control", "form-control-sm", "strategy_alert_field", 3, "ngModel", "ngModelChange"], [1, "mt-2", "mb-2", "fw-bold"], [2, "display", "inline-block", "width", "200px"], [2, "font-weight", "normal"], [2, "margin-right", "20px"], [1, "me-3", 2, "display", "inline-block"], ["type", "file", "name", "File Upload 1", "accept", ".csv", 2, "display", "none", 3, "change"], ["fileImportInput1", ""], ["href", "assets/flyrr.png", "target", "_blank", "rel", "noopener noreferrer"], [1, "mt-1"], ["type", "checkbox", "value", "", "id", "strangle_chart_simulate_tillend", 1, "form-check-input", 3, "ngModel", "ngModelChange"], ["for", "strangle_chart_simulate_tillend", 1, "form-check-label"], ["id", "spot-chart-simulate", 1, "opt_chart", "me-4"], [2, "width", "268px"], ["placeholder", "Higher", 1, "mb-1", "me-2", "form-control", "form-control-sm", "ocInputs", 3, "ngModel", "ngModelChange"], ["placeholder", "Lower", 1, "mb-1", "me-2", "form-control", "form-control-sm", "ocInputs", 3, "ngModel", "ngModelChange"], ["type", "button", 1, "mb-1", "me-2", "btn", "btn-light", "btn-sm", 3, "click"], ["placeholder", "Qty", "type", "number", 1, "mb-1", "form-control", "form-control-sm", "ocInputs", 3, "ngModel", "ngModelChange"], [1, "table", "table-sm", "table-bordered", "shadow", "mb-0", "text-center"], ["scope", "col", 1, "oc-col"], ["scope", "col", 1, "text-center"], [2, "position", "relative", 3, "ngClass"], [1, "cursor-pointer", 2, "position", "absolute", "left", "4px", "font-size", "14px", "transform", "rotateX(180deg) rotate(-20deg)", 3, "click"], [1, "cursor-pointer", 2, "position", "absolute", "right", "4px", "top", "-5px", "font-size", "24px", 3, "click"], [1, "cursor-pointer", "text-primary", "fw-bold", 3, "click"], ["class", "ocStrategyStrikeQty fw-bold", 4, "ngIf"], [1, "fw-bold", "text-center", 3, "ngClass"], ["class", "ocStrategyStrikeQty oc-strike-spot", 4, "ngIf"], ["style", "color: orange;", 4, "ngIf"], [1, "cursor-pointer", 2, "position", "absolute", "right", "4px", "font-size", "14px", "transform", "rotateX(180deg) rotate(-20deg)", 3, "click"], [1, "cursor-pointer", 2, "position", "absolute", "left", "4px", "top", "-5px", "font-size", "24px", 3, "click"], [1, "ocStrategyStrikeQty", "fw-bold"], [1, "ocStrategyStrikeQty", "oc-strike-spot"], [2, "color", "orange"], ["height", "800", "width", "100%", "src", "https://pulse.zerodha.com/"], [1, "chart-finchart"], [1, "opt-charts-parent-0"], [1, "me-4"], [1, "form-check-inline", "mt-0"], ["type", "radio", "value", "5min", "id", "5min", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange"], ["for", "5min", 1, "form-check-label"], ["type", "radio", "value", "1min", "id", "1min", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange"], ["for", "1min", 1, "form-check-label"], ["type", "button", "title", "Charts of ST 10 2 for 40 premiums whenever ST breach. Also prints ST entry exit and strangle 25 fullday entry exit in console", 1, "btn", "btn-secondary", "btn-sm", "mb-1", "me-2", 3, "click"], ["class", "opt_chart_wrapper-0", 4, "ngFor", "ngForOf"], [1, "opt_chart_wrapper-0"], [1, "opt_chart-0", 3, "id"], [1, "chart-legend-0"], [1, "chart-legend-values"], ["type", "radio", "value", "10_2", "id", "st102", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange"], ["for", "st102", 1, "form-check-label"], ["type", "radio", "value", "7_3", "id", "st73", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange"], ["for", "st73", 1, "form-check-label"], ["type", "radio", "value", "both", "id", "stBoth", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange"], ["for", "stBoth", 1, "form-check-label"], ["placeholder", "0", 1, "form-control", "form-control-sm", "me-2", "mb-2", "width80", "d-inline", 3, "ngModel", "ngModelChange"], [1, "opt_chart-0", 2, "width", "320px", "height", "240px", "background-color", "grey", 3, "id"], [1, "opt_chart_wrapper", 3, "click"], [1, "opt_chart", 3, "id", "ngClass"], [1, "alerts-flex-container"], [1, "form-check-inline"], ["type", "checkbox", "value", "", 1, "form-check-input", 3, "ngModel", "ngModelChange"], [1, "alert_field", "form-select", "form-select-sm", "me-2", 3, "ngModel", "ngModelChange"], ["placeholder", "Scrip1", 1, "me-2", "mb-1", "form-control", "form-control-sm", "alert_field", 3, "ngModel", "ngModelChange"], ["placeholder", "Scrip2", 1, "me-2", "mb-1", "form-control", "form-control-sm", "alert_field", 3, "ngModel", "ngModelChange"], ["placeholder", "Expiry YYYY-MM-DD", 1, "me-2", "mb-1", "form-control", "form-control-sm", "alert_field", 3, "ngModel", "ngModelChange"], ["value", ">"], ["value", "<"], ["placeholder", "Price", "type", "number", 1, "me-2", "mb-1", "form-control", "form-control-sm", "alert_field", 3, "ngModel", "ngModelChange"], ["rows", "5", 2, "width", "100%", 3, "ngModel", "ngModelChange"], [1, "confirmation-check", "form-check-inline", "mt-0"], ["type", "radio", "value", "upstox", "id", "upstox_orders", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange"], ["for", "upstox_orders", 1, "form-check-label"], ["type", "radio", "value", "zerodha", "id", "zerodha_orders", 1, "form-check-input", "me-1", 3, "ngModel", "ngModelChange"], ["for", "zerodha_orders", 1, "form-check-label"], ["type", "button", 1, "btn", "btn-secondary", "btn-sm", 2, "margin-top", "-7px", 3, "click"], [1, "form-select", "form-select-sm", "me-2", 2, "width", "120px", "display", "inline-block", 3, "ngModel", "ngModelChange"], ["id", "place_expiry_date", "placeholder", "place_expiry_date", 1, "form-control", "me-2", 2, "width", "120px", "display", "inline-block", 3, "ngModel", "ngModelChange"], ["id", "place_qty", "placeholder", "qty", 1, "form-control", "fw-bold", "me-2", 2, "width", "120px", "display", "inline-block", 3, "ngClass", "ngModel", "ngModelChange"], ["id", "curr_pos", "placeholder", "curr_pos", 1, "form-control", "fw-bold", "me-1", 2, "width", "120px", "display", "inline-block", 3, "ngClass", "ngModel", "ngModelChange"], [2, "text-align", "left", "font-size", "10px", 3, "ngClass"], ["style", "color: orange; font-weight: bold; margin-left: 4px;", 4, "ngIf"], [1, "me-2", 2, "display", "inline-block"], ["id", "new_pos", "placeholder", "new_pos", 1, "form-control", "fw-bold", "me-1", 2, "width", "120px", "display", "inline-block", 3, "ngClass", "ngModel", "ngModelChange"], [2, "color", "orange", "font-weight", "bold", "margin-left", "4px"], ["id", "accordionStraddle", 1, "accordion", "mb-2"], ["type", "button", "data-bs-toggle", "collapse", "data-bs-target", "#straddleSection", "aria-expanded", "true", "aria-controls", "straddleSection", 1, "accordion-button", "collapsed", "fw-bold"], ["id", "straddleSection", "aria-labelledby", "headingOne", "data-bs-parent", "#accordionStraddle", 1, "accordion-collapse", "collapse", "p-2"], ["placeholder", "Expiry YYYY-MM-DD", "id", "payOffExpiry", 1, "me-2", "mb-1", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["placeholder", "Scrip", "id", "payOffExpiry", 1, "mb-1", "form-control", "form-control-sm", 3, "ngModel", "ngModelChange"], ["id", "accordionCharts", 1, "accordion"], ["type", "button", "data-toggle", "collapse", "data-target", "#chartsSection", "aria-expanded", "true", "aria-controls", "chartsSection", 1, "accordion-button", "collapsed", "fw-bold"], ["id", "chartsSection", "aria-labelledby", "headingOne", "data-parent", "#accordionCharts", 1, "accordion-collapse", "collapse", "p-2"], ["height", "600", "width", "760", "src", "https://ssltvc.forexprostools.com/?pair_ID=8985&height=600&width=760&interval=300&plotStyle=candles&domain_ID=56&lang_ID=56&timezone_ID=20"], ["height", "600", "width", "760", "src", "https://ssltvc.forexprostools.com/?pair_ID=160&height=600&width=760&interval=300&plotStyle=candles&domain_ID=56&lang_ID=56&timezone_ID=20"]], template: function ChartComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](1, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](2, "h2", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](3, "button", 3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](4, " Strategy Payoff ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](5, "div", 4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](6, "div", 5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](7, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](8, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](9, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](10, " Strategy 1: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](11, "span", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](12);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](13, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](14, "input", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_14_listener($event) { return ctx.strategyAlertPrice1 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](15, "span", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](16);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](17, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](18, "|");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](19, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](20, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](21, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](22, " Strategy 2: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](23, "span", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](25, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](26, "input", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_26_listener($event) { return ctx.strategyAlertPrice2 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](27, "span", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](28);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](29, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](30, "|");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](31, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](32, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](33, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](34, " Strategy 3: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](35, "span", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](36);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](37, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](38, "input", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_38_listener($event) { return ctx.strategyAlertPrice3 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](39, "span", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](40);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](41, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](42, "|");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](43, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](44, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](45, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](46, " Strategy 4: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](47, "span", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](48);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](49, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](50, "input", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_50_listener($event) { return ctx.strategyAlertPrice4 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](51, "span", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](52);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](53, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](54, "|");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](55, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](56, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](57, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](58, " Strategy 5: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](59, "span", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](60);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](61, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](62, "input", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_62_listener($event) { return ctx.strategyAlertPrice5 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](63, "span", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](64);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](65, "div", 11);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](66, "|");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](67, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](68, "div", 6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](69, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](70, " Strategy 6: ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](71, "span", 8);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](72);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](73, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](74, "input", 9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_74_listener($event) { return ctx.strategyAlertPrice6 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](75, "span", 10);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](76);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](77, "hr");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](78, "div", 12);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](79, "div", 13);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](80, "div", 14);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](81, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](82, "div", 15);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](83, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](84, "input", 17);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_84_listener($event) { return ctx.show_algo = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](85, "label", 18);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](86, "Algo");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](87, ChartComponent_div_87_Template, 11, 6, "div", 19);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](88, ChartComponent_div_88_Template, 21, 2, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](89, "div", 21);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](90, "label", 22);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](91, "Range");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](92, "input", 23);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_92_listener($event) { return ctx.payoff_range = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](93, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](94, "input", 25);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_94_listener($event) { return ctx.hide_closed = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](95, "label", 26);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](96, "Hide Closed");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](97, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](98, "input", 27);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_98_listener($event) { return ctx.show_t0 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](99, "label", 28);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](100, "Show T+0");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](101, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](102, "input", 29);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_102_listener($event) { return ctx.hide_roll = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](103, "label", 30);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](104, "Hide Roll");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](105, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](106, "input", 31);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_106_listener($event) { return ctx.hide_extra = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](107, "label", 32);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](108, "Hide Extra");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](109, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](110, "input", 33);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_110_listener($event) { return ctx.multi_t0 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](111, "label", 34);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](112, "Multi T+0");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](113, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](114, "input", 35);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_114_listener($event) { return ctx.simulate_strategy = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](115, "label", 36);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](116, "Simulate Strategy");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](117, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](118, "input", 37);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_118_listener($event) { return ctx.showInlineOC = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](119, "label", 38);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](120, "Option Chain");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](121, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](122, "input", 39);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_122_listener($event) { return ctx.showExtraOptions = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](123, "label", 40);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](124, "Extra Options");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](125, ChartComponent_div_125_Template, 36, 11, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](126, ChartComponent_div_126_Template, 33, 8, "div", 41);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](127, "div", 7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](128);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](129, ChartComponent_span_129_Template, 2, 0, "span", 42);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](130, ChartComponent_span_130_Template, 2, 0, "span", 43);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](131, "select", 44);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_select_ngModelChange_131_listener($event) { return ctx.instru = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](132, ChartComponent_option_132_Template, 2, 2, "option", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](133, "input", 46);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_133_listener($event) { return ctx.expiryDate = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](134, "button", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_134_listener() { return ctx.doSingleStrategySubscription(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](135, "Refresh LTPs");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](136, "button", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_136_listener() { return ctx.loadOptionChain(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](137, "Load OC");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](138, "button", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_138_listener() { return ctx.addPlaceOrders(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](139, "+ Place Orders");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](140, "button", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_140_listener() { return ctx.exitPositions(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](141, "Exit");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](142, "button", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_142_listener() { return ctx.saveAsCF(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](143, "Save CF");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](144, "button", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_144_listener() { return ctx.removeCF(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](145, "Remove CF");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](146, "div", 16);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](147, "input", 48);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_147_listener($event) { return ctx.use_cf = $event; })("change", function ChartComponent_Template_input_change_147_listener($event) { return ctx.use_cf_change($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](148, "label", 49);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](149, "Use CF");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](150, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](151, "button", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_151_listener() { return ctx.refreshPositions(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](152, "Refresh");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](153, "input", 50);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_153_listener($event) { return ctx.use_tag = $event; })("change", function ChartComponent_Template_input_change_153_listener($event) { return ctx.use_tag_change($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](154, "input", 51);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_154_listener($event) { return ctx.tagSearch = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](155, "input", 52);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_155_listener($event) { return ctx.use_include_guid = $event; })("change", function ChartComponent_Template_input_change_155_listener($event) { return ctx.use_include_guid_change($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](156, "input", 53);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_156_listener($event) { return ctx.includeGUIDs = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](157, "input", 54);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_157_listener($event) { return ctx.use_exclude_guid = $event; })("change", function ChartComponent_Template_input_change_157_listener($event) { return ctx.use_exclude_guid_change($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](158, "input", 55);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_158_listener($event) { return ctx.excludeGUIDs = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](159, "table", 56);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](160, "tbody");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](161, ChartComponent_tr_161_Template, 32, 37, "tr", 57);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](162, ChartComponent_table_162_Template, 17, 1, "table", 58);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](163, ChartComponent_div_163_Template, 88, 23, "div", 59);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](164, "div", 60);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](165, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](166, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](167, "select", 61);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_select_ngModelChange_167_listener($event) { return ctx.spot_chart_instru = $event; })("change", function ChartComponent_Template_select_change_167_listener($event) { return ctx.onSpotChartInstruChange($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](168, ChartComponent_option_168_Template, 2, 2, "option", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](169, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](170, "input", 62);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("change", function ChartComponent_Template_input_change_170_listener($event) { return ctx.expandSingleChartsChange($event); })("ngModelChange", function ChartComponent_Template_input_ngModelChange_170_listener($event) { return ctx.expand_single_charts = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](171, "label", 63);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](172, "Expand");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](173, "div", 64);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](174, "div", 65);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](175, "div", 66);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](176, "div", 67);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](177, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](178);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](179, "div", 69);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](180);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](181, "div", 70);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](182, "div", 68);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](183);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](184, "div", 69);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](185);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](186, "div", 71);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](187, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](188, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](189, "input", 72);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_189_listener($event) { return ctx.add_strangle_chart = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](190, "label", 73);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](191, "Add to strangle");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](192, "input", 74);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_192_listener($event) { return ctx.strangle_chart_ce = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](193, "input", 75);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_193_listener($event) { return ctx.strangle_chart_pe = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](194, ChartComponent_div_194_Template, 4, 1, "div", 76);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](195, "button", 77);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_195_listener() { return ctx.update_strangle_chart(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](196, "\u2713");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](197, ChartComponent_span_197_Template, 2, 2, "span", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](198, "div", 66);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](199, ChartComponent_div_199_Template, 3, 1, "div", 78);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](200, "div", 79);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](201, ChartComponent_div_201_Template, 18, 4, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](202, "hr");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](203, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](204, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](205, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](206, "input", 80);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_206_listener($event) { return ctx.show_news = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](207, "label", 81);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](208, "Show News");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](209, "a", 82);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](210, "mc");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](211, "a", 83);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](212, "bqprime");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](213, "a", 84);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](214, "live-tv");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](215, ChartComponent_div_215_Template, 2, 0, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](216, ChartComponent_div_216_Template, 9, 21, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](217, ChartComponent_div_217_Template, 24, 0, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](218, ChartComponent_app_stock_chart_218_Template, 1, 0, "app-stock-chart", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](219, ChartComponent_div_219_Template, 22, 5, "div", 85);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](220, ChartComponent_div_220_Template, 25, 10, "div", 85);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](221, "div", 86);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](222, "select", 87);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_select_ngModelChange_222_listener($event) { return ctx.charts_instru = $event; })("change", function ChartComponent_Template_select_change_222_listener($event) { return ctx.onChartInstruChange($event); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](223, ChartComponent_option_223_Template, 2, 2, "option", 45);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](224, "input", 88);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_224_listener($event) { return ctx.charts_expiry = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](225, "input", 89);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_225_listener($event) { return ctx.call_start_strike = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](226, "input", 90);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_226_listener($event) { return ctx.call_end_strike = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](227, "input", 91);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_227_listener($event) { return ctx.put_start_strike = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](228, "input", 92);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_228_listener($event) { return ctx.put_end_strike = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](229, "input", 93);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_229_listener($event) { return ctx.charts_multiple = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](230, "button", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_230_listener() { return ctx.initCharts(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](231, "Init Charts");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](232, "button", 47);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_232_listener() { return ctx.onChartInstruChange(null); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](233, "Update Range");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](234, ChartComponent_span_234_Template, 2, 2, "span", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](235, "div", 94);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](236, "CALLS");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](237, "div", 95);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](238, ChartComponent_div_238_Template, 3, 1, "div", 78);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](239, ChartComponent_div_239_Template, 6, 7, "div", 96);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](240, "hr", 97);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](241, "div", 98);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](242, "PUTS");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](243, "div", 95);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](244, ChartComponent_div_244_Template, 6, 7, "div", 96);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](245, "div", 99);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](246, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](247, "h2", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](248, "button", 100);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](249, " Knife Orders ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](250, "div", 101);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](251, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](252, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](253, "button", 102);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_253_listener() { return ctx.place_knife_orders(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](254, "Place All");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](255, "div", 24);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](256, "input", 103);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("ngModelChange", function ChartComponent_Template_input_ngModelChange_256_listener($event) { return ctx.auto_adjust_knife = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](257, "label", 104);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](258, "Auto adjust");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](259, "table", 105);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](260, "thead", 106);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](261, "tr");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](262, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](263, "Instru");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](264, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](265, "Expiry");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](266, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](267, "Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](268, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](269, "Scrip");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](270, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](271, "Status");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](272, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](273, "Price");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](274, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](275, "LTP");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](276, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](277, "Low");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](278, "tbody");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](279, ChartComponent_tr_279_Template, 17, 8, "tr", 108);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](280, "div", 109);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](281, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](282, "h2", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](283, "button", 110);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](284, " Alerts ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](285, "div", 111);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](286, ChartComponent_div_286_Template, 18, 10, "div", 112);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](287, "button", 113);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_287_listener() { return ctx.subscribeAlerts(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](288, "Refresh LTPs");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](289, "div", 114);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](290, "div", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](291, "h2", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](292, "button", 115);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](293, " Place Orders ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](294, "div", 116);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](295, ChartComponent_div_295_Template, 16, 4, "div", 20);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](296, "div", 117);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](297, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](298, "button", 118);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_298_listener() { return ctx.place_all_orders(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](299, "Place All");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](300, "button", 118);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_300_listener() { return ctx.reset_place_orders(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](301, "Reset");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](302, "button", 118);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_302_listener() { return ctx.add_empty_place_order(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](303, "Add");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](304, "button", 113);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_304_listener() { return ctx.subscribeOrders(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](305, "Refresh LTPs");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](306, "button", 113);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵlistener"]("click", function ChartComponent_Template_button_click_306_listener() { return ctx.refreshOILimits(); });
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](307, "Refresh OI Limits");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](308, "div");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](309);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](310, "table", 105);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](311, "thead", 106);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](312, "tr");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](313, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](314, "Instru");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](315, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](316, "Expiry");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](317, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](318, "Curr Qty");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](319, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](320, "Curr Scrip");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](321, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](322, "Curr LTP");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](323, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](324, "New Scrip");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](325, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtext"](326, "New LTP");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](327, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelement"](328, "th", 107);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementStart"](329, "tbody");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](330, ChartComponent_tr_330_Template, 32, 32, "tr", 108);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](331, ChartComponent_div_331_Template, 22, 19, "div", 119);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtemplate"](332, ChartComponent_div_332_Template, 9, 0, "div", 120);
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](11);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](95, _c2, ctx.strategyPnl1 < 0, ctx.strategyPnl1 > 0));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("", ctx.strategyPnl1, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.strategyAlertPrice1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx.strategyAlertText1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](98, _c2, ctx.strategyPnl2 < 0, ctx.strategyPnl2 > 0));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("", ctx.strategyPnl2, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.strategyAlertPrice2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx.strategyAlertText2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](101, _c2, ctx.strategyPnl3 < 0, ctx.strategyPnl3 > 0));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("", ctx.strategyPnl3, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.strategyAlertPrice3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx.strategyAlertText3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](104, _c2, ctx.strategyPnl4 < 0, ctx.strategyPnl4 > 0));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("", ctx.strategyPnl4, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.strategyAlertPrice4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx.strategyAlertText4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](107, _c2, ctx.strategyPnl5 < 0, ctx.strategyPnl5 > 0));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("", ctx.strategyPnl5, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.strategyAlertPrice5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx.strategyAlertText5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngClass", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction2"](110, _c2, ctx.strategyPnl6 < 0, ctx.strategyPnl6 > 0));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"]("", ctx.strategyPnl6, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.strategyAlertPrice6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx.strategyAlertText6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.show_algo);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.show_algo);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.show_algo);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.payoff_range);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.hide_closed);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.show_t0);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.hide_roll);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.hide_extra);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.multi_t0);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.simulate_strategy);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.showInlineOC);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.showExtraOptions);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.showExtraOptions);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.simulate_strategy === true);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" Loaded Strategy ", ctx.currLoadNum, " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.matchPositions);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx.matchPositions);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.instru);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx.supportedInstru);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.expiryDate);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](14);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.use_cf);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](6);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.use_tag);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.tagSearch);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.use_include_guid);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.includeGUIDs);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.use_exclude_guid);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.excludeGUIDs);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx.curr_positions_trades);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.sl_trades.length > 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx.hide_payoff);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.spot_chart_instru);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx.supportedInstru);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.expand_single_charts);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](8);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx.chart_ce);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx.isChartStrikeInCurrStrategy(ctx.chart_ce));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx.chart_pe);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate"](ctx.isChartStrikeInCurrStrategy(ctx.chart_pe));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.add_strangle_chart);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.strangle_chart_ce);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.strangle_chart_pe);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.simulate_strategy);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](3);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.simulate_strategy);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.simulate_strategy);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.showInlineOC);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.show_news);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.show_news);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf",  false && 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.show_simulate_charts);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.simulate_strategy);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](2);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.charts_instru);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx.supportedInstru);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.charts_expiry);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.call_start_strike);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.call_end_strike);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.put_start_strike);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.put_end_strike);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.charts_multiple);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.simulate_strategy);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](4);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", ctx.simulate_strategy);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction0"](113, _c8).constructor(ctx.num_charts));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](5);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵpureFunction0"](114, _c8).constructor(ctx.num_charts));
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](12);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngModel", ctx.auto_adjust_knife);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](23);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx.knife_orders);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](7);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx.alerts);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](9);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", !ctx.hide_clipboard);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](14);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵtextInterpolate1"](" ", ctx.getOILimits(), " ");
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](21);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngForOf", ctx.place_orders);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", false);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_12__["ɵɵproperty"]("ngIf", false);
    } }, directives: [_angular_common__WEBPACK_IMPORTED_MODULE_14__.NgClass, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.NumberValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.DefaultValueAccessor, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.NgControlStatus, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.NgModel, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.CheckboxControlValueAccessor, _angular_common__WEBPACK_IMPORTED_MODULE_14__.NgIf, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.SelectControlValueAccessor, _angular_common__WEBPACK_IMPORTED_MODULE_14__.NgForOf, _angular_forms__WEBPACK_IMPORTED_MODULE_15__.NgSelectOption, _angular_forms__WEBPACK_IMPORTED_MODULE_15__["ɵNgSelectMultipleOption"], _angular_forms__WEBPACK_IMPORTED_MODULE_15__.RadioControlValueAccessor, ng2_charts__WEBPACK_IMPORTED_MODULE_13__.BaseChartDirective, _stock_chart_stock_chart_component__WEBPACK_IMPORTED_MODULE_11__.StockChartComponent], styles: ["[_nghost-%COMP%], input[_ngcontent-%COMP%], .input-group-text[_ngcontent-%COMP%], select[_ngcontent-%COMP%], button[_ngcontent-%COMP%] {\n  font-size: 12px !important;\n}\n\n.use-hypo-future-class[_ngcontent-%COMP%] {\n  margin-bottom: 15px;\n}\n\n.chart-flex-container[_ngcontent-%COMP%] {\n  display: flex;\n  flex-wrap: wrap;\n  flex-direction: column;\n}\n\n.posCheckbox[_ngcontent-%COMP%] {\n  margin: 8px auto !important;\n  padding-left: 8px;\n}\n\n.simulateDate[_ngcontent-%COMP%] {\n  width: 20%;\n  display: inline-block;\n}\n\n.simulateTimeAdv[_ngcontent-%COMP%], .simulateTimeMins[_ngcontent-%COMP%] {\n  width: 10%;\n  display: inline-block;\n}\n\n.cursor-pointer[_ngcontent-%COMP%] {\n  cursor: pointer;\n}\n\n.ocInputs[_ngcontent-%COMP%] {\n  display: inline-block;\n  width: 70px;\n}\n\n.ocStrategyStrikeQty[_ngcontent-%COMP%] {\n  font-size: 0.6rem;\n  color: black;\n}\n\n.oc-strike[_ngcontent-%COMP%] {\n  background-color: #e9ecef;\n  width: 60px;\n}\n\n.sl-order-placed[_ngcontent-%COMP%] {\n  background-color: #e1f4ff;\n}\n\n.oc-strike-spot[_ngcontent-%COMP%] {\n  width: 60px;\n  margin: 0 auto;\n}\n\n.oc-col-actions[_ngcontent-%COMP%] {\n  width: 19rem;\n}\n\n.oc-col[_ngcontent-%COMP%] {\n  width: 5rem;\n}\n\n.algo-pos-col[_ngcontent-%COMP%] {\n  width: 32px !important;\n}\n\n.ocStrikeStrategyCE[_ngcontent-%COMP%] {\n  background-color: #ccffc9 !important;\n}\n\n.ocStrikeStrategyPE[_ngcontent-%COMP%] {\n  background-color: #ffdede !important;\n}\n\n.ocStrikeSLL[_ngcontent-%COMP%] {\n  background-color: #e1f4ff !important;\n}\n\n.width32[_ngcontent-%COMP%] {\n  width: 32px !important;\n}\n\n.width48[_ngcontent-%COMP%] {\n  width: 48px !important;\n}\n\n.width80[_ngcontent-%COMP%] {\n  width: 80px !important;\n}\n\n.width110[_ngcontent-%COMP%] {\n  width: 110px !important;\n}\n\n.width160[_ngcontent-%COMP%] {\n  width: 160px !important;\n}\n\n.nostretch[_ngcontent-%COMP%] {\n  white-space: nowrap;\n  width: 1%;\n}\n\n.charts-heading[_ngcontent-%COMP%] {\n  display: flex;\n  justify-content: center;\n  font-size: 24px;\n  font-weight: bold;\n  margin: 4px;\n}\n\n.opt_chart[_ngcontent-%COMP%] {\n  position: relative;\n}\n\n.opt_chart-0[_ngcontent-%COMP%] {\n  margin-bottom: 4px;\n  position: relative;\n}\n\n.chart-border-green[_ngcontent-%COMP%] {\n  border: 2px solid green;\n}\n\n.chart-border-red[_ngcontent-%COMP%] {\n  border: 2px solid red;\n}\n\n.opt_chart_wrapper_parent[_ngcontent-%COMP%] {\n  display: flex;\n  flex-wrap: wrap;\n}\n\n.opt_chart_wrapper[_ngcontent-%COMP%] {\n  display: flex;\n  margin-right: 12px;\n  margin-bottom: 12px;\n}\n\n.opt_chart_wrapper-0[_ngcontent-%COMP%] {\n  display: flex;\n  margin-right: 4px;\n  margin-bottom: 4px;\n  flex-direction: column;\n}\n\n.charts-inputs[_ngcontent-%COMP%] {\n  width: 10%;\n  display: inline-block;\n}\n\n.chart-legend[_ngcontent-%COMP%] {\n  position: absolute;\n  left: 4px;\n  top: 2px;\n  z-index: 2;\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 300;\n  color: black;\n}\n\n.chart-legend-qty[_ngcontent-%COMP%] {\n  position: absolute;\n  left: 92px;\n  top: 2px;\n  z-index: 2;\n  font-size: 18px;\n  line-height: 28px;\n  font-weight: 300;\n  color: black;\n}\n\n.chart-legend-0[_ngcontent-%COMP%] {\n  position: absolute;\n  left: 4px;\n  top: 2px;\n  z-index: 2;\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: 300;\n  color: black;\n}\n\n.chart-legend-values[_ngcontent-%COMP%] {\n  position: absolute;\n  left: 4px;\n  top: 18px;\n  z-index: 2;\n  font-size: 14px;\n  line-height: 16px;\n  font-weight: 300;\n  color: black;\n}\n\n.strategy_alert_field[_ngcontent-%COMP%] {\n  width: 100px;\n  display: inline-block;\n}\n\n.alert_field[_ngcontent-%COMP%] {\n  width: 10%;\n  display: inline-block;\n}\n\n.chart-positions[_ngcontent-%COMP%] {\n  \n  \n  min-width: 400px;\n  display: flex;\n  padding-right: 8px;\n}\n\n.chart-chart[_ngcontent-%COMP%] {\n  \n}\n\n.chart-finchart[_ngcontent-%COMP%] {\n  min-width: 700px;\n}\n\n#payOffExpiry[_ngcontent-%COMP%] {\n  width: 20%;\n}\n\n.positionExited[_ngcontent-%COMP%] {\n  background-color: rgba(148, 159, 177, 0.2);\n  \n}\n\n.hidePositionRow[_ngcontent-%COMP%] {\n  display: none;\n}\n\n.strategy_instru[_ngcontent-%COMP%] {\n  width: 20%;\n  display: inline-block;\n}\n\n#payOffExpiry[_ngcontent-%COMP%] {\n  display: inline-block;\n}\n\n.positions-roll-sugg[_ngcontent-%COMP%] {\n  text-align: left !important;\n}\n\n.green[_ngcontent-%COMP%] {\n  color: green;\n}\n\n.red[_ngcontent-%COMP%] {\n  color: #ff6347;\n}\n\n.blue[_ngcontent-%COMP%] {\n  color: blue;\n}\n/*# sourceMappingURL=data:application/json;base64, */"] });


/***/ }),

/***/ 6534:
/*!***************************************!*\
  !*** ./src/app/chart/chart.module.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChartModule": () => (/* binding */ ChartModule)
/* harmony export */ });
/* harmony import */ var _angular_common__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/common */ 6362);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _angular_forms__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/forms */ 587);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @angular/platform-browser */ 318);
/* harmony import */ var highcharts_angular__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! highcharts-angular */ 3094);
/* harmony import */ var ng2_charts__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ng2-charts */ 3808);
/* harmony import */ var _app_routing_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../app-routing.module */ 158);
/* harmony import */ var _stock_chart_stock_chart_component__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../stock-chart/stock-chart.component */ 8805);
/* harmony import */ var _chart_component__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chart.component */ 8748);
/* harmony import */ var _chart_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./chart.service */ 2118);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);











class ChartModule {
}
ChartModule.ɵfac = function ChartModule_Factory(t) { return new (t || ChartModule)(); };
ChartModule.ɵmod = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineNgModule"]({ type: ChartModule });
ChartModule.ɵinj = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjector"]({ providers: [_chart_service__WEBPACK_IMPORTED_MODULE_3__.ChartService], imports: [[
            _angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule,
            _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__.BrowserModule,
            _app_routing_module__WEBPACK_IMPORTED_MODULE_0__.AppRoutingModule,
            _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormsModule,
            _angular_forms__WEBPACK_IMPORTED_MODULE_8__.ReactiveFormsModule,
            ng2_charts__WEBPACK_IMPORTED_MODULE_9__.ChartsModule,
            highcharts_angular__WEBPACK_IMPORTED_MODULE_10__.HighchartsChartModule
        ]] });
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵsetNgModuleScope"](ChartModule, { declarations: [_chart_component__WEBPACK_IMPORTED_MODULE_2__.ChartComponent, _stock_chart_stock_chart_component__WEBPACK_IMPORTED_MODULE_1__.StockChartComponent], imports: [_angular_common__WEBPACK_IMPORTED_MODULE_5__.CommonModule,
        _angular_platform_browser__WEBPACK_IMPORTED_MODULE_6__.BrowserModule,
        _app_routing_module__WEBPACK_IMPORTED_MODULE_0__.AppRoutingModule,
        _angular_common_http__WEBPACK_IMPORTED_MODULE_7__.HttpClientModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_8__.FormsModule,
        _angular_forms__WEBPACK_IMPORTED_MODULE_8__.ReactiveFormsModule,
        ng2_charts__WEBPACK_IMPORTED_MODULE_9__.ChartsModule,
        highcharts_angular__WEBPACK_IMPORTED_MODULE_10__.HighchartsChartModule], exports: [_chart_component__WEBPACK_IMPORTED_MODULE_2__.ChartComponent] }); })();


/***/ }),

/***/ 2118:
/*!****************************************!*\
  !*** ./src/app/chart/chart.service.ts ***!
  \****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChartService": () => (/* binding */ ChartService)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! rxjs */ 2218);
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! rxjs */ 3491);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _common_application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/application.constant */ 8001);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _common_map_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/map.service */ 397);
/* harmony import */ var _common_fyers_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../common/fyers.service */ 6982);
/* harmony import */ var _common_aliceblue_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../common/aliceblue.service */ 7023);
/* harmony import */ var _common_zerodha_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/zerodha.service */ 1102);
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../app.service */ 900);










class ChartService {
    constructor(http, mapService, fyersService, aliceblueService, zerodhaService, appService) {
        this.http = http;
        this.mapService = mapService;
        this.fyersService = fyersService;
        this.aliceblueService = aliceblueService;
        this.zerodhaService = zerodhaService;
        this.appService = appService;
        this.optionChainEvent$ = new rxjs__WEBPACK_IMPORTED_MODULE_6__.Subject();
        this.strategyPnLEvent$ = new rxjs__WEBPACK_IMPORTED_MODULE_6__.Subject();
        this.intradayData = new Map();
        this.charts = {};
        this.candlestickSeries = {};
        this.charts_data = {};
        this.fetch_delay = 200;
    }
    getIntradayData(scrip, instru, expiry) {
        return this.intradayData.get(instru + ' ' + expiry + ' ' + scrip);
    }
    loadIntradayData(intradayWatch) {
        console.log('Loading intraday data');
        intradayWatch.forEach(element => {
            let prices = JSON.parse(localStorage.getItem(element.instru + ' ' + element.expiry + ' ' + element.scrip));
            this.intradayData.set(element.instru + ' ' + element.expiry + ' ' + element.scrip, prices);
        });
        console.log('Loaded intraday data: ', this.intradayData);
    }
    initFetchIntraday(intradayWatch) {
        (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.interval)(500).subscribe((sec) => {
            // console.log('Fetching intraday data');
            let cutOffTime = new Date();
            cutOffTime.setHours(17, 5, 0, 0);
            let openTime = new Date();
            openTime.setHours(8, 55, 0, 0);
            let currTime = new Date().getTime();
            if (currTime > cutOffTime.getTime()) {
                return;
            }
            if (currTime < openTime.getTime()) {
                return;
            }
            if (new Date().getDay() === 6 || new Date().getDay() === 0) {
                return;
            }
            intradayWatch.forEach(element => {
                let scrip = element.scrip;
                let instru = element.instru;
                let expiry = element.expiry;
                let ltp = null;
                if (scrip === 'FUT' || scrip === 'SPOT') {
                    ltp = this.mapService.getScripLTP(null, null, instru, null);
                }
                else {
                    // TODO ltp = this.getLTP_strike(scrip, instru, expiry); this.mapService.getScripLTP(instru, expiry, oc.strike, 'CE');
                }
                if (ltp) {
                    let arr = this.intradayData.get(instru + ' ' + expiry + ' ' + scrip);
                    if (!arr) {
                        arr = [];
                    }
                    let d = new Date();
                    // "2020-10-15 8:24"
                    let dformat = [d.getFullYear(), d.getMonth() + 1, d.getDate()].join('-')
                        + ' ' +
                        [d.getHours(), d.getMinutes()].join(':');
                    // let prev_ltp = arr[dformat];
                    let found = null;
                    for (let i = 0; i < arr.length; i++) {
                        if (arr[i].time && arr[i].time === dformat) {
                            found = i;
                            break;
                        }
                    }
                    if (found !== null) {
                        arr[found] = { time: dformat, price: ltp };
                    }
                    else {
                        arr.push({ time: dformat, price: ltp });
                    }
                    // arr[dformat] = ltp;
                    this.intradayData.set(instru + ' ' + expiry + ' ' + scrip, arr);
                    // console.log('intradayData: ', this.intradayData);
                }
            });
        });
    }
    saveIntradayData() {
        // console.log('Saving intraday data: ');
        (0,rxjs__WEBPACK_IMPORTED_MODULE_7__.interval)(1000).subscribe((sec) => {
            for (let [key, value] of this.intradayData) {
                let val = value;
                // console.log('Saving intraday data: ', val);
                // console.log('Saving intraday data json: ', JSON.stringify(val));
                localStorage.setItem(key, JSON.stringify(val));
            }
        });
    }
    processOCRequest(instru, expiryDate) {
        this.oc_instru = instru;
        let expiry = new Date(expiryDate);
        this.oc_year = expiry.getFullYear();
        this.oc_month = expiry.getMonth() + 1;
        this.oc_date = expiry.getDate();
        if (this.oc_instru === 'NIFTY') {
            this.oc_range_multiple = 50;
            let spot = this.mapService.getScripLTP(null, null, 'NIFTY50', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 500;
            this.oc_range_lower = spotStrike - 500;
        }
        else if (this.oc_instru === 'BANKNIFTY') {
            this.oc_range_multiple = 100;
            let spot = this.mapService.getScripLTP(null, null, 'BANKNIFTY', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 1500;
            this.oc_range_lower = spotStrike - 1500;
        }
        else if (this.oc_instru === 'FINNIFTY') {
            this.oc_range_multiple = 50;
            let spot = this.mapService.getScripLTP(null, null, 'FINNIFTY', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 500;
            this.oc_range_lower = spotStrike - 500;
        }
        else if (this.oc_instru === 'MIDCPNIFTY') {
            this.oc_range_multiple = 25;
            let spot = this.mapService.getScripLTP(null, null, 'MIDCPNIFTY', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 300;
            this.oc_range_lower = spotStrike - 300;
        }
        else if (this.oc_instru === 'SENSEX') {
            this.oc_range_multiple = 100;
            let spot = this.mapService.getScripLTP(null, null, 'SENSEX', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 1500;
            this.oc_range_lower = spotStrike - 1500;
        }
        else if (this.oc_instru === 'BANKEX') {
            this.oc_range_multiple = 100;
            let spot = this.mapService.getScripLTP(null, null, 'BANKEX', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 1500;
            this.oc_range_lower = spotStrike - 1500;
        }
        else if (this.oc_instru === 'USDINR') {
            this.oc_range_multiple = 0.25;
            let spot = this.mapService.getScripLTP(null, null, 'USDINR', null);
            let spotStrike = (Math.round(spot / this.oc_range_multiple) * this.oc_range_multiple);
            this.oc_range_higher = spotStrike + 2;
            this.oc_range_lower = spotStrike - 2;
        }
        this.updateOCRange();
    }
    updateOCRange(sendSubscriptions = false, oc_range_higher = null, oc_range_lower = null) {
        this.expiryString = this.mapService.getExpiry(new Date(this.oc_year, this.oc_month - 1, this.oc_date), this.oc_instru);
        if (oc_range_higher) {
            console.log('setting oc_range_higher', oc_range_higher);
            this.oc_range_higher = Number(oc_range_higher);
        }
        if (oc_range_lower) {
            console.log('setting oc_range_lower', oc_range_lower);
            this.oc_range_lower = Number(oc_range_lower);
        }
        console.log('setting', oc_range_higher, this.oc_range_higher, oc_range_lower, this.oc_range_lower, this.oc_range_multiple);
        this.oc_strikes = [];
        for (let index = this.oc_range_lower; index <= this.oc_range_higher; index += this.oc_range_multiple) {
            this.oc_strikes.push({ symbol: this.oc_instru + this.expiryString + index, strike: index, inCurrStrategyCE: false, inCurrStrategyPE: false, addCEToOrders: false, addPEToOrders: false, qtyInputCE: 200, qtyInputPE: 200,
                volumeCE: 0, volumePE: 0,
                deltaCE: 0, gammaCE: 0, vegaCE: 0, thetaCE: 0, deltaPE: 0, gammaPE: 0, vegaPE: 0, thetaPE: 0,
                ltpCE: 0, ltpPE: 0, qtyCE: 0, qtyPE: 0, costCE: 0, costPE: 0, inlineStrategyPnLCE: '', inlineStrategyPnLPE: '', isSpot: false, showNudge: false }); // symbol: NIFTY2061810000 NIFTY20JUN10000
        }
        if (!_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isSimulatedStrategy && sendSubscriptions) {
            let sub = [];
            this.oc_strikes.forEach(oc => {
                sub.push(this.mapService.getSubscriptionObject(oc.strike + 'CE', this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date).toDateString()));
                sub.push(this.mapService.getSubscriptionObject(oc.strike + 'PE', this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date).toDateString()));
            });
            console.log('chartService updateOCRange Subscriptions: ' + sub);
            this.appService.sendSubscriptions(sub);
        }
    }
    updateOCValues() {
        if (this.oc_strikes && this.oc_strikes.length > 0) {
            this.oc_strikes.forEach(oc => {
                oc.inCurrStrategyCE = this.isStrikeInCurrStrategy(oc.strike + 'CE');
                oc.inCurrStrategyPE = this.isStrikeInCurrStrategy(oc.strike + 'PE');
                oc.ltpCE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), oc.strike, 'CE');
                oc.ltpPE = this.mapService.getScripLTP(this.oc_instru, new Date(this.oc_year, this.oc_month - 1, this.oc_date), oc.strike, 'PE');
                oc.qtyCE = this.getQtyOfStrikeInStrategy(oc.strike + 'CE');
                oc.qtyPE = this.getQtyOfStrikeInStrategy(oc.strike + 'PE');
                oc.costCE = Math.round((this.getCostOfStrikeInStrategy(oc.strike + 'CE') + 0.00001) * 100) / 100;
                oc.costPE = Math.round((this.getCostOfStrikeInStrategy(oc.strike + 'PE') + 0.00001) * 100) / 100;
                oc.isSpot = this.isSpotStrike(oc.strike);
                oc.showNudge = this.showOILimit(this.oc_instru, oc.strike);
            });
        }
        return this.oc_strikes;
    }
    getQtyOfStrikeInStrategy(strike) {
        let curr_positions_trades = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.curr_positions_trades;
        if (curr_positions_trades) {
            for (let i = 0; i < curr_positions_trades.length; i++) {
                let element = curr_positions_trades[i];
                /* {
                  qty: 50,
                  scrip: '11150CE',
                  expiry: '01OCT2020',
                  entry: 50,
                  exit: 0,
                }, */
                let ocDate = new Date(this.oc_year, this.oc_month - 1, this.oc_date);
                let strikeExpiry = new Date(element.expiry);
                if (ocDate.getDate() === strikeExpiry.getDate() && element.scrip === strike && element.exit === 0) {
                    return element.qty;
                }
            }
            return null;
        }
    }
    getCostOfStrikeInStrategy(strike) {
        let curr_positions_trades = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.curr_positions_trades;
        if (curr_positions_trades) {
            for (let i = 0; i < curr_positions_trades.length; i++) {
                let element = curr_positions_trades[i];
                /* {
                  qty: 50,
                  scrip: '11150CE',
                  expiry: '01OCT2020',
                  entry: 50,
                  exit: 0,
                }, */
                let ocDate = new Date(this.oc_year, this.oc_month - 1, this.oc_date);
                let strikeExpiry = new Date(element.expiry);
                if (ocDate.getDate() === strikeExpiry.getDate() && element.scrip === strike && element.exit === 0) {
                    return element.entry;
                }
            }
            return null;
        }
    }
    isStrikeInCurrStrategy(strike) {
        let curr_positions_trades = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.curr_positions_trades;
        if (curr_positions_trades) {
            for (let i = 0; i < curr_positions_trades.length; i++) {
                let element = curr_positions_trades[i];
                /* {
                  qty: 50,
                  scrip: '11150CE',
                  expiry: '01OCT2020',
                  entry: 50,
                  exit: 0,
                }, */
                let ocDate = new Date(this.oc_year, this.oc_month - 1, this.oc_date);
                let strikeExpiry = new Date(element.expiry);
                if (element.exit === 0 && ocDate.getDate() === strikeExpiry.getDate() && element.scrip === strike) {
                    return true;
                }
            }
            return false;
        }
    }
    isChartStrikeInCurrStrategy(strike) {
        let curr_positions_trades = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.curr_positions_trades;
        if (curr_positions_trades) {
            for (let i = 0; i < curr_positions_trades.length; i++) {
                let element = curr_positions_trades[i];
                /* {
                  qty: 50,
                  scrip: '11150CE',
                  expiry: '01OCT2020',
                  entry: 50,
                  exit: 0,
                }, */
                if (element.exit === 0 && element.scrip === strike) {
                    return element.qty;
                }
            }
            return '';
        }
    }
    fetchChartData(strike, instru, expiry) {
        let obj = this.mapService.getSubscriptionObject(strike, instru, expiry);
        let element = this.zerodhaService.findStrikeInMasters(obj);
        let yday = this.appService.getLastWorkingDay(new Date());
        let from_date = '' + yday.getFullYear() + '-' + ('0' + (yday.getMonth() + 1)).slice(-2) + '-' + ('0' + yday.getDate()).slice(-2);
        let today = new Date();
        let to_date = '' + today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);
        if (element && element.token) {
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__.HttpHeaders({
                'authorization': _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth,
            });
            let httpOptions = {
                responseType: 'json',
                headers: headers
            };
            let url = 'https://kite.zerodha.com/oms/instruments/historical/' + element.token + '/minute?user_id=' + _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.zerodhaUserId + '&oi=1&from=' + from_date + '&to=' + to_date;
            return this.http.get(url, httpOptions);
        }
    }
    updateSpotStrike() {
        let underlying = '';
        if (this.oc_instru === 'NIFTY') {
            underlying = 'NIFTY50';
        }
        else if (this.oc_instru === 'BANKNIFTY') {
            underlying = 'BANKNIFTY';
        }
        else if (this.oc_instru === 'FINNIFTY') {
            underlying = 'FINNIFTY';
        }
        else if (this.oc_instru === 'MIDCPNIFTY') {
            underlying = 'MIDCPNIFTY';
        }
        else if (this.oc_instru === 'SENSEX') {
            underlying = 'SENSEX';
        }
        else if (this.oc_instru === 'BANKEX') {
            underlying = 'BANKEX';
        }
        else if (this.oc_instru === 'USDINR') {
            underlying = 'USDINR';
        }
        let e = this.mapService.getScripLTP(null, null, underlying, null);
        let spotStrike = (Math.round(e / this.oc_range_multiple) * this.oc_range_multiple);
        /* let symbol = this.oc_instru + this.getExpiry() + spotStrike;
    
        let ce_premium = this.getLtp(symbol + 'CE');
        let pe_premium = this.getLtp(symbol + 'PE');
        let targetStrike = ce_premium - pe_premium + spotStrike;
        targetStrike = (Math.round(targetStrike / this.oc_range_multiple) * this.oc_range_multiple); */
        // targetStrike:72.75 74.25 0.0975 0.15 74.25
        // console.log('oc targetStrike:' + symbol + ' ' + targetStrike + ' ' + ce_premium + ' ' + pe_premium + ' ' + spotStrike);
        this.ocSpotStrike = spotStrike; // targetStrike;
    }
    isSpotStrike(strike) {
        /* let underlying = '';
        if (this.oc_instru === 'NIFTY') {
          underlying = 'NIFTY50';
        } else if (this.oc_instru === 'BANKNIFTY') {
          underlying = 'BANKNIFTY';
        } else if (this.oc_instru === 'USDINR') {
          underlying = 'USDINR';
        }
        let e = this.getLtp(underlying);
        if ((Math.round(e / this.oc_range_multiple) * this.oc_range_multiple) === strike) {
          return true;
        }
        return false; */
        if (strike === this.ocSpotStrike) {
            return true;
        }
        return false;
    }
    showOILimit(instru, strike) {
        if (instru === 'NIFTY' && _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.nfCEOILimit && _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.nfPEOILimit) {
            if (strike > _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.nfCEOILimit || strike < _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.nfPEOILimit) {
                return true;
            }
        }
        if (instru === 'BANKNIFTY' && _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.bnfCEOILimit && _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.bnfPEOILimit) {
            if (strike > _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.bnfCEOILimit || strike < _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.bnfPEOILimit) {
                return true;
            }
        }
        return false;
    }
}
ChartService.ɵfac = function ChartService_Factory(t) { return new (t || ChartService)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_8__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_common_fyers_service__WEBPACK_IMPORTED_MODULE_2__.FyersService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_common_aliceblue_service__WEBPACK_IMPORTED_MODULE_3__.AliceblueService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_common_zerodha_service__WEBPACK_IMPORTED_MODULE_4__.ZerodhaService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_app_service__WEBPACK_IMPORTED_MODULE_5__.AppService)); };
ChartService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"]({ token: ChartService, factory: ChartService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 5596:
/*!*******************************************!*\
  !*** ./src/app/chart/charting.service.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ChartingService": () => (/* binding */ ChartingService)
/* harmony export */ });
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _common_application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../common/application.constant */ 8001);
/* harmony import */ var _common_map_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../common/map.service */ 397);
/* harmony import */ var lightweight_charts__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! lightweight-charts */ 3412);
/* harmony import */ var _debut_indicators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @debut/indicators */ 9726);
/* harmony import */ var _debut_indicators__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_debut_indicators__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _common_fyers_service__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../common/fyers.service */ 6982);
/* harmony import */ var _common_aliceblue_service__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../common/aliceblue.service */ 7023);
/* harmony import */ var _common_zerodha_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/zerodha.service */ 1102);
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../app.service */ 900);












class ChartingService {
    constructor(http, mapService, fyersService, aliceblueService, zerodhaService, appService) {
        this.http = http;
        this.mapService = mapService;
        this.fyersService = fyersService;
        this.aliceblueService = aliceblueService;
        this.zerodhaService = zerodhaService;
        this.appService = appService;
        this.charts = {};
        this.candlestickSeries = {};
        this.charts_data = {};
        this.fetch_delay = 200;
    }
    /*
    TradingView Lightweight Charts links:
    https://www.tradingview.com/HTML5-stock-forex-bitcoin-charting-library/
    https://in.tradingview.com/lightweight-charts/
    https://github.com/tradingview/lightweight-charts
    https://jsfiddle.net/TradingView/yozeu6k1/
    https://jsfiddle.net/TradingView/eaod9Lq8/
    https://codesandbox.io/s/damonacheylightweightchartsdemo-xhisf?file=/src/index.js:45-58
    https://tradingview.github.io/lightweight-charts/docs
    */
    updateInstruExpiry(instru = null, expiry = null) {
        if (instru) {
            this.charts_instru = instru;
        }
        if (expiry) {
            this.charts_expiry = expiry;
        }
    }
    initSpotChart(instru, expand = false) {
        this.spot_chart_instru = instru;
        if (this.spot_chart_chart) {
            this.spot_chart_chart.remove();
        }
        let width = 320;
        let height = 200;
        if (expand) {
            width = 600;
            height = 400;
        }
        let div_id = 'spot-chart';
        this.spot_chart_chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
            width: width,
            height: height,
            timeScale: {
                timeVisible: true,
            },
            /* layout: {
              textColor: '#d1d4dc',
              backgroundColor: '#000000',
            }, */
        });
        this.spot_candlestickSeries = this.spot_chart_chart.addCandlestickSeries();
        // this.spot_chart_chart.timeScale().fitContent();
        this.fetchSpotChartData();
    }
    fetchSpotChartData() {
        // let yday = new Date();
        // yday.setDate(yday.getDate() - 1);
        let yday = this.appService.getLastWorkingDay(new Date());
        let from_date = '' + yday.getFullYear() + '-' + ('0' + (yday.getMonth() + 1)).slice(-2) + '-' + ('0' + yday.getDate()).slice(-2);
        let today = new Date();
        let to_date = '' + today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);
        let token = this.mapService.getZerodhaInstruToken(this.spot_chart_instru);
        if (token) {
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__.HttpHeaders({
                'authorization': _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth,
            });
            let httpOptions = {
                responseType: 'json',
                headers: headers
            };
            let url = 'https://kite.zerodha.com/oms/instruments/historical/' + token + '/minute?user_id=' + _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.zerodhaUserId + '&oi=1&from=' + from_date + '&to=' + to_date;
            this.http.get(url, httpOptions).subscribe((res) => {
                //console.log('scrip data:', scrip, res);
                if (res.data.candles) {
                    let arr = res.data.candles;
                    let data = [];
                    if (arr.length === 0) {
                        console.log('ZERO CANDLES FOR ', this.spot_chart_instru);
                    }
                    for (let j = 0; j < arr.length; j++) {
                        let element = arr[j];
                        let obj = this.spot_charts_data; // getting all data for strike
                        if (!obj) {
                            obj = []; // {};
                        }
                        let d = element[0].replace('+0530', 'Z'); // replacing 2018-06-25T09:15:00+0530 by 2018-06-25T09:15:00Z
                        // obj[d] = [ element[1], element[2], element[3], element[4], element[5], element[6] ];
                        obj.push([d, element[1], element[2], element[3], element[4], element[5], element[6]]);
                        this.spot_charts_data = obj;
                        let data_entry = { time: Date.parse(d) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
                        data.push(data_entry);
                    }
                    this.spot_candlestickSeries.setData(data);
                    // this.spot_chart_chart.timeScale().fitContent();
                }
                console.log('spot candles:', Object.keys(this.spot_chart_chart).length, this.spot_chart_chart);
            }, error => {
                console.log('zerodha spot fetch chart error', error);
            });
        }
        if (this.single_chart_ce) {
            this.fetchChartData(this.single_strike_ce, false);
        }
        if (this.single_chart_pe) {
            setTimeout(() => {
                this.fetchChartData(this.single_strike_pe, false);
            }, 300);
        }
        setTimeout(() => {
            this.updateSingleChart(this.single_strike_ce, 'CE', false);
            this.updateSingleChart(this.single_strike_pe, 'PE', false);
        }, 1500);
        this.fetchStrangleStrikesData(this.strangle_strike_ce, this.strangle_strike_pe, false);
    }
    plotCurrentPrices() {
        let ltp = this.mapService.getScripLTP(null, null, this.spot_chart_instru, null);
        let obj = this.spot_charts_data;
        let last = obj[obj.length - 1]; // [ d, element[1], element[2], element[3], element[4], element[5], element[6] ]
        //console.log('last', strike, this.charts_instru, this.charts_expiry, ltp, last);
        let currentBar = {
            time: Date.parse(last[0]) / 1000,
            open: last[1],
            high: last[2],
            low: last[3],
            close: ltp
        };
        // console.log('currentBar', currentBar);
        this.spot_candlestickSeries.update(currentBar);
        if (this.single_strike_ce) {
            let ltpCE = this.mapService.getScripLTP(this.charts_instru, this.charts_expiry, this.mapService.parseScrip(this.single_strike_ce).scrip, this.mapService.parseScrip(this.single_strike_ce).type);
            let objCE = this.charts_data[this.single_strike_ce];
            let lastCE = objCE[objCE.length - 1]; // [ d, element[1], element[2], element[3], element[4], element[5], element[6] ]
            //console.log('lastCE', this.single_strike_ce, this.charts_instru, this.charts_expiry, ltpCE, lastCE);
            let currentBarCE = {
                time: Date.parse(lastCE[0]) / 1000,
                open: lastCE[1],
                high: lastCE[2],
                low: lastCE[3],
                close: ltpCE
            };
            this.single_chart_ce_candlestickSeries.update(currentBarCE);
        }
        if (this.single_strike_pe) {
            let ltpPE = this.mapService.getScripLTP(this.charts_instru, this.charts_expiry, this.mapService.parseScrip(this.single_strike_pe).scrip, this.mapService.parseScrip(this.single_strike_pe).type);
            let objPE = this.charts_data[this.single_strike_pe];
            let lastPE = objPE[objPE.length - 1]; // [ d, element[1], element[2], element[3], element[4], element[5], element[6] ]
            //console.log('lastPE', this.single_strike_pe, this.charts_instru, this.charts_expiry, ltpPE, lastPE);
            let currentBarPE = {
                time: Date.parse(lastPE[0]) / 1000,
                open: lastPE[1],
                high: lastPE[2],
                low: lastPE[3],
                close: ltpPE
            };
            this.single_chart_pe_candlestickSeries.update(currentBarPE);
        }
        if (this.strangle_strike_ce && this.strangle_strike_pe) {
            let ltpCE = this.mapService.getScripLTP(this.charts_instru, this.charts_expiry, this.mapService.parseScrip(this.strangle_strike_ce).scrip, this.mapService.parseScrip(this.strangle_strike_ce).type);
            let ltpPE = this.mapService.getScripLTP(this.charts_instru, this.charts_expiry, this.mapService.parseScrip(this.strangle_strike_pe).scrip, this.mapService.parseScrip(this.strangle_strike_pe).type);
            let strangleLTP = ltpCE + ltpPE;
            let obj = this.charts_data[this.strangle_strike_ce + '_' + this.strangle_strike_pe];
            let last = obj[obj.length - 1]; // [ d, element[1], element[2], element[3], element[4], element[5], element[6] ]
            // console.log('aniket last strangle', obj, ltpCE, ltpPE, last);
            let currentBar = {
                time: Date.parse(last[0]) / 1000,
                value: strangleLTP
            };
            this.strangle_chart_candlestickSeries.update(currentBar);
        }
    }
    resizeSingleCharts(expand) {
        if (expand) {
            this.spot_chart_chart.resize(600, 400);
            if (this.single_chart_ce) {
                this.single_chart_ce.resize(600, 400);
            }
            if (this.single_chart_pe) {
                this.single_chart_pe.resize(600, 400);
            }
        }
        else {
            this.spot_chart_chart.resize(320, 200);
            if (this.single_chart_ce) {
                this.single_chart_ce.resize(320, 200);
            }
            if (this.single_chart_pe) {
                this.single_chart_pe.resize(320, 200);
            }
        }
    }
    updateSingleChart(strike, type, recreate = true, expand = false) {
        if (strike) {
            let data = [];
            let lineData1 = [];
            let lineData2 = [];
            let obj = this.charts_data[strike]; // getting all data for strike
            // console.log('chart data', obj);
            if (!obj) {
                return;
            }
            // obj.push([ d, element[1], element[2], element[3], element[4], element[5], element[6] ]);
            obj.forEach(element => {
                let data_entry = { time: Date.parse(element[0]) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
                data.push(data_entry);
            });
            let width = 320;
            let height = 200;
            if (expand) {
                width = 600;
                height = 400;
            }
            if (type === 'CE') {
                this.single_strike_ce = strike;
                if (recreate) {
                    if (this.single_chart_ce) {
                        this.single_chart_ce.remove();
                    }
                    let div_id = 'chart-ce';
                    this.single_chart_ce = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
                        width: width,
                        height: height,
                        timeScale: {
                            timeVisible: true,
                        },
                        crosshair: {
                            mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
                        },
                        /* layout: {
                          textColor: '#d1d4dc',
                          backgroundColor: '#000000',
                        }, */
                    });
                    this.single_chart_ce_candlestickSeries = this.single_chart_ce.addCandlestickSeries();
                }
                this.single_chart_ce_candlestickSeries.setData(data);
            }
            else if (type === 'PE') {
                this.single_strike_pe = strike;
                if (recreate) {
                    if (this.single_chart_pe) {
                        this.single_chart_pe.remove();
                    }
                    let div_id = 'chart-pe';
                    this.single_chart_pe = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
                        width: width,
                        height: height,
                        timeScale: {
                            timeVisible: true,
                        },
                        crosshair: {
                            mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
                        },
                        /* layout: {
                          textColor: '#d1d4dc',
                          backgroundColor: '#000000',
                        }, */
                    });
                    this.single_chart_pe_candlestickSeries = this.single_chart_pe.addCandlestickSeries();
                }
                this.single_chart_pe_candlestickSeries.setData(data);
            }
        }
    }
    init_opt_charts(instru, call_start_strike, call_end_strike, put_start_strike, put_end_strike, strike_interval, expiry) {
        for (let key in this.charts) {
            if (Object.prototype.hasOwnProperty.call(this.charts, key)) {
                let chart = this.charts[key];
                chart.remove();
            }
        }
        this.charts = {};
        if (this.fetch_ce_interval) {
            clearInterval(this.fetch_ce_interval);
        }
        if (this.fetch_pe_interval) {
            clearInterval(this.fetch_pe_interval);
        }
        if (this.refresh_ce_interval) {
            clearInterval(this.refresh_ce_interval);
        }
        if (this.refresh_pe_interval) {
            clearInterval(this.refresh_pe_interval);
        }
        this.charts_instru = instru;
        this.strike_interval = strike_interval;
        this.charts_expiry = expiry;
        this.initForCallsPuts(call_start_strike, call_end_strike, strike_interval, 'CE');
        this.initForCallsPuts(put_start_strike, put_end_strike, strike_interval, 'PE');
    }
    initForCallsPuts(start_strike, end_strike, strike_interval, type) {
        let c1 = 0;
        for (let strike = end_strike; strike >= start_strike; strike -= strike_interval) {
            let div_id = 'opt_chart_' + c1 + type;
            console.log('div_id', div_id);
            let chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
                width: 320,
                height: 200,
                timeScale: {
                    timeVisible: true,
                },
                /* layout: {
                  textColor: '#d1d4dc',
                  backgroundColor: '#000000',
                }, */
            });
            let c = chart.addCandlestickSeries();
            // chart.timeScale().fitContent();
            this.candlestickSeries['' + strike + type] = c;
            this.charts['' + strike + type] = chart;
            c1++;
        }
        //let ltp = this.mapService.getScripLTP(null, null, instru, null);
        //let spotStrike = (Math.round(ltp / multiple) * multiple);
        let counter1 = 0;
        for (let strike = end_strike; strike >= start_strike; strike -= strike_interval) {
            setTimeout(() => {
                this.fetchChartData(strike + type);
            }, counter1 * this.fetch_delay);
            counter1++;
        }
        let fetch_interval = this.fetch_ce_interval;
        if (type === 'PE') {
            fetch_interval = this.fetch_pe_interval;
        }
        fetch_interval = setInterval(() => {
            let counter2 = 0;
            for (let strike = end_strike; strike >= start_strike; strike -= strike_interval) {
                setTimeout(() => {
                    this.fetchChartData(strike + type);
                }, counter2 * this.fetch_delay);
                counter2++;
            }
        }, 60000);
        let refresh_interval = this.refresh_ce_interval;
        if (type === 'PE') {
            refresh_interval = this.refresh_pe_interval;
        }
        refresh_interval = setInterval(() => {
            for (let strike = end_strike; strike >= start_strike; strike -= strike_interval) {
                this.plotOptChartsCurrentPrice(strike + type);
            }
        }, 1000);
    }
    fetchChartData(strike, update_chart = true) {
        let obj = this.mapService.getSubscriptionObject(strike, this.charts_instru, this.charts_expiry);
        let element = this.zerodhaService.findStrikeInMasters(obj);
        // let yday = new Date();
        // yday.setDate(yday.getDate() - 1);
        let yday = this.appService.getLastWorkingDay(new Date());
        // yday = this.appService.getLastWorkingDay(yday);
        let from_date = '' + yday.getFullYear() + '-' + ('0' + (yday.getMonth() + 1)).slice(-2) + '-' + ('0' + yday.getDate()).slice(-2);
        let today = new Date();
        let to_date = '' + today.getFullYear() + '-' + ('0' + (today.getMonth() + 1)).slice(-2) + '-' + ('0' + today.getDate()).slice(-2);
        if (element && element.token) {
            const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_8__.HttpHeaders({
                'authorization': _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth,
            });
            let httpOptions = {
                responseType: 'json',
                headers: headers
            };
            let url = 'https://kite.zerodha.com/oms/instruments/historical/' + element.token + '/minute?user_id=' + _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.zerodhaUserId + '&oi=1&from=' + from_date + '&to=' + to_date;
            this.http.get(url, httpOptions).subscribe((res) => {
                //console.log('scrip data:', scrip, res);
                if (res.data.candles) {
                    let arr = res.data.candles;
                    if (arr.length === 0) {
                        console.log('ZERO CANDLES FOR ', strike);
                    }
                    let data = [];
                    this.charts_data[strike] = []; // getting all data for strike
                    let obj = [];
                    for (let j = 0; j < arr.length; j++) {
                        let element = arr[j];
                        /* let obj = this.charts_data[strike]; // getting all data for strike
                        if (!obj) {
                          obj = [];// {};
                        } */
                        let d = element[0].replace('+0530', 'Z'); // changing 2018-06-25T09:15:00+0530 to 2018-06-25T09:15:00Z
                        // obj[d] = [ element[1], element[2], element[3], element[4], element[5], element[6] ];
                        obj.push([d, element[1], element[2], element[3], element[4], element[5], element[6]]);
                        // this.charts_data[strike] = obj;
                        let data_entry = { time: Date.parse(d) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
                        data.push(data_entry);
                    }
                    this.charts_data[strike] = obj;
                    if (update_chart) {
                        let c = this.candlestickSeries['' + strike];
                        c.setData(data);
                        let chart = this.charts['' + strike];
                        // chart.timeScale().fitContent();
                    }
                }
                console.log('candles:', Object.keys(this.charts_data).length, this.charts_data);
            }, error => {
                console.log('zerodha fetch chart error', error);
            });
        }
        /* for (let i = 0; i < this.num_charts; i++) {
          let c = this.candlestickSeries['' + i];
          c.setData([
            { time: Date.parse('2018-06-25T09:15:00.000Z') / 1000 as any, open: 41375.16, high: 41382.84, low: 41336.16, close: 41345.72 },
            { time: Date.parse('2018-06-25T09:20:00.000Z') / 1000 as any, open: 41345.12, high: 41353.90, low: 41345.12, close: 41348.09 },
            { time: Date.parse('2018-06-25T09:25:00.000Z') / 1000 as any, open: 41360.71, high: 41360.71, low: 41353.39, close: 41359.29 },
            { time: Date.parse('2018-06-25T09:30:00.000Z') / 1000 as any, open: 41368.26, high: 41368.26, low: 41359.04, close: 41360.50 },
            { time: Date.parse('2018-06-25T09:35:00.000Z') / 1000 as any, open: 41367.71, high: 41305.85, low: 41366.67, close: 41391.04 },
            { time: Date.parse('2018-06-25T09:40:00.000Z') / 1000 as any, open: 41391.04, high: 41321.40, low: 41382.70, close: 41311.40 },
            { time: Date.parse('2018-06-25T09:45:00.000Z') / 1000 as any, open: 41311.51, high: 41342.83, low: 41303.34, close: 41331.25 },
            { time: Date.parse('2018-06-25T09:50:00.000Z') / 1000 as any, open: 41331.33, high: 41351.17, low: 41377.68, close: 41396.43 },
            { time: Date.parse('2018-06-25T09:55:00.000Z') / 1000 as any, open: 41306.33, high: 41310.20, low: 41390.39, close: 41398.10 },
            { time: Date.parse('2018-06-25T10:00:00.000Z') / 1000 as any, open: 41309.87, high: 41314.69, low: 41385.66, close: 41311.26 },
          ]);
        }  */
    }
    plotOptChartsCurrentPrice(strike) {
        // let last = Object.keys(obj)[Object.keys(obj).length-1];
        let ltp = this.mapService.getScripLTP(this.charts_instru, this.charts_expiry, this.mapService.parseScrip(strike).scrip, this.mapService.parseScrip(strike).type);
        let obj = this.charts_data[strike];
        let last = obj[obj.length - 1]; // [ d, element[1], element[2], element[3], element[4], element[5], element[6] ]
        //console.log('last', strike, this.charts_instru, this.charts_expiry, ltp, last);
        let c = this.candlestickSeries['' + strike];
        // console.log('c', c);
        let currentBar = {
            time: Date.parse(last[0]) / 1000,
            open: last[1],
            high: last[2],
            low: last[3],
            close: ltp
        };
        //console.log('currentBar', currentBar);
        c.update(currentBar);
    }
    fetchStrangleStrikesData(strike1, strike2, recreate = true) {
        if (strike1 && strike2) {
            this.fetchChartData(strike1, false);
            this.fetchChartData(strike2, false);
            setTimeout(() => {
                this.updateStrangleChart(strike1, strike2, recreate);
            }, 3000);
        }
    }
    updateStrangleChart(strike1, strike2, recreate = true) {
        if (strike1 && strike2) {
            //console.log('aniket', strike1, strike2);
            this.strangle_strike_ce = strike1;
            this.strangle_strike_pe = strike2;
            let data = [];
            let obj1 = this.charts_data[strike1]; // getting all data for strike
            if (!obj1) {
                return;
            }
            let obj2 = this.charts_data[strike2]; // getting all data for strike
            if (!obj2) {
                return;
            }
            // obj.push([ d, element[1], element[2], element[3], element[4], element[5], element[6] ]);
            let arr = this.getStrangleValues(obj1, obj2);
            this.charts_data[this.strangle_strike_ce + '_' + this.strangle_strike_pe] = arr;
            //console.log('aniket arr', this.charts_data[this.strangle_strike_ce + '_' + this.strangle_strike_pe]);
            arr.forEach(element => {
                let data_entry = { time: Date.parse(element[0]) / 1000, value: element[1] };
                data.push(data_entry);
            });
            //console.log('aniket data', data);
            if (recreate) {
                if (this.strangle_chart_chart) {
                    this.strangle_chart_chart.remove();
                }
                let div_id = 'strangle-chart';
                this.strangle_chart_chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
                    width: 320,
                    height: 200,
                    timeScale: {
                        timeVisible: true,
                    },
                    /* layout: {
                      textColor: '#d1d4dc',
                      backgroundColor: '#000000',
                    }, */
                });
                this.strangle_chart_candlestickSeries = this.strangle_chart_chart.addLineSeries();
            }
            this.strangle_chart_candlestickSeries.setData(data);
        }
    }
    initTV_charts_static() {
        const chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)('tv_test', {
            width: 400,
            height: 200,
            timeScale: {
                timeVisible: true,
            },
        });
        const candlestickSeries = chart.addCandlestickSeries();
        let str = '2018-06-25T09:15:00+0530';
        str = str.replace('+0530', 'Z');
        candlestickSeries.setData([
            { time: Date.parse(str) / 1000, open: 75.16, high: 82.84, low: 36.16, close: 45.72 },
            { time: Date.parse('2018-06-25T09:20:00.000Z') / 1000, open: 45.12, high: 53.90, low: 45.12, close: 48.09 },
            { time: Date.parse('2018-06-25T09:25:00.000Z') / 1000, open: 60.71, high: 60.71, low: 53.39, close: 59.29 },
            { time: Date.parse('2018-06-25T09:30:00.000Z') / 1000, open: 68.26, high: 68.26, low: 59.04, close: 60.50 },
            { time: Date.parse('2018-06-25T09:35:00.000Z') / 1000, open: 67.71, high: 105.85, low: 66.67, close: 91.04 },
            { time: Date.parse('2018-06-25T09:40:00.000Z') / 1000, open: 91.04, high: 121.40, low: 82.70, close: 111.40 },
            { time: Date.parse('2018-06-25T09:45:00.000Z') / 1000, open: 111.51, high: 142.83, low: 103.34, close: 131.25 },
            { time: Date.parse('2018-06-25T09:50:00.000Z') / 1000, open: 131.33, high: 151.17, low: 77.68, close: 96.43 },
            { time: Date.parse('2018-06-25T09:55:00.000Z') / 1000, open: 106.33, high: 110.20, low: 90.39, close: 98.10 },
            { time: Date.parse('2018-06-25T10:00:00.000Z') / 1000, open: 109.87, high: 114.69, low: 85.66, close: 111.26 },
        ]);
        // chart.timeScale().fitContent();
    }
    initTV_charts_changing() {
        let chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)('tv_test', {
            width: 400,
            height: 200,
            /* crosshair: {
              mode: LightweightCharts.CrosshairMode.Normal,
            }, */
        });
        var candleSeries = chart.addCandlestickSeries();
        var data = [
            { time: '2018-10-19', open: 54.62, high: 55.50, low: 54.52, close: 54.90 },
            { time: '2018-10-22', open: 55.08, high: 55.27, low: 54.61, close: 54.98 },
            { time: '2018-10-23', open: 56.09, high: 57.47, low: 56.09, close: 57.21 },
            { time: '2018-10-24', open: 57.00, high: 58.44, low: 56.41, close: 57.42 },
            { time: '2018-10-25', open: 57.46, high: 57.63, low: 56.17, close: 56.43 },
            { time: '2018-10-26', open: 56.26, high: 56.62, low: 55.19, close: 55.51 },
            { time: '2018-10-29', open: 55.81, high: 57.15, low: 55.72, close: 56.48 },
            { time: '2018-10-30', open: 56.92, high: 58.80, low: 56.92, close: 58.18 },
            { time: '2018-10-31', open: 58.32, high: 58.32, low: 56.76, close: 57.09 },
            { time: '2018-11-01', open: 56.98, high: 57.28, low: 55.55, close: 56.05 },
            { time: '2018-11-02', open: 56.34, high: 57.08, low: 55.92, close: 56.63 },
            { time: '2018-11-05', open: 56.51, high: 57.45, low: 56.51, close: 57.21 },
            { time: '2018-11-06', open: 57.02, high: 57.35, low: 56.65, close: 57.21 },
            { time: '2018-11-07', open: 57.55, high: 57.78, low: 57.03, close: 57.65 },
            { time: '2018-11-08', open: 57.70, high: 58.44, low: 57.66, close: 58.27 },
            { time: '2018-11-09', open: 58.32, high: 59.20, low: 57.94, close: 58.46 },
            { time: '2018-11-12', open: 58.84, high: 59.40, low: 58.54, close: 58.72 },
            { time: '2018-11-13', open: 59.09, high: 59.14, low: 58.32, close: 58.66 },
            { time: '2018-11-14', open: 59.13, high: 59.32, low: 58.41, close: 58.94 },
            { time: '2018-11-15', open: 58.85, high: 59.09, low: 58.45, close: 59.08 },
            { time: '2018-11-16', open: 59.06, high: 60.39, low: 58.91, close: 60.21 },
            { time: '2018-11-19', open: 60.25, high: 61.32, low: 60.18, close: 60.62 },
            { time: '2018-11-20', open: 61.03, high: 61.58, low: 59.17, close: 59.46 },
            { time: '2018-11-21', open: 59.26, high: 59.90, low: 58.88, close: 59.16 },
            { time: '2018-11-23', open: 58.86, high: 59.00, low: 58.29, close: 58.64 },
            { time: '2018-11-26', open: 58.64, high: 59.51, low: 58.31, close: 59.17 },
            { time: '2018-11-27', open: 59.21, high: 60.70, low: 59.18, close: 60.65 },
            { time: '2018-11-28', open: 60.70, high: 60.73, low: 59.64, close: 60.06 },
            { time: '2018-11-29', open: 59.42, high: 59.79, low: 59.26, close: 59.45 },
            { time: '2018-11-30', open: 59.57, high: 60.37, low: 59.48, close: 60.30 },
            { time: '2018-12-03', open: 59.50, high: 59.75, low: 57.69, close: 58.16 },
            { time: '2018-12-04', open: 58.10, high: 59.40, low: 57.96, close: 58.09 },
            { time: '2018-12-06', open: 58.18, high: 58.64, low: 57.16, close: 58.08 },
            { time: '2018-12-07', open: 57.91, high: 58.43, low: 57.34, close: 57.68 },
            { time: '2018-12-10', open: 57.80, high: 58.37, low: 56.87, close: 58.27 },
            { time: '2018-12-11', open: 58.77, high: 59.40, low: 58.63, close: 58.85 },
            { time: '2018-12-12', open: 57.79, high: 58.19, low: 57.23, close: 57.25 },
            { time: '2018-12-13', open: 57.00, high: 57.50, low: 56.81, close: 57.09 },
            { time: '2018-12-14', open: 56.95, high: 57.50, low: 56.75, close: 57.08 },
            { time: '2018-12-17', open: 57.06, high: 57.31, low: 55.53, close: 55.95 },
            { time: '2018-12-18', open: 55.94, high: 56.69, low: 55.31, close: 55.65 },
            { time: '2018-12-19', open: 55.72, high: 56.92, low: 55.50, close: 55.86 },
            { time: '2018-12-20', open: 55.92, high: 56.01, low: 54.26, close: 55.07 },
            { time: '2018-12-21', open: 54.84, high: 56.53, low: 54.24, close: 54.92 },
            { time: '2018-12-24', open: 54.68, high: 55.04, low: 52.94, close: 53.05 },
            { time: '2018-12-26', open: 53.23, high: 54.47, low: 52.40, close: 54.44 },
            { time: '2018-12-27', open: 54.31, high: 55.17, low: 53.35, close: 55.15 },
            { time: '2018-12-28', open: 55.37, high: 55.86, low: 54.90, close: 55.27 },
            { time: '2018-12-31', open: 55.53, high: 56.23, low: 55.07, close: 56.22 },
            { time: '2019-01-02', open: 56.16, high: 56.16, low: 55.28, close: 56.02 },
            { time: '2019-01-03', open: 56.30, high: 56.99, low: 56.06, close: 56.22 },
            { time: '2019-01-04', open: 56.49, high: 56.89, low: 55.95, close: 56.36 },
            { time: '2019-01-07', open: 56.76, high: 57.26, low: 56.55, close: 56.72 },
            { time: '2019-01-08', open: 57.27, high: 58.69, low: 57.05, close: 58.38 },
            { time: '2019-01-09', open: 57.68, high: 57.72, low: 56.85, close: 57.05 },
            { time: '2019-01-10', open: 57.29, high: 57.70, low: 56.87, close: 57.60 },
            { time: '2019-01-11', open: 57.84, high: 58.26, low: 57.42, close: 58.02 },
            { time: '2019-01-14', open: 57.83, high: 58.15, low: 57.67, close: 58.03 },
            { time: '2019-01-15', open: 57.74, high: 58.29, low: 57.58, close: 58.10 },
            { time: '2019-01-16', open: 57.93, high: 57.93, low: 57.00, close: 57.08 },
            { time: '2019-01-17', open: 57.16, high: 57.40, low: 56.21, close: 56.83 },
            { time: '2019-01-18', open: 56.92, high: 57.47, low: 56.84, close: 57.09 },
            { time: '2019-01-22', open: 57.23, high: 57.39, low: 56.40, close: 56.99 },
            { time: '2019-01-23', open: 56.98, high: 57.87, low: 56.93, close: 57.76 },
            { time: '2019-01-24', open: 57.61, high: 57.65, low: 56.50, close: 57.07 },
            { time: '2019-01-25', open: 57.18, high: 57.47, low: 56.23, close: 56.40 },
            { time: '2019-01-28', open: 56.12, high: 56.22, low: 54.80, close: 55.07 },
            { time: '2019-01-29', open: 53.62, high: 54.30, low: 52.97, close: 53.28 },
            { time: '2019-01-30', open: 53.10, high: 54.02, low: 52.28, close: 54.00 },
            { time: '2019-01-31', open: 54.05, high: 55.19, low: 53.53, close: 55.06 },
            { time: '2019-02-01', open: 55.21, high: 55.30, low: 54.47, close: 54.55 },
            { time: '2019-02-04', open: 54.60, high: 54.69, low: 53.67, close: 54.04 },
            { time: '2019-02-05', open: 54.10, high: 54.34, low: 53.61, close: 54.14 },
            { time: '2019-02-06', open: 54.11, high: 54.37, low: 53.68, close: 53.79 },
            { time: '2019-02-07', open: 53.61, high: 53.73, low: 53.02, close: 53.57 },
            { time: '2019-02-08', open: 53.36, high: 53.96, low: 53.30, close: 53.95 },
            { time: '2019-02-11', open: 54.13, high: 54.37, low: 53.86, close: 54.05 },
            { time: '2019-02-12', open: 54.45, high: 54.77, low: 54.19, close: 54.42 },
            { time: '2019-02-13', open: 54.35, high: 54.77, low: 54.28, close: 54.48 },
            { time: '2019-02-14', open: 54.38, high: 54.52, low: 53.95, close: 54.03 },
            { time: '2019-02-15', open: 54.48, high: 55.19, low: 54.32, close: 55.16 },
            { time: '2019-02-19', open: 55.06, high: 55.66, low: 54.82, close: 55.44 },
            { time: '2019-02-20', open: 55.37, high: 55.91, low: 55.24, close: 55.76 },
            { time: '2019-02-21', open: 55.55, high: 56.72, low: 55.46, close: 56.15 },
            { time: '2019-02-22', open: 56.43, high: 57.13, low: 56.40, close: 56.92 },
            { time: '2019-02-25', open: 57.00, high: 57.27, low: 56.55, close: 56.78 },
            { time: '2019-02-26', open: 56.82, high: 57.09, low: 56.46, close: 56.64 },
            { time: '2019-02-27', open: 56.55, high: 56.73, low: 56.35, close: 56.72 },
            { time: '2019-02-28', open: 56.74, high: 57.61, low: 56.72, close: 56.92 },
            { time: '2019-03-01', open: 57.02, high: 57.15, low: 56.35, close: 56.96 },
            { time: '2019-03-04', open: 57.15, high: 57.34, low: 55.66, close: 56.24 },
            { time: '2019-03-05', open: 56.09, high: 56.17, low: 55.51, close: 56.08 },
            { time: '2019-03-06', open: 56.19, high: 56.42, low: 55.45, close: 55.68 },
            { time: '2019-03-07', open: 55.76, high: 56.40, low: 55.72, close: 56.30 },
            { time: '2019-03-08', open: 56.36, high: 56.68, low: 56.00, close: 56.53 },
            { time: '2019-03-11', open: 56.76, high: 57.62, low: 56.75, close: 57.58 },
            { time: '2019-03-12', open: 57.63, high: 58.11, low: 57.36, close: 57.43 },
            { time: '2019-03-13', open: 57.37, high: 57.74, low: 57.34, close: 57.66 },
            { time: '2019-03-14', open: 57.71, high: 58.09, low: 57.51, close: 57.95 },
            { time: '2019-03-15', open: 58.04, high: 58.51, low: 57.93, close: 58.39 },
            { time: '2019-03-18', open: 58.27, high: 58.32, low: 57.56, close: 58.07 },
            { time: '2019-03-19', open: 58.10, high: 58.20, low: 57.31, close: 57.50 },
            { time: '2019-03-20', open: 57.51, high: 58.05, low: 57.11, close: 57.67 },
            { time: '2019-03-21', open: 57.58, high: 58.49, low: 57.57, close: 58.29 },
            { time: '2019-03-22', open: 58.16, high: 60.00, low: 58.13, close: 59.76 },
            { time: '2019-03-25', open: 59.63, high: 60.19, low: 59.53, close: 60.08 },
            { time: '2019-03-26', open: 60.30, high: 60.69, low: 60.17, close: 60.63 },
            { time: '2019-03-27', open: 60.56, high: 61.19, low: 60.48, close: 60.88 },
            { time: '2019-03-28', open: 60.88, high: 60.89, low: 58.44, close: 59.08 },
            { time: '2019-03-29', open: 59.20, high: 59.27, low: 58.32, close: 59.13 },
            { time: '2019-04-01', open: 59.39, high: 59.41, low: 58.79, close: 59.09 },
            { time: '2019-04-02', open: 59.22, high: 59.23, low: 58.34, close: 58.53 },
            { time: '2019-04-03', open: 58.78, high: 59.07, low: 58.41, close: 58.87 },
            { time: '2019-04-04', open: 58.84, high: 59.10, low: 58.77, close: 58.99 },
            { time: '2019-04-05', open: 59.02, high: 59.09, low: 58.82, close: 59.09 },
            { time: '2019-04-08', open: 59.02, high: 59.13, low: 58.72, close: 59.13 },
            { time: '2019-04-09', open: 58.37, high: 58.56, low: 58.04, close: 58.40 },
            { time: '2019-04-10', open: 58.40, high: 58.70, low: 58.36, close: 58.61 },
            { time: '2019-04-11', open: 58.65, high: 58.73, low: 58.20, close: 58.56 },
            { time: '2019-04-12', open: 58.75, high: 58.79, low: 58.52, close: 58.74 },
            { time: '2019-04-15', open: 58.91, high: 58.95, low: 58.59, close: 58.71 },
            { time: '2019-04-16', open: 58.79, high: 58.98, low: 58.66, close: 58.79 },
            { time: '2019-04-17', open: 58.40, high: 58.46, low: 57.64, close: 57.78 },
            { time: '2019-04-18', open: 57.51, high: 58.20, low: 57.28, close: 58.04 },
            { time: '2019-04-22', open: 58.14, high: 58.49, low: 57.89, close: 58.37 },
            { time: '2019-04-23', open: 57.62, high: 57.72, low: 56.30, close: 57.15 },
            { time: '2019-04-24', open: 57.34, high: 57.57, low: 56.73, close: 57.08 },
            { time: '2019-04-25', open: 56.82, high: 56.90, low: 55.75, close: 55.85 },
            { time: '2019-04-26', open: 56.06, high: 56.81, low: 55.83, close: 56.58 },
            { time: '2019-04-29', open: 56.75, high: 57.17, low: 56.71, close: 56.84 },
            { time: '2019-04-30', open: 56.99, high: 57.45, low: 56.76, close: 57.19 },
            { time: '2019-05-01', open: 57.23, high: 57.30, low: 56.52, close: 56.52 },
            { time: '2019-05-02', open: 56.81, high: 58.23, low: 56.68, close: 56.99 },
            { time: '2019-05-03', open: 57.15, high: 57.36, low: 56.87, close: 57.24 },
            { time: '2019-05-06', open: 56.83, high: 57.09, low: 56.74, close: 56.91 },
            { time: '2019-05-07', open: 56.69, high: 56.81, low: 56.33, close: 56.63 },
            { time: '2019-05-08', open: 56.66, high: 56.70, low: 56.25, close: 56.38 },
            { time: '2019-05-09', open: 56.12, high: 56.56, low: 55.93, close: 56.48 },
            { time: '2019-05-10', open: 56.49, high: 57.04, low: 56.26, close: 56.91 },
            { time: '2019-05-13', open: 56.72, high: 57.34, low: 56.66, close: 56.75 },
            { time: '2019-05-14', open: 56.76, high: 57.19, low: 56.50, close: 56.55 },
            { time: '2019-05-15', open: 56.51, high: 56.84, low: 56.17, close: 56.81 },
            { time: '2019-05-16', open: 57.00, high: 57.80, low: 56.82, close: 57.38 },
            { time: '2019-05-17', open: 57.06, high: 58.48, low: 57.01, close: 58.09 },
            { time: '2019-05-20', open: 59.15, high: 60.54, low: 58.00, close: 59.01 },
            { time: '2019-05-21', open: 59.10, high: 59.63, low: 58.76, close: 59.50 },
            { time: '2019-05-22', open: 59.09, high: 59.37, low: 58.96, close: 59.25 },
            { time: '2019-05-23', open: 59.00, high: 59.27, low: 58.54, close: 58.87 },
            { time: '2019-05-24', open: 59.07, high: 59.36, low: 58.67, close: 59.32 },
            { time: '2019-05-28', open: 59.21, high: 59.66, low: 59.02, close: 59.57 },
        ];
        candleSeries.setData(data);
        var lastClose = data[data.length - 1].close;
        var lastIndex = data.length - 1;
        var targetIndex = lastIndex + 105 + Math.round(Math.random() + 30);
        var targetPrice = getRandomPrice();
        var currentIndex = lastIndex + 1;
        var currentBusinessDay = { day: 29, month: 5, year: 2019 };
        var ticksInCurrentBar = 0;
        var currentBar = {
            open: null,
            high: null,
            low: null,
            close: null,
            time: currentBusinessDay,
        };
        function mergeTickToBar(price) {
            if (currentBar.open === null) {
                currentBar.open = price;
                currentBar.high = price;
                currentBar.low = price;
                currentBar.close = price;
            }
            else {
                currentBar.close = price;
                currentBar.high = Math.max(currentBar.high, price);
                currentBar.low = Math.min(currentBar.low, price);
            }
            candleSeries.update(currentBar);
        }
        function reset() {
            candleSeries.setData(data);
            lastClose = data[data.length - 1].close;
            lastIndex = data.length - 1;
            targetIndex = lastIndex + 5 + Math.round(Math.random() + 30);
            targetPrice = getRandomPrice();
            currentIndex = lastIndex + 1;
            currentBusinessDay = { day: 29, month: 5, year: 2019 };
            ticksInCurrentBar = 0;
        }
        function getRandomPrice() {
            return 10 + Math.round(Math.random() * 10000) / 100;
        }
        function nextBusinessDay(time) {
            var d = new Date();
            d.setUTCFullYear(time.year);
            d.setUTCMonth(time.month - 1);
            d.setUTCDate(time.day + 1);
            d.setUTCHours(0, 0, 0, 0);
            return {
                year: d.getUTCFullYear(),
                month: d.getUTCMonth() + 1,
                day: d.getUTCDate(),
            };
        }
        setInterval(function () {
            var deltaY = targetPrice - lastClose;
            var deltaX = targetIndex - lastIndex;
            var angle = deltaY / deltaX;
            var basePrice = lastClose + (currentIndex - lastIndex) * angle;
            var noise = (0.1 - Math.random() * 0.2) + 1.0;
            var noisedPrice = basePrice * noise;
            mergeTickToBar(noisedPrice);
            if (++ticksInCurrentBar === 5) {
                // move to next bar
                currentIndex++;
                currentBusinessDay = nextBusinessDay(currentBusinessDay);
                currentBar = {
                    open: null,
                    high: null,
                    low: null,
                    close: null,
                    time: currentBusinessDay,
                };
                ticksInCurrentBar = 0;
                if (currentIndex === 5000) {
                    reset();
                    return;
                }
                if (currentIndex === targetIndex) {
                    // change trend
                    lastClose = noisedPrice;
                    lastIndex = currentIndex;
                    targetIndex = lastIndex + 5 + Math.round(Math.random() + 30);
                    targetPrice = getRandomPrice();
                }
            }
        }, 200);
    }
    processData_simulated(instru, strike, type, currDate, tillEnd = false, HrsToStart = null, MinsToStart = null, startToCurrent = false, increment = null) {
        let data = _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.stockChartData[instru + 'WK' + strike + type];
        //console.log('data2:', instru + 'WK' + strike + type, data);
        if (!data) {
            data = _common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.stockChartData[instru + strike + type];
            //console.log('data3:', instru + strike + type, data);
        }
        let trimmedData = [];
        let startInd = -1;
        if (true) {
            for (let i = 0; i < data.length; i++) {
                let arr = data[i];
                let timestamp = arr[0];
                let tsDate = new Date(timestamp);
                if (HrsToStart) {
                    let cDate = new Date(currDate);
                    cDate.setHours(HrsToStart, MinsToStart);
                    /* cDate.setHours(0,0,0,0);
                    if (HrsToStart && MinsToStart) {
                      cDate.setHours(HrsToStart, MinsToStart);
                    } */
                    if (tillEnd) {
                        if (cDate && tsDate.getTime() >= cDate.getTime()) {
                            trimmedData.push(arr);
                            if (startInd === -1) {
                                startInd = i;
                            }
                        }
                    }
                    else {
                        if (cDate && tsDate.getTime() >= cDate.getTime() && tsDate.getDate() === currDate.getDate() && tsDate.getMonth() === currDate.getMonth() && tsDate.getFullYear() === currDate.getFullYear()) {
                            trimmedData.push(arr);
                            if (startInd === -1) {
                                startInd = i;
                            }
                        }
                    }
                }
                else if (startToCurrent) { // all data of this scrip from its beginning to today
                    let cDate = new Date(currDate);
                    if (cDate) {
                        cDate.setDate(cDate.getDate() + 1);
                    }
                    if (cDate && tsDate < cDate) {
                        trimmedData.push(arr);
                        if (startInd === -1) {
                            startInd = i;
                        }
                    }
                }
                else { // current day only
                    if (currDate && tsDate.getDate() === currDate.getDate() && tsDate.getMonth() === currDate.getMonth() && tsDate.getFullYear() === currDate.getFullYear()) {
                        trimmedData.push(arr);
                        if (startInd === -1) {
                            startInd = i;
                        }
                    }
                }
            }
        }
        /*
        let extraStart = startInd - 60; // previous day's 1 hour
        if (extraStart < 0) {
          extraStart = 0;
        }
        //console.log('extra:', extraStart, startInd);
        let extraData = data.slice(extraStart, startInd);
        //console.log('extra data:', extraData);
        trimmedData = [...extraData, ...trimmedData];
        */
        console.log('trimmedData:', trimmedData);
        /* for (let j = 0; j < trimmedData.length; j++) {
          console.log(new Date(trimmedData[j][0]));
        } */
        if (increment && increment === 1) {
            return trimmedData;
        }
        let processed_data = [];
        let t = null;
        let o = null;
        let h = null;
        let l = null;
        let c = null;
        let v = 0;
        // *** convert 1 minute candles to 5 minute candles
        for (let i = 0; i < trimmedData.length; i++) {
            let arr = trimmedData[i];
            let timestamp = arr[0];
            if (new Date(timestamp).getMinutes() % 5 === 0) {
                if (t) { // to handle case where this minute is first in data series
                    processed_data.push([t, o, h, l, c, v]);
                }
                t = arr[0];
                o = arr[1];
                h = arr[2];
                l = arr[3];
                c = null;
                v = 0;
            }
            else {
                if (o === null) {
                    o = arr[1];
                }
                if (h === null || arr[2] > h) {
                    h = arr[2];
                }
                if (l === null || arr[3] < l) {
                    l = arr[3];
                }
                if ((new Date(timestamp).getMinutes() + 1) % 5 === 0) {
                    c = arr[4];
                }
                if (i === trimmedData.length - 1) { // to handle case where this is last minute in data series
                    c = arr[4];
                    processed_data.push([t, o, h, l, c, v]);
                }
                v += arr[5];
            }
        }
        console.log('processed_data:', processed_data);
        // this.updateChart(processed_data, display);
        //this.plotSimulatedChartForSpot(processed_data);
        return processed_data;
    }
    initSpotChart_simulated(instru, simulateCurrDateObj, tillEnd = false, HrsToStart = null, MinsToStart = null) {
        this.spot_chart_instru = instru;
        if (this.spot_chart_chart) {
            this.spot_chart_chart.remove();
        }
        let div_id = 'spot-chart-simulate';
        this.spot_chart_chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
            width: 320,
            height: 200,
            timeScale: {
                timeVisible: true,
            },
            /* layout: {
              textColor: '#d1d4dc',
              backgroundColor: '#000000',
            }, */
        });
        this.spot_candlestickSeries = this.spot_chart_chart.addCandlestickSeries();
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        let arr = this.processData_simulated(instru, '', '', simulateCurrDateObj, tillEnd, HrsToStart, MinsToStart);
        let data = [];
        for (let j = 0; j < arr.length; j++) {
            let element = arr[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
            data.push(data_entry);
        }
        this.spot_candlestickSeries.setData(data);
        this.spot_chart_chart.timeScale().fitContent();
    }
    init_opt_charts_simulated(instru, call_start_strike, call_end_strike, put_start_strike, put_end_strike, strike_interval, expiry) {
        for (let key in this.charts) {
            if (Object.prototype.hasOwnProperty.call(this.charts, key)) {
                let chart = this.charts[key];
                chart.remove();
            }
        }
        this.charts = {};
        this.charts_instru = instru;
        this.strike_interval = strike_interval;
        this.charts_expiry = expiry;
        this.initForCallsPuts_simulated(call_start_strike, call_end_strike, strike_interval, 'CE');
        this.initForCallsPuts_simulated(put_start_strike, put_end_strike, strike_interval, 'PE');
    }
    initForCallsPuts_simulated(start_strike, end_strike, strike_interval, type) {
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        let c1 = 0;
        for (let strike = end_strike; strike >= start_strike; strike -= strike_interval) {
            let div_id = 'opt_chart_' + c1 + type;
            console.log('div_id', div_id);
            let chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
                width: 320,
                height: 200,
                timeScale: {
                    timeVisible: true,
                },
                /* layout: {
                  textColor: '#d1d4dc',
                  backgroundColor: '#000000',
                }, */
            });
            let arr = this.processData_simulated(this.charts_instru, strike, type, this.charts_expiry);
            let data = [];
            for (let j = 0; j < arr.length; j++) {
                let element = arr[j];
                let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
                let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
                data.push(data_entry);
            }
            let c = chart.addCandlestickSeries();
            c.setData(data);
            chart.timeScale().fitContent();
            this.candlestickSeries['' + strike + type] = c;
            this.charts['' + strike + type] = chart;
            c1++;
        }
    }
    getStrangleValues(data1, data2) {
        let processed_data = [];
        //console.log('aniket getStrangleValues', data1, data2);
        for (let j = 0; j < data1.length; j++) {
            let element1 = data1[j];
            let element2 = data2[j];
            let c;
            //console.log('aniket elements', element1, element2);
            if (typeof element1[4] !== 'undefined') {
                c = element1[4] + element2[4];
            }
            else {
                c = element1[1] + element2[1];
            }
            processed_data.push([element1[0], c]);
        }
        return processed_data;
    }
    initStrangleChart_simulated(instru, simulateCurrDateObj, strike1, strike2, tillEnd = false, HrsToStart = null, MinsToStart = null) {
        // console.log('aniket', simulateCurrDateObj, HrsToStart, MinsToStart);
        this.initSpotChart_simulated(instru, simulateCurrDateObj, tillEnd, HrsToStart, MinsToStart);
        if (this.strangle_chart_chart) {
            this.strangle_chart_chart.remove();
        }
        let div_id = 'strangle-chart';
        this.strangle_chart_chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
            width: 320,
            height: 200,
            timeScale: {
                timeVisible: true,
            },
            /* layout: {
              textColor: '#d1d4dc',
              backgroundColor: '#000000',
            }, */
        });
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        let arr1 = this.processData_simulated(instru, strike1, '', simulateCurrDateObj, tillEnd, HrsToStart, MinsToStart);
        let arr2 = this.processData_simulated(instru, strike2, '', simulateCurrDateObj, tillEnd, HrsToStart, MinsToStart);
        let arr = this.getStrangleValues(arr1, arr2);
        console.log('arr1', arr1);
        console.log('arr2', arr2);
        console.log('arr', arr);
        let data = [];
        for (let j = 0; j < arr.length; j++) {
            let element = arr[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = { time: Date.parse(localISOTime) / 1000, value: element[1] };
            data.push(data_entry);
        }
        let c = this.strangle_chart_chart.addLineSeries({});
        c.setData(data);
        this.strangle_chart_chart.timeScale().fitContent();
    }
    // charts with supertrend
    initForCallsPuts_simulated_0(charts_instru, expiry_date, st_chart_radio, st_chart_strike) {
        for (let key in this.charts) {
            if (Object.prototype.hasOwnProperty.call(this.charts, key)) {
                let chart = this.charts[key];
                chart.remove();
            }
        }
        this.charts = {};
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_ce = [];
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_pe = [];
        let currDate = new Date(expiry_date);
        currDate.setDate(currDate.getDate() + 1);
        currDate.setHours(9);
        currDate.setMinutes(30);
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        for (let n = 0; n <= 6; n++) {
            let e;
            while (true) {
                console.log('ST curr date', currDate, e);
                currDate.setDate(currDate.getDate() - 1);
                currDate.setHours(9);
                currDate.setMinutes(30);
                let curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
                let simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
                this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
                e = this.mapService.getScripLTP(null, null, charts_instru, null);
                if (e) {
                    break;
                }
                else {
                    console.log('ST curr date going back');
                }
            }
            let strike_diff = 50;
            if (charts_instru === 'BANKNIFTY') {
                strike_diff = 100;
            }
            else if (charts_instru === 'FINNIFTY') {
                strike_diff = 50;
            }
            else if (charts_instru === 'MIDCPNIFTY') {
                strike_diff = 25;
            }
            else if (charts_instru === 'SENSEX') {
                strike_diff = 100;
            }
            else if (charts_instru === 'BANKEX') {
                strike_diff = 100;
            }
            else if (charts_instru === 'USDINR') {
                strike_diff = 0.25;
            }
            let spotStrike = (Math.round(e / strike_diff) * strike_diff);
            console.log('ST spotstrike', spotStrike);
            let ce_strike = spotStrike + Number(st_chart_strike);
            let pe_strike = spotStrike - Number(st_chart_strike);
            //////// SPOT PLOTTING ////////
            let arr_spot = this.processData_simulated(charts_instru, '', '', currDate);
            let data_spot = [];
            for (let j = 0; j < arr_spot.length; j++) {
                let element = arr_spot[j];
                let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
                let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
                data_spot.push(data_entry);
            }
            let div_id_spot = 'opt_chart_' + n + '_spot';
            let chart_spot = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id_spot, {
                width: 320,
                height: 240,
                timeScale: {
                    timeVisible: true,
                },
                crosshair: {
                    mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
                },
            });
            let c_spot = chart_spot.addCandlestickSeries();
            c_spot.setData(data_spot);
            chart_spot.timeScale().fitContent();
            this.charts['opt_chart_' + n + '_spot'] = chart_spot;
            ///////// CE PLOTTING ////////
            let arr_ce = this.processData_simulated(charts_instru, ce_strike, 'CE', currDate, false, null, null, true);
            let data_ce = [];
            for (let j = 0; j < arr_ce.length; j++) {
                let element = arr_ce[j];
                let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
                let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
                data_ce.push(data_entry);
            }
            let st_arr_ce = this.supertrend_calc(data_ce); // 0: ST of 10 2, 1: ST of 7 3
            let div_id_ce = 'opt_chart_' + n + '_CE';
            console.log('div_id_ce', div_id_ce);
            let chart_ce = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id_ce, {
                width: 320,
                height: 240,
                timeScale: {
                    timeVisible: true,
                },
                crosshair: {
                    mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
                },
            });
            let c_ce = chart_ce.addCandlestickSeries();
            c_ce.setData(this.getCurrDateData(currDate, data_ce));
            if (st_chart_radio === '10_2' || st_chart_radio === 'both') {
                let line1_ce = chart_ce.addLineSeries({ lineWidth: 1 });
                line1_ce.setData(this.getCurrDateData(currDate, st_arr_ce[0]));
            }
            if (st_chart_radio === '7_3' || st_chart_radio === 'both') {
                let line2_ce = chart_ce.addLineSeries({ lineWidth: 1 });
                line2_ce.setData(this.getCurrDateData(currDate, st_arr_ce[1]));
            }
            chart_ce.timeScale().fitContent();
            this.charts['opt_chart_' + n + '_CE'] = chart_ce;
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_ce.push(ce_strike + 'CE');
            ///////// PE PLOTTING ////////
            let arr_pe = this.processData_simulated(charts_instru, pe_strike, 'PE', currDate, false, null, null, true);
            let data_pe = [];
            for (let j = 0; j < arr_pe.length; j++) {
                let element = arr_pe[j];
                let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
                let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
                data_pe.push(data_entry);
            }
            let st_arr_pe = this.supertrend_calc(data_pe); // 0: ST of 10 2, 1: ST of 7 3
            let div_id = 'opt_chart_' + n + '_PE';
            console.log('div_id', div_id);
            let chart_pe = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
                width: 320,
                height: 240,
                timeScale: {
                    timeVisible: true,
                },
                crosshair: {
                    mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
                },
            });
            let c_pe = chart_pe.addCandlestickSeries();
            c_pe.setData(this.getCurrDateData(currDate, data_pe));
            if (st_chart_radio === '10_2' || st_chart_radio === 'both') {
                let line1_pe = chart_pe.addLineSeries({ lineWidth: 1 });
                line1_pe.setData(this.getCurrDateData(currDate, st_arr_pe[0]));
            }
            if (st_chart_radio === '7_3' || st_chart_radio === 'both') {
                let line2_pe = chart_pe.addLineSeries({ lineWidth: 1 });
                line2_pe.setData(this.getCurrDateData(currDate, st_arr_pe[1]));
            }
            chart_pe.timeScale().fitContent();
            this.charts['opt_chart_' + n + '_PE'] = chart_pe;
            _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_pe.push(pe_strike + 'PE');
        }
    }
    getCurrDateData(currDate, data) {
        let cData = [];
        data.forEach(element => {
            let eDate = new Date(element.time * 1000);
            //console.log('cData', element.time, eDate, currDate);
            if (eDate.getDate() === currDate.getDate() && eDate.getMonth() === currDate.getMonth() && eDate.getFullYear() === currDate.getFullYear()) {
                cData.push(element);
            }
        });
        //console.log('cData', cData);
        return cData;
    }
    supertrend_calc(data) {
        let st_1 = new _debut_indicators__WEBPACK_IMPORTED_MODULE_3__.SuperTrend(10, 2, 'WEMA');
        let st_2 = new _debut_indicators__WEBPACK_IMPORTED_MODULE_3__.SuperTrend(7, 3, 'WEMA');
        let lineData1 = [];
        let lineData2 = [];
        data.forEach(element => {
            let curr1 = st_1.nextValue(element.high, element.low, element.close);
            // console.log('ST1', curr);
            let st_value1 = undefined;
            let st_color1 = 'green';
            if (curr1) {
                st_value1 = curr1.superTrend;
                if (curr1.direction === 1) {
                    st_color1 = 'red';
                }
            }
            let data_entry_line1 = { time: element.time, value: st_value1, color: st_color1 };
            lineData1.push(data_entry_line1);
            let curr2 = st_2.nextValue(element.high, element.low, element.close);
            // console.log('ST2', curr);
            let st_value2 = undefined;
            let st_color2 = 'green';
            if (curr2) {
                st_value2 = curr2.superTrend;
                if (curr2.direction === 1) {
                    st_color2 = 'red';
                }
            }
            let data_entry_line2 = { time: element.time, value: st_value2, color: st_color2 };
            lineData2.push(data_entry_line2);
        });
        return [lineData1, lineData2];
    }
    loadSimulatedOCForTime(instru, dateTimeString, expiry_date) {
        let curr_date_time = dateTimeString;
        console.log('ST loadSimulatedOCForTime', curr_date_time);
        for (let [key, value] of Object.entries(_common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService.simulateData)) {
            // console.log(`${key}: ${value}`);
            if (key === instru || (key.startsWith(instru) && (key.endsWith('CE') || key.endsWith('PE')))) {
                if (key === instru) {
                    let symbol = instru;
                    if (instru === 'NIFTY') {
                        symbol = 'NIFTY50';
                    }
                    if (instru === 'USDINR') {
                        symbol = 'USDINR';
                        // let expiry = this.mapService.getExpiryString(AppConstants.monthlyExpiryDatesUSDINR[AppConstants.year + AppConstants.USDINR_FUT_MONTH]);
                        // symbol = 'USDINR' + expiry + AppConstants.USDINR_FUT_MONTH + 'FUT';
                    }
                    this.mapService.setLtp(symbol, value[curr_date_time]);
                }
                else {
                    let scrip = key;
                    scrip = scrip.replace(instru, '');
                    scrip = scrip.replace('WK', '');
                    let object = { instru: instru, expiry: expiry_date, strike: this.mapService.parseScrip(scrip).scrip, optionType: this.mapService.parseScrip(scrip).type };
                    let symbol = this.mapService.getMapKey(object);
                    let ltp = value[curr_date_time];
                    this.mapService.setLtp(symbol, ltp);
                }
            }
        }
        console.log('ST ltpMap', this.mapService.ltpMap);
    }
    initForCallsPuts_simulated_1(charts_instru, expiry_date, show_charts, st_chart_radio, st_chart_strike) {
        for (let key in this.charts) {
            if (Object.prototype.hasOwnProperty.call(this.charts, key)) {
                let chart = this.charts[key];
                chart.remove();
            }
        }
        this.charts = {};
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts = [];
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_values = [];
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print = [];
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print_strangle = [];
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_exits = [];
        let increment = 5;
        if (st_chart_radio === '1min') {
            increment = 1;
        }
        let currDate = new Date(expiry_date);
        currDate.setDate(currDate.getDate() + 1);
        currDate.setHours(9);
        currDate.setMinutes(30);
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        for (let n = 0; n <= 6; n++) {
            let count = 0;
            while (true) { // find working day
                currDate.setDate(currDate.getDate() - 1);
                currDate.setHours(9);
                currDate.setMinutes(30);
                console.log('ST curr date', currDate);
                let curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
                let simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
                this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
                let e = this.mapService.getScripLTP(null, null, charts_instru, null);
                if (e) {
                    break;
                }
                else {
                    console.log('ST curr date going back');
                }
            }
            if (n === 0 || n === 1) { // skipping 0DTE and 1DTE as using next week expiry for these days
                continue;
            }
            let distance_to_search = 500;
            let strike_diff = 50;
            if (charts_instru === 'BANKNIFTY') {
                strike_diff = 100;
                distance_to_search = 6000;
            }
            else if (charts_instru === 'FINNIFTY') {
                strike_diff = 50;
            }
            else if (charts_instru === 'MIDCPNIFTY') {
                strike_diff = 25;
            }
            else if (charts_instru === 'SENSEX') {
                strike_diff = 100;
            }
            else if (charts_instru === 'BANKEX') {
                strike_diff = 100;
            }
            else if (charts_instru === 'USDINR') {
                strike_diff = 0.25;
            }
            //////// SPOT PLOTTING ////////
            if (show_charts) {
                let arr_spot = this.processData_simulated(charts_instru, '', '', currDate, false, null, null, false, increment);
                let data_spot = [];
                for (let j = 0; j < arr_spot.length; j++) {
                    let element = arr_spot[j];
                    let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
                    let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
                    data_spot.push(data_entry);
                }
                let div_id_spot = 'opt_chart_' + n + '_spot';
                let chart_spot = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id_spot, {
                    width: 320,
                    height: 160,
                    timeScale: {
                        timeVisible: true,
                    },
                    crosshair: {
                        mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
                    },
                });
                let c_spot = chart_spot.addCandlestickSeries();
                c_spot.setData(data_spot);
                chart_spot.timeScale().fitContent();
                this.charts['opt_chart_' + n + '_spot'] = chart_spot;
                _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + n + '_spot'] = charts_instru;
            }
            ///////// OPTION PLOTTING ////////
            while (true) { // till 3'o clock
                let curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
                let simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
                this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
                let atm = this.mapService.getScripLTP(null, null, charts_instru, null);
                atm = (Math.round(atm / strike_diff) * strike_diff);
                // console.log('ST atm', atm);
                console.log('curr time', currDate);
                let ce_strike = this.findPremiumStrike(charts_instru, expiry_date, atm, 'CE', strike_diff, 40, distance_to_search);
                let stTrigger_ce = this.isSTCondition(charts_instru, ce_strike, 'CE', currDate, increment);
                if (stTrigger_ce[0] === true) {
                    if (show_charts) {
                        let div_id = 'opt_chart_' + n + '_' + count;
                        console.log('div_id', div_id);
                        let chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
                            width: 320,
                            height: 180,
                            timeScale: {
                                timeVisible: true,
                            },
                            crosshair: {
                                mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
                            },
                        });
                        let c = chart.addCandlestickSeries();
                        c.setData(this.getCurrDateData(currDate, stTrigger_ce[1]));
                        let line1 = chart.addLineSeries({ lineWidth: 1 });
                        line1.setData(this.getCurrDateData(currDate, stTrigger_ce[2]));
                        chart.timeScale().fitContent();
                        this.charts['opt_chart_' + n + '_' + count] = chart;
                    }
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + n + '_' + count] = ce_strike + 'CE ' + currDate.toLocaleString();
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_values['opt_chart_' + n + '_' + count] = stTrigger_ce[3];
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print['opt_chart_' + n + '_' + count] = ce_strike + 'CE,' + currDate.toLocaleString() + ',' + stTrigger_ce[3];
                    count++;
                }
                let pe_strike = this.findPremiumStrike(charts_instru, expiry_date, atm, 'PE', strike_diff, 40, distance_to_search);
                let stTrigger_pe = this.isSTCondition(charts_instru, pe_strike, 'PE', currDate, increment);
                if (stTrigger_pe[0] === true) {
                    if (show_charts) {
                        let div_id = 'opt_chart_' + n + '_' + count;
                        console.log('div_id', div_id);
                        let chart = (0,lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.createChart)(div_id, {
                            width: 320,
                            height: 180,
                            timeScale: {
                                timeVisible: true,
                            },
                            crosshair: {
                                mode: lightweight_charts__WEBPACK_IMPORTED_MODULE_2__.CrosshairMode.Normal,
                            },
                        });
                        let c = chart.addCandlestickSeries();
                        c.setData(this.getCurrDateData(currDate, stTrigger_pe[1]));
                        let line1 = chart.addLineSeries({ lineWidth: 1 });
                        line1.setData(this.getCurrDateData(currDate, stTrigger_pe[2]));
                        chart.timeScale().fitContent();
                        this.charts['opt_chart_' + n + '_' + count] = chart;
                    }
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts['opt_chart_' + n + '_' + count] = pe_strike + 'PE ' + currDate.toLocaleString();
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_values['opt_chart_' + n + '_' + count] = stTrigger_pe[3];
                    _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print['opt_chart_' + n + '_' + count] = pe_strike + 'PE,' + currDate.toLocaleString() + ',' + stTrigger_pe[3];
                    count++;
                }
                currDate.setMinutes(currDate.getMinutes() + increment);
                if (currDate.getHours() >= 15 && currDate.getMinutes() >= 5) {
                    break;
                }
            }
            this.processStrangle(charts_instru, expiry_date, strike_diff, distance_to_search, currDate, n);
        }
        let str = '';
        for (let key in _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print) {
            if (Object.prototype.hasOwnProperty.call(_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print, key)) {
                let values = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print[key];
                str += values + '\r\n';
            }
        }
        for (let key in _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print_strangle) {
            if (Object.prototype.hasOwnProperty.call(_common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print_strangle, key)) {
                let values = _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print_strangle[key];
                str += values + '\r\n';
            }
        }
        let sum = 0;
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_exits.forEach(element => {
            sum += element;
        });
        console.log('done loading\r\n', str, sum);
    }
    isSTCondition(charts_instru, strike, type, currDate, increment) {
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        let arr = this.processData_simulated(charts_instru, strike, type, currDate, false, null, null, true, increment);
        let data = [];
        for (let j = 0; j < arr.length; j++) {
            let element = arr[j];
            let localISOTime = (new Date(element[0] - tzoffset)).toISOString();
            let data_entry = { time: Date.parse(localISOTime) / 1000, open: element[1], high: element[2], low: element[3], close: element[4] };
            data.push(data_entry);
        }
        let st_arr = this.supertrend_calc(data); // 0: ST of 10 2, 1: ST of 7 3
        let localISOTime_tofind = (new Date(currDate.getTime() - tzoffset)).toISOString();
        let time_tofind = Date.parse(localISOTime_tofind) / 1000;
        let obj_curr = st_arr[0].find(o => o.time === time_tofind);
        let prev_time = new Date(currDate);
        prev_time.setMinutes(prev_time.getMinutes() - increment);
        let localISOTime_prev = (new Date(prev_time.getTime() - tzoffset)).toISOString();
        let time_prev = Date.parse(localISOTime_prev) / 1000;
        let obj_prev = st_arr[0].find(o => o.time === time_prev);
        if (increment === 5 && currDate.getHours() === 9 && currDate.getMinutes() === 30) {
            // ST green at 9:30 since open, only for 5 mins chart
            /* let time_920 = new Date(currDate);
            time_920.setMinutes(time_920.getMinutes() - 10);
            let localISOTime_920 = (new Date(time_920.getTime() - tzoffset)).toISOString();
            let time_920_ = Date.parse(localISOTime_920) / 1000 as any;
            let obj_920 = st_arr[0].find(o => o.time === time_920_);
      
            let time_915 = new Date(currDate);
            time_915.setMinutes(time_915.getMinutes() - 15);
            let localISOTime_915 = (new Date(time_915.getTime() - tzoffset)).toISOString();
            let time_915_ = Date.parse(localISOTime_915) / 1000 as any;
            let obj_915 = st_arr[0].find(o => o.time === time_915_); */
            if (obj_prev.color === 'green' && obj_curr.color === 'green' /* && obj_920.color === 'green' && obj_915.color === 'green' */) {
                console.log('ST found continuation at open', obj_prev, obj_curr);
                let values = this.findSTExit(st_arr[0], data, currDate, increment);
                return [true, data, st_arr[0], values];
            }
        }
        if (obj_prev && obj_curr && obj_prev.color === 'red' && obj_curr.color === 'green') {
            console.log('ST found', obj_prev, obj_curr);
            let values = this.findSTExit(st_arr[0], data, currDate, increment);
            return [true, data, st_arr[0], values];
        }
        else {
            return [false];
        }
    }
    findSTExit(st_arr, data, currDate, increment) {
        let tzoffset = (new Date()).getTimezoneOffset() * 60000; // offset in milliseconds
        let target = 8;
        let SL = -8;
        let exit_done = null;
        let entry = null;
        let high = null;
        let low = null;
        let high_before_low = null;
        let exit = null;
        let st_at_entry = null;
        let prev_st = null;
        let cDate0 = new Date(currDate);
        let localISOTime0 = (new Date(cDate0.getTime() - tzoffset)).toISOString();
        let time0 = Date.parse(localISOTime0) / 1000;
        let data_curr0 = data.find(o => o.time === time0);
        entry = data_curr0.close;
        let st_curr0 = st_arr.find(o => o.time === time0);
        st_at_entry = st_curr0.value;
        let cDate = new Date(currDate);
        let entry_candle = true;
        while (true) {
            let localISOTime = (new Date(cDate.getTime() - tzoffset)).toISOString();
            let time = Date.parse(localISOTime) / 1000;
            let data_curr = data.find(o => o.time === time);
            if (!entry_candle && exit_done === null) {
                if (data_curr.high - entry >= target) {
                    exit_done = target;
                }
                else if (data_curr.low - entry <= SL) {
                    exit_done = SL;
                }
            }
            if (entry_candle === true) { // skip entry candle
                low = 999;
                high_before_low = entry;
            }
            else if (data_curr && data_curr.low < low) {
                low = data_curr.low;
                high_before_low = high;
            }
            if (entry_candle === true) { // skip entry candle
                high = 0;
            }
            else if (data_curr && data_curr.high > high) {
                high = data_curr.high;
            }
            let obj_curr = st_arr.find(o => o.time === time);
            // console.log('findSTExit', cDate, obj_curr.color, data_curr.close);
            if (obj_curr && obj_curr.color === 'red') {
                exit = data_curr.close;
                break;
            }
            if (obj_curr) {
                prev_st = obj_curr.value;
            }
            cDate.setMinutes(cDate.getMinutes() + increment);
            if (cDate.getHours() >= 15 && cDate.getMinutes() >= 20) {
                exit = data_curr.close;
                break;
            }
            entry_candle = false;
        }
        if (exit_done === null) {
            exit_done = exit - entry;
        }
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_exits.push(exit_done);
        let target_reached_at_some_time = 'No';
        if (high - entry >= target) {
            target_reached_at_some_time = 'Yes';
        }
        return Math.round(entry * 10) / 10 + ',' + Math.round(high * 10) / 10 + ',' + Math.round(low * 10) / 10 + ',' + Math.round(exit * 10) / 10 + ',' + Math.round(st_at_entry * 10) / 10 + ',' + Math.round(prev_st * 10) / 10 /*   + ',' + Math.round(exit_done * 10) / 10 + ',' + target_reached_at_some_time */; // [entry, high, low, exit, st_at_entry, prev_st, exit_done, target_reached] rounded to 1 decimal
    }
    findPremiumStrike(instru, expiry, atm_strike, type, strike_diff, premium_to_find, distance_to_search) {
        let selected_strike;
        let selected_premium;
        let min_diff = 99999999;
        if (type === 'CE') {
            for (let strike = atm_strike; strike <= atm_strike + distance_to_search; strike += strike_diff) {
                let ltp = this.mapService.getScripLTP(instru, new Date(expiry), strike, 'CE');
                let diff = Math.abs(ltp - premium_to_find);
                if (diff < min_diff) {
                    min_diff = diff;
                    selected_strike = strike;
                    selected_premium = ltp;
                }
            }
        }
        else if (type === 'PE') {
            for (let strike = atm_strike; strike >= atm_strike - distance_to_search; strike -= strike_diff) {
                let ltp = this.mapService.getScripLTP(instru, new Date(expiry), strike, 'PE');
                let diff = Math.abs(ltp - premium_to_find);
                if (diff < min_diff) {
                    min_diff = diff;
                    selected_strike = strike;
                    selected_premium = ltp;
                }
            }
        }
        console.log('selecting for ST', selected_strike, type, selected_premium);
        return selected_strike;
    }
    processStrangle(charts_instru, expiry_date, strike_diff, distance_to_search, currDate, n) {
        // currDate.setDate(currDate.getDate() - 1);
        currDate.setHours(9);
        currDate.setMinutes(20);
        console.log('strangle entry curr date', currDate);
        let curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
        let simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
        this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
        let atm = this.mapService.getScripLTP(null, null, charts_instru, null);
        atm = (Math.round(atm / strike_diff) * strike_diff);
        let ce_strike = this.findPremiumStrike(charts_instru, expiry_date, atm, 'CE', strike_diff, 25, distance_to_search);
        let pe_strike = this.findPremiumStrike(charts_instru, expiry_date, atm, 'PE', strike_diff, 25, distance_to_search);
        let ce_ltp_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike, 'CE');
        let pe_ltp_entry = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike, 'PE');
        let strangle_entry = ce_ltp_entry + pe_ltp_entry;
        currDate.setHours(15);
        currDate.setMinutes(20);
        console.log('strangle exit curr date', currDate);
        curr_date_string = '' + ('0' + currDate.getDate()).slice(-2) + '-' + ('0' + (currDate.getMonth() + 1)).slice(-2) + '-' + currDate.getFullYear();
        simulateCurrDateTimeString = curr_date_string + ' ' + ('0' + currDate.getHours()).slice(-2) + ':' + ('0' + currDate.getMinutes()).slice(-2) + ':00'; // '21-10-2021 09:15:00'
        this.loadSimulatedOCForTime(charts_instru, simulateCurrDateTimeString, expiry_date);
        let ce_ltp_exit = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), ce_strike, 'CE');
        let pe_ltp_exit = this.mapService.getScripLTP(charts_instru, new Date(expiry_date), pe_strike, 'PE');
        let strangle_exit = ce_ltp_exit + pe_ltp_exit;
        console.log('strangle', ce_ltp_entry, pe_ltp_entry, strangle_entry, ce_ltp_exit, pe_ltp_exit, strangle_exit);
        // AppConstants.st_simulate_charts_print['opt_chart_' + n + '_strangle'] = 'strangle,' + currDate.toLocaleString() + ',' + (Math.round(strangle_entry * 10) / 10) + ',' + (Math.round(strangle_exit * 10) / 10);
        _common_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.st_simulate_charts_print_strangle['opt_chart_' + n + '_strangle'] = 'strangle,' + currDate.toLocaleString() + ',' + (Math.round(strangle_entry * 10) / 10) + ',' + (Math.round(strangle_exit * 10) / 10);
    }
}
ChartingService.ɵfac = function ChartingService_Factory(t) { return new (t || ChartingService)(_angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_8__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_common_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_common_fyers_service__WEBPACK_IMPORTED_MODULE_4__.FyersService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_common_aliceblue_service__WEBPACK_IMPORTED_MODULE_5__.AliceblueService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_common_zerodha_service__WEBPACK_IMPORTED_MODULE_6__.ZerodhaService), _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵinject"](_app_service__WEBPACK_IMPORTED_MODULE_7__.AppService)); };
ChartingService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_9__["ɵɵdefineInjectable"]({ token: ChartingService, factory: ChartingService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 4256:
/*!****************************************************!*\
  !*** ./src/app/common/aliceblue-parser.service.ts ***!
  \****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AliceblueParserService": () => (/* binding */ AliceblueParserService)
/* harmony export */ });
/* harmony import */ var _application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application.constant */ 8001);
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models */ 8077);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _map_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./map.service */ 397);





class AliceblueParserService {
    constructor(http, mapService) {
        this.http = http;
        this.mapService = mapService;
    }
    handleSocketMessage(data) {
        // {"t":"tk","pp":"2","ml":"1","e":"NSE","tk":"26009","ls":"1","ti":"0.05","c":"37647.75","lp":"38631.95","pc":"2.61","ft":"1664532072","o":"37660.00","h":"38811.00","l":"37386.35","toi":"12594650"}
        console.log('AliceblueService message', data);
        this.parseSocketMessageNew(data);
    }
    parseSocketMessageNew(data) {
        // {"t":"tk","pp":"2","ml":"1","e":"NSE","tk":"26009","ls":"1","ti":"0.05","c":"37647.75","lp":"38631.95","pc":"2.61","ft":"1664532072","o":"37660.00","h":"38811.00","l":"37386.35","toi":"12594650"}
        /*
        t - type, tf – tick feed, tk - tick acknowledgement
        e -exchange
        tk - token
        lp – LTP (Last traded price)
        pc – Percentage change
        cv – change value (Absolute change in price)
        v – volume
        o – open
        h – high
        l – low
        c – close
        ap – Average Price
        symbol – Symbol Name
        */
        let json = JSON.parse(data);
        let p = new _models__WEBPACK_IMPORTED_MODULE_1__.AliceMarketData();
        p.token = Number(json.tk);
        p.exchange_code = json.e;
        if (json.lp) {
            p.ltp = Number(json.lp);
        }
        if (json.atp) {
            p.atp = Number(json.ap);
        }
        if (json.v) {
            p.volume = Number(json.v);
        }
        if (json.o) {
            p.open = Number(json.o);
        }
        if (json.h) {
            p.high = Number(json.h);
        }
        if (json.l) {
            p.low = Number(json.l);
        }
        if (json.c) {
            p.close = Number(json.c);
        }
        if (p.ltp) {
            //this.updateMaps(p);
            this.mapService.updateMaps_aliceblue(p);
        }
    }
    parseSocketMessage(binaryData) {
        const dataByteArry = new Uint8Array(binaryData);
        if (dataByteArry instanceof Uint8Array) {
            let mode = dataByteArry[0];
            // let payload = dataByteArry.subarray(1);
            // console.log('mode', mode);
            if (mode === _models__WEBPACK_IMPORTED_MODULE_1__.AliceBlueWsFrameMode.MARKETDATA) {
                this.parseMarketData(dataByteArry);
            }
            else if (mode === _models__WEBPACK_IMPORTED_MODULE_1__.AliceBlueWsFrameMode.COMPACT_MARKETDATA) {
            }
            else if (mode === _models__WEBPACK_IMPORTED_MODULE_1__.AliceBlueWsFrameMode.SNAPQUOTE) {
            }
            else if (mode === _models__WEBPACK_IMPORTED_MODULE_1__.AliceBlueWsFrameMode.FULL_SNAPQUOTE) {
            }
            else if (mode === _models__WEBPACK_IMPORTED_MODULE_1__.AliceBlueWsFrameMode.DPR) {
            }
            else if (mode === _models__WEBPACK_IMPORTED_MODULE_1__.AliceBlueWsFrameMode.OI) {
                console.log('***** RECEIVED OI');
            }
            else if (mode === _models__WEBPACK_IMPORTED_MODULE_1__.AliceBlueWsFrameMode.MARKET_STATUS) {
            }
            else if (mode === _models__WEBPACK_IMPORTED_MODULE_1__.AliceBlueWsFrameMode.EXCHANGE_MESSAGES) {
            }
        }
        else {
            console.error('Error while converting binary data to byte array');
        }
    }
    parseMarketData(payload) {
        // console.log(payload.byteLength);
        /* for (let i = 0; i < payload.byteLength; i++) {
          // do something with each byte in the array
        } */
        let p = new _models__WEBPACK_IMPORTED_MODULE_1__.AliceMarketData();
        p.exchange_code = payload[1];
        let multiplier = 100;
        if (p.exchange_code === 3) {
            multiplier = 10000000;
        }
        // console.log(p.exchange_code);
        // console.log(enc.decode(payload.subarray(0, 2)));
        // console.log(this.byteArrayToNumber(payload.subarray(6, 10), 24));
        p.token = this.byteArrayToNumber(payload.subarray(2, 6), 24);
        p.ltp = this.byteArrayToNumber(payload.subarray(6, 10), 24) / multiplier;
        p.ltt_unix = this.byteArrayToNumber(payload.subarray(10, 14), 24);
        p.last_traded_qty = this.byteArrayToNumber(payload.subarray(14, 18), 24);
        p.volume = this.byteArrayToNumber(payload.subarray(18, 22), 24);
        p.best_bid = this.byteArrayToNumber(payload.subarray(22, 26), 24) / multiplier;
        p.best_bid_qty = this.byteArrayToNumber(payload.subarray(26, 30), 24);
        p.best_ask = this.byteArrayToNumber(payload.subarray(30, 34), 24) / multiplier;
        p.best_ask_qty = this.byteArrayToNumber(payload.subarray(34, 38), 24);
        p.total_buy_qty = this.byteArrayToNumber(payload.subarray(38, 46), 56);
        p.total_sell_qty = this.byteArrayToNumber(payload.subarray(46, 54), 56);
        p.atp = this.byteArrayToNumber(payload.subarray(54, 58), 24) / multiplier;
        p.exchange_timestamp = this.byteArrayToNumber(payload.subarray(58, 62), 24);
        p.open = this.byteArrayToNumber(payload.subarray(62, 66), 24) / multiplier;
        p.high = this.byteArrayToNumber(payload.subarray(66, 70), 24) / multiplier;
        p.low = this.byteArrayToNumber(payload.subarray(70, 74), 24) / multiplier;
        p.close = this.byteArrayToNumber(payload.subarray(74, 78), 24) / multiplier;
        p.year_high = this.byteArrayToNumber(payload.subarray(78, 82), 24) / multiplier;
        p.year_low = this.byteArrayToNumber(payload.subarray(82, 86), 24) / multiplier;
        // console.log('parseMarketData:', p);
        // console.log('parseMarketData:', new Date(p.ltt_unix * 1000), new Date(p.ltt_unix * 1000).getHours(), new Date(p.ltt_unix * 1000).getMinutes(), new Date(p.ltt_unix * 1000).getSeconds());
        /* if (seconds === 0) {
          update current min
        } else {
          update current min+1
        } */
        this.updateMaps(p);
    }
    convertPayloadToString(payload) {
        let payloadstr = String.fromCharCode.apply(null, payload);
        return payloadstr;
    }
    byteArrayToNumber(bufferedArray, shiftMax) {
        let accum = 0;
        let shiftBy = 0;
        let startIndex = 0;
        for (shiftBy = shiftMax; shiftBy >= 0; shiftBy -= 8) {
            accum |= (bufferedArray[startIndex] & 0xff) << shiftBy;
            startIndex++;
            // console.log(accum, shiftBy, startIndex);
        }
        return accum;
    }
    updateMaps(p) {
        let instru_masters = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.get(p.token);
        if (instru_masters) {
            // console.log('instru_masters.symbol', instru_masters.symbol);
            // let split = instru_masters.symbol.split(' ');
            let instru = instru_masters.instru; // split[0];
            let strike = instru_masters.strike; // isNaN(split[split.length - 2] as any) ? split[split.length - 2] : Number(split[split.length - 2]);
            let type = instru_masters.optionType; // split[split.length - 1];
            let is_monthly_expiry = false;
            let monthly_expiry_string = '';
            let expiryDate = new Date(instru_masters.expiry);
            expiryDate.setHours(0, 0, 0, 0);
            let tempmonthlyExpiryDates = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.monthlyExpiryDates;
            if (instru === 'USDINR') {
                tempmonthlyExpiryDates = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.monthlyExpiryDatesUSDINR;
            }
            for (let key in tempmonthlyExpiryDates) {
                if (tempmonthlyExpiryDates.hasOwnProperty(key)) {
                    // console.log(key + " -> " + tempmonthlyExpiryDates[key] + ' ' + expiryDate);
                    if (expiryDate.getTime() === tempmonthlyExpiryDates[key].getTime()) {
                        // console.log('monthly expiry matched');
                        is_monthly_expiry = true;
                        monthly_expiry_string = key;
                        break;
                    }
                }
            }
            let expiry = '';
            if (is_monthly_expiry) {
                expiry = monthly_expiry_string;
            }
            /* if (split.length === 4) {// NIFTY JUN 9000 PE
              expiry = AppConstants.year + split[1]; // TODO: make year 21 when 2021 year starts
              // console.log(expiry);
            }  */
            else { // USDINR 19 JUN20 77.0 CE, NIFTY JUN FUT, NIFTY 13 AUG20 9000.0 PE
                let expiryDate = new Date(instru_masters.expiry);
                // console.log((expiryDate.getFullYear() - 2000), (expiryDate.getMonth() + 1), expiryDate.getDate());
                let expiryMonth = null;
                if (expiryDate.getMonth() + 1 === 10) {
                    expiryMonth = 'O';
                }
                else if (expiryDate.getMonth() + 1 === 11) {
                    expiryMonth = 'N';
                }
                else if (expiryDate.getMonth() + 1 === 12) {
                    expiryMonth = 'D';
                }
                else {
                    expiryMonth = expiryDate.getMonth() + 1;
                }
                expiry = '' + (expiryDate.getFullYear() - 2000) + (expiryMonth) + ('0' + expiryDate.getDate()).slice(-2); // expiryDate.getDate();
            }
            let symbol = instru + expiry + strike + type; // NIFTY2061810000CE NIFTY20JUN10000CE NIFTY20N1810000CE
            console.log('updateMaps strike is', symbol);
            if (symbol.startsWith('FINNIFTY') && symbol.endsWith('FUT')) {
                symbol = 'FINNIFTY';
                console.log('finnifty fut update');
            }
            this.mapService.setLtp(symbol, p.ltp);
            this.mapService.setAtp(symbol, p.atp);
            this.mapService.setVolume(symbol, p.volume);
            // this.mapService.setOI(instru_masters.symbol, p.oi);
            // this.mapService.setChgOI(instru_masterss.symbol, p.chgoi);
        }
        else { // symbol is in nse masters or cds masters, not nfo masters
            let symbol = '';
            if (p.token === 26000) {
                symbol = 'NIFTY50';
            }
            else if (p.token === 26009) {
                symbol = 'BANKNIFTY';
            }
            else if (p.token === 26037) {
                symbol = 'FINNIFTY';
            }
            else if (p.token === 1) {
                symbol = 'USDINR';
            }
            else {
                console.error(p.token, 'not found in masters');
            }
            this.mapService.setLtp(symbol, p.ltp);
            this.mapService.setAtp(symbol, p.atp);
            this.mapService.setVolume(symbol, p.volume);
        }
    }
}
AliceblueParserService.ɵfac = function AliceblueParserService_Factory(t) { return new (t || AliceblueParserService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_map_service__WEBPACK_IMPORTED_MODULE_2__.MapService)); };
AliceblueParserService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: AliceblueParserService, factory: AliceblueParserService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 7023:
/*!*********************************************!*\
  !*** ./src/app/common/aliceblue.service.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AliceblueService": () => (/* binding */ AliceblueService)
/* harmony export */ });
/* harmony import */ var _application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application.constant */ 8001);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models */ 8077);
/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! js-sha256 */ 396);
/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _websocket_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./websocket.service */ 4440);







class AliceblueService {
    // mastersContract: MasterInstrument[] = [];
    constructor(http, webSocketService) {
        this.http = http;
        this.webSocketService = webSocketService;
        this.baseUrl = 'https://ant.aliceblueonline.com/rest/AliceBlueAPIService/api/'; // 'https://ant.aliceblueonline.com';
    }
    getMastersContract(access_token) {
        let httpOptions = {
            responseType: 'json'
        };
        let url = 'https://v2api.aliceblueonline.com/restpy/contract_master?exch=NFO'; //this.baseUrl + '/api/v2/contracts.json?exchanges=NFO';
        this.http.get(url, httpOptions).subscribe((res) => {
            console.log('AliceblueService getMastersContract', res);
            this.parseContractMaster(res);
        }, error => {
            console.log('AliceblueService getMastersContract error', error);
        });
    }
    parseContractMaster(res) {
        if (res) {
            _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.clear();
            for (let o in res) {
                if (res[o] instanceof Array) {
                    res[o].forEach(i => {
                        /*
                        {"exch":"NFO",
                        "exchange_segment":"nse_fo",
                        "expiry_date":1666224000000,
                        "formatted_ins_name":"BANKNIFTY 20OCT22 36800 CE",
                        "instrument_type":"OPTIDX",
                        "lot_size":"25",
                        "option_type":"CE",
                        "pdc":"1570.35",
                        "strike_price":"36800",
                        "symbol":"BANKNIFTY",
                        "tick_size":"0.05",
                        "token":"35002",
                        "trading_symbol":"BANKNIFTY22102036800CE"}
                        */
                        let p = new _models__WEBPACK_IMPORTED_MODULE_1__.MasterInstrument();
                        p.token = Number(i.token);
                        p.instru = i.symbol; //i.formatted_ins_name;
                        p.expiry = new Date(i.expiry_date).toDateString();
                        p.strike = Number(i.strike_price);
                        p.optionType = i.option_type;
                        p.lotSize = Number(i.lot_size);
                        p.exchange = i.exch;
                        p.tradingSymbol = i.trading_symbol;
                        //p.tradingSymbolFormatted = i.formatted_ins_name;
                        /*
                        OLDER API SUPPORT:
                        p.symbol = i.symbol; // USDINR 19 JUN20 77.0 CE, NIFTY JUN FUT, NIFTY JUN 9000 PE, NIFTY 13 AUG20 9000.0 PE
                        p.lotSize = Number(i.lotSize);
                        p.expiry = new Date(i.expiry * 1000).toDateString();
                        p.exchange_code = i.exchange_code;
                        p.exchange = i.exchange;
                        p.company = i.company;
                        p.code = Number(i.code);
                        // let split = i.symbol.split(' ');
                        // let key = split[0] + split[split.length - 2] + split[split.length - 1]; // NIFTY10000CE
                        // if (i.code === 95734 || i.code === '95734') {
                        //  console.log('**** FOUND', i.code);
                        // }
                        if (p.code === 95734) {
                          // console.log('**** FOUND', i.code);
                        }
                        */
                        _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.set(p.token, p);
                    });
                }
            }
        }
        console.log('AliceblueService getMastersContract mastersContract', _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract);
        // this.connectWebsocket(access_token);
        this.getEncKey();
    }
    getEncKey() {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
                /*  Authorization: access_token, */
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + 'customer/getAPIEncpkey';
        //let body = [{"exchange":"NFO","tradingsymbol":symbol,"transaction_type":"BUY","variety":"regular","product":"NRML","order_type":"MARKET","quantity":1000}];
        let body = { "userId": _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueUserId };
        this.http.post(url, body /* b.toString() */, httpOptions).subscribe((res) => {
            console.log('AliceblueService getEncKey res', res);
            if (res.stat == 'Ok') {
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueEncKey = res.encKey;
                console.log('AliceblueService encKey is', res.encKey);
                this.getSessionId();
            }
            else {
                console.log('AliceblueService getEncKey res stat Not OK. Check if you are logged in to Aliceblue web or mobile application.');
            }
        }, error => {
            console.log('AliceblueService getEncKey error', error);
        });
    }
    getSessionId() {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
                /*  Authorization: access_token, */
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + 'customer/getUserSID';
        //let body = [{"exchange":"NFO","tradingsymbol":symbol,"transaction_type":"BUY","variety":"regular","product":"NRML","order_type":"MARKET","quantity":1000}];
        let body = { "userId": _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueUserId, "userData": (0,js_sha256__WEBPACK_IMPORTED_MODULE_2__.sha256)(_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueUserId + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueApiKey + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueEncKey) };
        this.http.post(url, body /* b.toString() */, httpOptions).subscribe((res) => {
            console.log('AliceblueService getSessionId res', res);
            if (res.stat == 'Ok') {
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueSessionId = res.sessionID;
                console.log('AliceblueService sessionID is', res.sessionID);
                this.invalidateSocketSess();
            }
            else {
                console.log('AliceblueService getSessionId res stat Not OK');
            }
        }, error => {
            console.log('AliceblueService getSessionId error', error);
        });
    }
    invalidateSocketSess() {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
                Authorization: 'Bearer ' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueUserId + ' ' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueSessionId,
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + 'ws/invalidateSocketSess';
        //let body = [{"exchange":"NFO","tradingsymbol":symbol,"transaction_type":"BUY","variety":"regular","product":"NRML","order_type":"MARKET","quantity":1000}];
        let body = { "loginType": "API" };
        this.http.post(url, body /* b.toString() */, httpOptions).subscribe((res) => {
            console.log('AliceblueService invalidateSocketSess res', res);
            if (res.stat == 'Ok') {
                console.log('AliceblueService invalidateSocketSess is', res.message);
                this.createSocketSess();
            }
            else {
                console.log('AliceblueService invalidateSocketSess res stat Not OK');
            }
        }, error => {
            console.log('AliceblueService invalidateSocketSess error', error);
        });
    }
    createSocketSess() {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
                Authorization: 'Bearer ' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueUserId + ' ' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueSessionId,
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + 'ws/createSocketSess';
        //let body = [{"exchange":"NFO","tradingsymbol":symbol,"transaction_type":"BUY","variety":"regular","product":"NRML","order_type":"MARKET","quantity":1000}];
        let body = { "loginType": "API" };
        this.http.post(url, body /* b.toString() */, httpOptions).subscribe((res) => {
            console.log('AliceblueService createSocketSess res', res);
            if (res.stat == 'Ok') {
                console.log('AliceblueService createSocketSess is', res.message);
                this.connectWebsocket(null);
            }
            else {
                console.log('AliceblueService createSocketSess res stat Not OK');
            }
        }, error => {
            console.log('AliceblueService createSocketSess error', error);
        });
    }
    isSocketConnected() {
        return this.webSocketService.isSocketConnected();
    }
    connectWebsocket(access_token) {
        this.webSocketService.connect(access_token);
    }
    closeWebsocket() {
        this.webSocketService.closeSocket();
    }
    sendSubscriptions(instruments) {
        /* for _instrument in instrument:
                    if not isinstance(_instrument, Instrument):
                        raise TypeError("Required parameter instrument not of type Instrument")
                    exchange = self.__exchange_codes[_instrument.exchange]
                    arr.append([exchange, int(_instrument.token)])
                    self.__subscribers[_instrument] = live_feed_type
        arr.append([exchange, int(_instrument.token)])
        data = json.dumps({'a' : 'subscribe', 'v' : arr, 'm' : AliceBlueLiveFeedType.MARKET_DATA}) */
        let str = '';
        instruments.forEach(instrument => {
            let instru = this.findStrikeInMasters(instrument);
            if (instru) {
                str += instru.exchange + '|' + instru.token + '#';
            }
        });
        //let message = JSON.stringify({'a' : 'subscribe', 'v' : arr, 'm' : AliceBlueLiveFeedType.MARKET_DATA});
        //let message = JSON.stringify({"k":"NSE|26000#NSE|26009#CDS|" + usdinr_fut_code,"t":"t"});
        str = str.replace(/#\s*$/, "");
        let message = JSON.stringify({ "k": str, "t": "t" });
        console.log('sendSubscriptions: ' + message);
        this.webSocketService.sendMessage(message);
    }
    findStrikeInMasters(instrument) {
        let return_instru = null;
        _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.forEach(element => {
            // console.log(instru, strike, type, element.expiry, instrument.instru, instrument.strike, instrument.type, instrument.expiry);
            if (instrument.expiry === element.expiry &&
                instrument.instru === element.instru &&
                instrument.strike === element.strike &&
                instrument.type === element.optionType) {
                return_instru = element;
                return;
            }
        });
        return return_instru;
        /*
        for contract in master_contract:
                if symbol == master_contract[contract].symbol.split(' ')[0]:
                    matches.append(master_contract[contract])
        matches = []
        for i in res:
            if(i.expiry == expiry_date):
                matches.append(i)
        for i in matches:
            if(is_fut == True):
                if('FUT' in i.symbol):
                    return i
            else:
                sp = i.symbol.split(' ')
                if((sp[-1] == 'CE') or (sp[-1] == 'PE')):
                    if(float(sp[-2]) == float(strike)):
                        if(is_CE == True):
                            if(sp[-1] == 'CE'):
                                return i
                        else:
                            if(sp[-1] == 'PE'):
                                return i */
    }
}
AliceblueService.ɵfac = function AliceblueService_Factory(t) { return new (t || AliceblueService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_websocket_service__WEBPACK_IMPORTED_MODULE_3__.WebsocketService)); };
AliceblueService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: AliceblueService, factory: AliceblueService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 1580:
/*!*****************************************!*\
  !*** ./src/app/common/angel.service.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AngelService": () => (/* binding */ AngelService)
/* harmony export */ });
/* harmony import */ var _application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application.constant */ 8001);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models */ 8077);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _angelwebsocket_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./angelwebsocket.service */ 4991);






// const fyers = require('fyers-api');
// import * as fyers from 'fyers-api';
class AngelService {
    constructor(http, angelWS) {
        this.http = http;
        this.angelWS = angelWS;
        this.baseUrl = 'https://apiconnect.angelbroking.com';
    }
    getAngelHeaders() {
    }
    angelLogin() {
        this.auth().subscribe((res) => {
            console.log('angel auth', res);
            if (res && res.data) {
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelFeedToken = res.data.feedToken;
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelJWTToken = res.data.jwtToken;
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelRefreshToken = res.data.refreshToken;
                this.angelWS.connect();
            }
        }, error => {
            console.log('angel auth error', error);
        });
    }
    getMastersContract() {
        let httpOptions = {
            responseType: 'json'
        };
        let url = 'https://margincalculator.angelbroking.com/OpenAPI_File/files/OpenAPIScripMaster.json';
        this.http.get(url, httpOptions).subscribe((res) => {
            console.log('AngelService getMastersContract', res);
            if (res) {
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.clear();
                res.forEach(i => {
                    // {"token":"37616","symbol":"BANKNIFTY28OCT2139100CE","name":"BANKNIFTY","expiry":"28OCT2021","strike":"3910000.000000","lotsize":"25","instrumenttype":"OPTIDX","exch_seg":"NFO","tick_size":"5.000000"},
                    let p = new _models__WEBPACK_IMPORTED_MODULE_1__.MasterInstrument();
                    let multiplier = 100;
                    if (i.exch_seg === 'CDS') {
                        multiplier = 10000000;
                    }
                    p.instru = i.name;
                    p.strike = Number(i.strike) / multiplier;
                    if (i.symbol.endsWith('CE')) {
                        p.optionType = 'CE';
                    }
                    if (i.symbol.endsWith('PE')) {
                        p.optionType = 'PE';
                    }
                    if (i.symbol.endsWith('FUT')) {
                        p.optionType = 'FUT';
                    }
                    p.tradingSymbol = i.symbol; // BANKNIFTY28OCT2139100CE NIFTY28OCT21FUT USDINR21O1475.25CE
                    p.lotSize = Number(i.lotsize);
                    p.expiry = new Date(i.expiry).toDateString();
                    // p.exchange_code = i.exchange_code;
                    p.exchange = i.exch_seg;
                    // p.company = i.company;
                    p.token = Number(i.token);
                    // let split = i.symbol.split(' ');
                    // let key = split[0] + split[split.length - 2] + split[split.length - 1]; // NIFTY10000CE
                    /* if (i.code === 95734 || i.code === '95734') {
                      console.log('**** FOUND', i.code);
                    } */
                    if (p.token === 95734) {
                        // console.log('**** FOUND', i.code);
                    }
                    _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.set(p.token, p);
                });
                this.angelLogin();
            }
            console.log('AngelService getMastersContract mastersContract', _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract);
        }, error => {
            console.log('AngelService getMastersContract error', error);
        });
    }
    sendSubscriptions(instruments) {
        /* for _instrument in instrument:
                    if not isinstance(_instrument, Instrument):
                        raise TypeError("Required parameter instrument not of type Instrument")
                    exchange = self.__exchange_codes[_instrument.exchange]
                    arr.append([exchange, int(_instrument.token)])
                    self.__subscribers[_instrument] = live_feed_type
        arr.append([exchange, int(_instrument.token)])
        data = json.dumps({'a' : 'subscribe', 'v' : arr, 'm' : AliceBlueLiveFeedType.MARKET_DATA}) */
        let arr = [];
        instruments.forEach(instrument => {
            let instru = this.findStrikeInMasters(instrument);
        });
        // let message = JSON.stringify({'a' : 'subscribe', 'v' : arr, 'm' : AliceBlueLiveFeedType.MARKET_DATA});
        let strwatchlistscrips = 'nse_fo|43315&nse_fo|38692';
        let subs = '{"task":"mw","channel":"' + strwatchlistscrips + '","token":"' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelFeedToken + '","user": "' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelUserId + '","acctid":"' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelUserId + '"}';
        console.log('angel sendSubscriptions: ' + subs);
        this.angelWS.sendMessage(subs);
    }
    findStrikeInMasters(instrument) {
        /*
            symbol in masters:
            BANKNIFTY28OCT2139100CE
            NIFTY28OCT21FUT
            USDINR21O1475.25CE
         */
        let return_instru = null;
        _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.forEach(element => {
            // console.log(instru, strike, type, element.expiry, instrument.instru, instrument.strike, instrument.type, instrument.expiry);
            if (instrument.expiry === element.expiry &&
                instrument.instru === element.instru &&
                instrument.strike === element.strike &&
                instrument.type === element.optionType) {
                return_instru = element;
                return;
            }
        });
        return return_instru;
    }
    auth() {
        /* let reqBody = { 'app_id': AppConstants.fyersAppId, 'secret_key':  AppConstants.fyersSecretId };
        return fyers.auth(reqBody); */
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpHeaders({
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'X-UserType': 'USER',
                'X-SourceID': 'WEB',
                'X-ClientLocalIP': '192.168.0.2',
                'X-ClientPublicIP': '101.190.74.150',
                'X-MACAddress': '37:ab:f8:95:27:ff',
                'X-PrivateKey': _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelAPIKey,
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + '/rest/auth/angelbroking/user/v1/loginByPassword';
        let body = { 'clientcode': _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelUserId, 'password': _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelPassword };
        return this.http.post(url, body, httpOptions);
        /* {
          "status": true,
          "message": "SUCCESS",
          "errorcode": "",
          "data": {
              "jwtToken": "eyJhbGciOiJIUzUxMiJ9.eyJ1c2VybmFtZSI6IkExNjUzMDciLCJyb2xlcyI6MCwidXNlcnR5cGUiOiJVU0VSIiwiaWF0IjoxNjA4NTY0MDU4LCJleHAiOjE2MDg1NzMwNTh9.VTx5ZmHagVRoPiS982j1LnIyNvpK7QIknwctRgO_QBlntYSAuWCuhEPzjC-rKJjqul2imxOvPLYZ6JVIuqVcPw",
              "refreshToken": "eyJhbGciOiJIUzUxMiJ9.eyJ0b2tlbiI6IlJFRlJFU0gtVE9LRU4iLCJpYXQiOjE2MDg1NjQwNTh9.JWbUh1b1XcqLQUJzWr270DrFSsIjrZe4X4d6iDdgpjmy6p_AYt38qJukRuuNekztfvrwyOPVw3j8ni5H8xvOBQ",
              "feedToken": "1168502830"
          }
        } */
    }
    getFunds(access_token) {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpHeaders({
                Authorization: 'Bearer ' + access_token,
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'X-UserType': 'USER',
                'X-SourceID': 'WEB',
                'X-ClientLocalIP': '192.168.0.2',
                'X-ClientPublicIP': '101.190.74.150',
                'X-MACAddress': '37:ab:f8:95:27:ff',
                'X-PrivateKey': _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelAPIKey,
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + '/rest/secure/angelbroking/user/v1/getRMS';
        return this.http.get(url, httpOptions);
        /* {
          "status": true,
          "message": "SUCCESS",
          "errorcode": "",
          "data": {
              "net": "80152.68437499999709",
              "availablecash": "80152.68437499999709",
              "availableintradaypayin": "100000",
              "availablelimitmargin": "0",
              "collateral": "0",
              "m2munrealized": "0",
              "m2mrealized": "0",
              "utiliseddebits": "19847.315624999999272",
              "utilisedspan": "0",
              "utilisedoptionpremium": "0",
              "utilisedholdingsales": "0",
              "utilisedexposure": "0",
              "utilisedturnover": "0",
              "utilisedpayout": "0"
          }
        } */
    }
    getPositions(access_token) {
        /* return from(
          [this.convertToJson(AppConstants.dummyResPos.replace('\ufeff', ''))]
        ); */
        /* return from(
          [JSON.parse(AppConstants.dummyResPos)]
        ); */
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpHeaders({
                Authorization: 'Bearer ' + access_token,
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'X-UserType': 'USER',
                'X-SourceID': 'WEB',
                'X-ClientLocalIP': '192.168.0.2',
                'X-ClientPublicIP': '101.190.74.150',
                'X-MACAddress': '37:ab:f8:95:27:ff',
                'X-PrivateKey': _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelAPIKey,
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + '/rest/secure/angelbroking/order/v1/getPosition';
        return this.http.get(url, httpOptions);
        /* {
          "status": true,
          "message": "SUCCESS",
          "errorcode": "",
          "data": [
              {
                  "symboltoken": "44068",
                  "symbolname": "NIFTY",
                  "instrumenttype": "OPTIDX",
                  "priceden": "1",
                  "pricenum": "1",
                  "genden": "1",
                  "gennum": "1",
                  "precision": "2",
                  "multiplier": "-1",
                  "boardlotsize": "1",
                  "exchange": "NFO",
                  "producttype": "INTRADAY",
                  "tradingsymbol": "NIFTY24DEC2015000CE",
                  "symbolgroup": "XX",
                  "strikeprice": "1500000",
                  "optiontype": "CE",
                  "expirydate": "24DEC2020",
                  "lotsize": "75",
                  "cfbuyqty": "0",
                  "cfsellqty": "0",
                  "cfbuyamount": "0",
                  "cfsellamount": "0",
                  "buyavgprice": "0",
                  "sellavgprice": "165",
                  "avgnetprice": "165",
                  "netvalue": "12375",
                  "netqty": "-75",
                  "totalbuyvalue": "0",
                  "totalsellvalue": "12375",
                  "cfbuyavgprice": "0",
                  "cfsellavgprice": "0",
                  "totalbuyavgprice": "0",
                  "totalsellavgprice": "165",
                  "netprice": "165",
                  "buyqty": "0",
                  "sellqty": "75",
                  "buyamount": "0",
                  "sellamount": "12375"
              }
          ]
        } */
    }
    getOrders(access_token) {
        /* return from(
          [JSON.parse(AppConstants.dummyResOrd)]
        ); */
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpHeaders({
                Authorization: 'Bearer ' + access_token,
                'Content-Type': 'application/json',
                'Accept': 'application/json',
                'X-UserType': 'USER',
                'X-SourceID': 'WEB',
                'X-ClientLocalIP': '192.168.0.2',
                'X-ClientPublicIP': '101.190.74.150',
                'X-MACAddress': '37:ab:f8:95:27:ff',
                'X-PrivateKey': _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelAPIKey,
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + '/rest/secure/angelbroking/order/v1/getOrderBook';
        return this.http.get(url, httpOptions);
    }
    place_order(access_token, body) {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpHeaders({
                Authorization: access_token,
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + 'orders';
        return this.http.post(url, body, httpOptions);
    }
}
AngelService.ɵfac = function AngelService_Factory(t) { return new (t || AngelService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_3__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_angelwebsocket_service__WEBPACK_IMPORTED_MODULE_2__.AngelWebsocketService)); };
AngelService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: AngelService, factory: AngelService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 4991:
/*!**************************************************!*\
  !*** ./src/app/common/angelwebsocket.service.ts ***!
  \**************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AngelWebsocketService": () => (/* binding */ AngelWebsocketService)
/* harmony export */ });
/* harmony import */ var _application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application.constant */ 8001);
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models */ 8077);
/* harmony import */ var pako__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! pako */ 3376);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aliceblue_parser_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./aliceblue-parser.service */ 4256);


// import { resourceUsage } from 'process';
//import * as smartapi from 'smartapi-javascript';



class AngelWebsocketService {
    constructor(aliceblueParserService) {
        this.aliceblueParserService = aliceblueParserService;
        this.socket_endpoint = 'wss://omnefeeds.angelbroking.com/NestHtml5Mobile/socket/stream?';
        this.url2 = "wss://wsfeeds.angelbroking.com/NestHtml5Mobile/socket/stream";
    }
    isSocketConnected() {
        if (this.websocket && this.websocket.OPEN === 1) {
            return true;
        }
        return false;
    }
    connect() {
        this.websocket = new WebSocket(this.socket_endpoint);
        this.websocket.binaryType = 'arraybuffer';
        this.websocket.onopen = () => {
            this.handleOnOpen(event);
        };
        this.websocket.onmessage = messageEvent => {
            this.handleOnMessage(messageEvent);
        };
        this.websocket.onerror = event => {
            this.handleOnError(event);
        };
        this.websocket.onclose = event => {
            this.handleOnClose(event);
        };
    }
    handleOnOpen(event) {
        console.log('Opened Web Socket connection');
        /* if (AppConstants.SocketMode === 'aliceblue') {
          this.sendHeartbeat();
          this.sendInitialSubscription();
          this.websocketEvent$.next('connected');
        } */
        let _req = '{"task":"cn","channel":"","token":"' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelFeedToken + '","user": "' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelUserId + '","acctid":"' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelUserId + '"}';
        this.sendMessage(_req);
        this.sendHeartbeat();
    }
    sendHeartbeat() {
        this.heartbeatInterval = setInterval(() => {
            // console.log('sending heartbeat');
            let message = '{"task":"hb","channel":"","token":"' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelFeedToken + '","user": "' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelUserId + '","acctid":"' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.angelUserId + '"}';
            this.sendMessage(message);
        }, 59000);
    }
    sendInitialSubscription() {
        console.log('sending initial subscription');
        // let usdinr_fut_code = AppConstants.USDINRFUTCodes[AppConstants.USDINR_FUT_MONTH];
        let message = JSON.stringify({
            'a': 'subscribe',
            'v': [[1, 26000], [1, 26009], [3, 1] /* , [3, usdinr_fut_code] */ /* , [2, 95734], [2, 95733] */],
            'm': _models__WEBPACK_IMPORTED_MODULE_1__.AliceBlueLiveFeedType.MARKET_DATA
        });
        // 26000 26009 for nf and bnf spot
        // 1 is usdinr spot
        // console.log('usdinr_fut_code', usdinr_fut_code);
        this.sendMessage(message);
    }
    handleOnMessage(messageEvent) {
        console.log('handleOnMessage', messageEvent, messageEvent.data);
        // console.log('handleOnMessage parse', JSON.parse(messageEvent.data));
        /* if (AppConstants.SocketMode === 'aliceblue') {
          this.aliceblueParserService.handleSocketMessage(messageEvent.data);
        } */
        let strData = atob(messageEvent.data);
        // Convert binary string to character-number array
        var charData = strData.split('').map(function (x) { return x.charCodeAt(0); });
        // Turn number array into byte-array
        var binData = new Uint8Array(charData);
        // Pako magic
        var result = this._atos(pako__WEBPACK_IMPORTED_MODULE_2__.inflate(binData));
        console.log('parsed', result);
        let json = JSON.parse(result)[0];
        if (json && json.msg === 'connected') {
            console.log('ANGEL WS CONNECTED');
            // USDINR: cde_fo|1
            // NIFTY50: cde_fo|2 - not working
            /* let strwatchlistscrips = 'nse_fo|43315&nse_fo|38692'
            //let strwatchlistscrips = 'cde_fo|2'
            let subs = '{"task":"mw","channel":"' + strwatchlistscrips + '","token":"' + AppConstants.angelFeedToken + '","user": "' + AppConstants.angelUserId + '","acctid":"' + AppConstants.angelUserId + '"}';
            this.sendMessage(subs); */
            _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.websocketEvent$.next('connected');
            /* strwatchlistscrips = 'nse_fo|38692'
            subs = '{"task":"mw","channel":"' + strwatchlistscrips + '","token":"' + AppConstants.angelFeedToken + '","user": "' + AppConstants.angelUserId + '","acctid":"' + AppConstants.angelUserId + '"}';
            this.sendMessage(subs); */
            // [{"tvalue":"12\/10\/2021 13:19:20","name":"tm"},{"to":"3484040944.50","lo":"38.65","e":"nse_fo","sp":"54.15","c":"78.30","ltp":"54.00","ltq":"50","tk":"43315","bs":"450","ltt":"12\/10\/2021 13:19:19","tsq":"1385600","v":"61349550","bp":"54.00","cng":"-24.30","bq":"150","ap":"56.79","nc":"-31.0345","name":"sf","tbq":"749350"}]
            // [{"e":"nse_fo","name":"sf","ltp":"54.00","ltq":"50","tk":"43315","ltt":"NA"}]
            // [{"to":"23800815.00","lo":"01.75","e":"nse_fo","sp":"02.00","c":"02.60","ltp":"01.95","ltq":"50","tk":"38692","bs":"21500","ltt":"12\/10\/2021 13:19:13","tsq":"361500","v":"9958500","bp":"01.95","cng":"-00.65","bq":"108350","ap":"02.39","nc":"-25.00","name":"sf","tbq":"1945850"},{"to":"3484075018.50","lo":"38.65","e":"nse_fo","sp":"54.05","c":"78.30","ltp":"53.95","ltq":"100","tk":"43315","bs":"1800","ltt":"12\/10\/2021 13:19:20","tsq":"1390250","v":"61350150","bp":"53.90","cng":"-24.35","bq":"700","ap":"56.79","nc":"-31.0983","name":"sf","tbq":"747150"}]
        }
    }
    _atos(array) {
        var newarray = [];
        try {
            for (var i = 0; i < array.length; i++) {
                newarray.push(String.fromCharCode(array[i]));
            }
        }
        catch (e) { }
        return newarray.join('');
    }
    handleOnError(event) {
        console.log('Error in WS connection', event);
    }
    handleOnClose(event) {
        console.log('Closed WS connection', event);
        clearInterval(this.heartbeatInterval);
        this.websocket = null;
        setTimeout(() => {
            if (this.websocket && this.websocket.OPEN === 1) {
                // ws connected
            }
            else {
                console.log('Reconnecting websocket');
                this.connect();
            }
        }, 2000);
    }
    sendMessage(message) {
        if (this.websocket && this.websocket.OPEN === 1) {
            console.log('Sending message over websocket: ' + message);
            this.websocket.send(message);
        }
        else {
            console.log('Cannot send the message. Socket is not yet opened or it has been closed - ', message);
        }
    }
}
AngelWebsocketService.ɵfac = function AngelWebsocketService_Factory(t) { return new (t || AngelWebsocketService)(_angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵinject"](_aliceblue_parser_service__WEBPACK_IMPORTED_MODULE_3__.AliceblueParserService)); };
AngelWebsocketService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_4__["ɵɵdefineInjectable"]({ token: AngelWebsocketService, factory: AngelWebsocketService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 8001:
/*!************************************************!*\
  !*** ./src/app/common/application.constant.ts ***!
  \************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "AppConstants": () => (/* binding */ AppConstants)
/* harmony export */ });
/* harmony import */ var rxjs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs */ 2218);

class AppConstants {
}
AppConstants.logWSFeed = false;
AppConstants.miscEvent$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.Subject();
AppConstants.websocketEvent$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.Subject();
AppConstants.requestStatusEvent$ = new rxjs__WEBPACK_IMPORTED_MODULE_0__.Subject();
AppConstants.SocketMode = 'zerodha'; // aliceblue angel
AppConstants.RestMode = 'zerodha'; // fyers
AppConstants.zerodhaUserId = 'FW6041';
AppConstants.AliceblueUserId = 'AB033978';
AppConstants.AliceblueApiKey = '49LHZEV09feJdK7c59mzI4vxZOpJ0McPVg6aYP0kKmnMq1Gbn3DQMBOAb8xE7b6EJCkOspKl1EBljBUEmVppzSTT39G7rd9gIy01cWqzZTocnuCHXpBSj14TiyP0SDF8';
AppConstants.AliceblueEncKey = '';
AppConstants.AliceblueSessionId = '';
AppConstants.fyersAppId = 'FUU5Z8ICUH';
AppConstants.fyersSecretId = 'IYF3LPXJ0X';
AppConstants.angelUserId = 'A165307';
AppConstants.angelPassword = 'scjFNB5iYLI';
AppConstants.angelAPIKey = 'I5nI74Nm';
AppConstants.angelFeedToken = '';
AppConstants.angelJWTToken = '';
AppConstants.angelRefreshToken = '';
AppConstants.year = '23'; // TODO: make year 24 when 2024 year starts
AppConstants.INTEREST_RATE = 6.89; // https://techfanetechnologies.github.io/risk_free_interest_rate/RiskFreeInterestRate.json - use 364 Days T-bills , https://in.investing.com/rates-bonds/india-10-year-bond-yield-historical-data
AppConstants.knife_threshold = 5;
AppConstants.knife_threshold_adjust1 = 2;
AppConstants.knife_threshold_adjust2 = 7;
AppConstants.orders = [];
AppConstants.completeOrders = 0;
AppConstants.placedOrders = 0;
AppConstants.curr_positions_trades = [];
AppConstants.fetchedPositions = [];
AppConstants.isSimulatedStrategy = false;
AppConstants.simulateCurrDateObj = null;
AppConstants.isProduction = false;
AppConstants.numAlerts = 4;
AppConstants.broker_auth = 'enctoken MNyfe/S7e6hVoUslcB8a4Ch/S+/EyS9DtavSmdQmevXzmPvOYv9neIMZkyI8L38HFIiNc2VPoNTrM3waBrvS0Hj4IPW+5LHN5B7J2p+s5gtdbW0/sueWOg==';
AppConstants.nfCEOILimit = null;
AppConstants.nfPEOILimit = null;
AppConstants.bnfCEOILimit = null;
AppConstants.bnfPEOILimit = null;
AppConstants.isHistoricalRunning = false;
AppConstants.numStrategies = 6;
AppConstants.st_simulate_ce = [];
AppConstants.st_simulate_pe = [];
AppConstants.st_simulate_charts = [];
AppConstants.st_simulate_charts_values = [];
AppConstants.st_simulate_charts_print = [];
AppConstants.st_simulate_charts_print_strangle = [];
AppConstants.st_simulate_exits = [];
AppConstants.isIStrangleEnabled = true;
AppConstants.isIStrangleInit = false;
AppConstants.SL1 = 10;
AppConstants.SL2 = 12;
AppConstants.rollout_premium = 10;
AppConstants.rollin_threshold = 8;
AppConstants.supportedInstru = ['NIFTY', 'BANKNIFTY', 'FINNIFTY', 'MIDCPNIFTY', 'SENSEX', 'BANKEX', 'USDINR',];
AppConstants.strike_diff = {
    'NIFTY': 50,
    'BANKNIFTY': 100,
    'FINNIFTY': 50,
    'MIDCPNIFTY': 25,
    'SENSEX': 100,
    'BANKEX': 100,
};
AppConstants.defaultTag = "t:intraday2:228655";
AppConstants.freezeLimit = {
    'NIFTY': 1800,
    'BANKNIFTY': 900,
    'FINNIFTY': 1800,
    'MIDCPNIFTY': 4200,
    'SENSEX': 1000,
    'BANKEX': 600,
};
/***************** algo variables start **************************/
AppConstants.enableAlgo = true;
AppConstants.instruToTrade = '';
AppConstants.expiryDateToTrade = null;
AppConstants.algoStrategyNum = 6;
AppConstants.secsToWaitForSL = 5;
AppConstants.numSlabs = {
    'MIDCPNIFTY': 3,
    'FINNIFTY': 3,
    'BANKNIFTY': 3,
    'NIFTY': 3,
    'SENSEX': 3,
    'BANKEX': 3,
};
AppConstants.slabOrderId = {
    'MIDCPNIFTY': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
    'FINNIFTY': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
    'BANKNIFTY': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
    'NIFTY': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
    'SENSEX': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
    'BANKEX': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
};
AppConstants.minDistTillTime = {
    'MIDCPNIFTY': { '12:00': 150, '13:30': 100, '14:30': 100, '15:31': 100, },
    'FINNIFTY': { '12:00': 150, '13:30': 150, '14:30': 100, '15:31': 50, },
    'BANKNIFTY': { '12:00': 400, '13:30': 300, '14:30': 200, '15:31': 200, },
    'NIFTY': { '12:00': 150, '13:30': 150, '14:30': 100, '15:31': 50, },
    'SENSEX': { '12:00': 400, '13:30': 300, '14:30': 200, '15:31': 200, },
    'BANKEX': { '12:00': 400, '13:30': 300, '14:30': 200, '15:31': 200, },
};
AppConstants.slabEntryTime = {
    'MIDCPNIFTY': { 1: '9:46', 2: '10:06', 3: '10:36', },
    'FINNIFTY': { 1: '9:31', 2: '9:46', 3: '10:06', },
    'BANKNIFTY': { 1: '9:31', 2: '9:46', 3: '10:06', },
    'NIFTY': { 1: '9:31', 2: '9:46', 3: '10:06', },
    'SENSEX': { 1: '9:31', 2: '9:46', 3: '10:06', },
    'BANKEX': { 1: '9:31', 2: '9:46', 3: '10:06', },
};
AppConstants.slabEntryDist = {
    'MIDCPNIFTY': { 1: 200, 2: 200, 3: 200, },
    'FINNIFTY': { 1: 200, 2: 150, 3: 200, },
    'BANKNIFTY': { 1: 500, 2: 400, 3: 500, },
    'NIFTY': { 1: 200, 2: 150, 3: 200, },
    'SENSEX': { 1: 500, 2: 400, 3: 500, },
    'BANKEX': { 1: 500, 2: 400, 3: 500, },
};
AppConstants.slabQty = {
    'MIDCPNIFTY': { 1: -3000, 2: -3000, 3: -3000, },
    'FINNIFTY': { 1: -1330, 2: -1330, 3: -1330, },
    'BANKNIFTY': { 1: -510, 2: -675, 3: -510, },
    'NIFTY': { 1: -1500, 2: -1500, 3: -1500, },
    'SENSEX': { 1: -430, 2: -430, 3: -430, },
    'BANKEX': { 1: -450, 2: -450, 3: -450, },
};
AppConstants.slabEntered = {
    'MIDCPNIFTY': { 1: false, 2: false, 3: false, },
    'FINNIFTY': { 1: false, 2: false, 3: false, },
    'BANKNIFTY': { 1: false, 2: false, 3: false, },
    'NIFTY': { 1: false, 2: false, 3: false, },
    'SENSEX': { 1: false, 2: false, 3: false, },
    'BANKEX': { 1: false, 2: false, 3: false, },
};
AppConstants.slabStrikes = {
    'MIDCPNIFTY': { 1: { 'CE': '', 'PE': '' }, 2: { 'CE': '', 'PE': '' }, 3: { 'CE': '', 'PE': '' }, },
    'FINNIFTY': { 1: { 'CE': '', 'PE': '' }, 2: { 'CE': '', 'PE': '' }, 3: { 'CE': '', 'PE': '' }, },
    'BANKNIFTY': { 1: { 'CE': '', 'PE': '' }, 2: { 'CE': '', 'PE': '' }, 3: { 'CE': '', 'PE': '' }, },
    'NIFTY': { 1: { 'CE': '', 'PE': '' }, 2: { 'CE': '', 'PE': '' }, 3: { 'CE': '', 'PE': '' }, },
    'SENSEX': { 1: { 'CE': '', 'PE': '' }, 2: { 'CE': '', 'PE': '' }, 3: { 'CE': '', 'PE': '' }, },
    'BANKEX': { 1: { 'CE': '', 'PE': '' }, 2: { 'CE': '', 'PE': '' }, 3: { 'CE': '', 'PE': '' }, },
};
AppConstants.slabCurrEntryPrice = {
    'MIDCPNIFTY': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
    'FINNIFTY': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
    'BANKNIFTY': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
    'NIFTY': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
    'SENSEX': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
    'BANKEX': { 1: { 'CE': null, 'PE': null }, 2: { 'CE': null, 'PE': null }, 3: { 'CE': null, 'PE': null }, },
};
AppConstants.slabSL = {
    'MIDCPNIFTY': { 1: 0.6, 2: 0.7, 3: 0.8 },
    'FINNIFTY': { 1: 0.35, 2: 0.4, 3: 0.45 },
    'BANKNIFTY': { 1: 0.35, 2: 0.4, 3: 0.45 },
    'NIFTY': { 1: 0.35, 2: 0.4, 3: 0.45 },
    'SENSEX': { 1: 0.35, 2: 0.4, 3: 0.45 },
    'BANKEX': { 1: 0.35, 2: 0.4, 3: 0.45 },
};
AppConstants.slabSLCounter = {
    'MIDCPNIFTY': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
    'FINNIFTY': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
    'BANKNIFTY': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
    'NIFTY': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
    'SENSEX': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
    'BANKEX': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
};
AppConstants.slabRollIn = {
    'MIDCPNIFTY': { 1: 0.3, 2: 0.35, 3: 0.4 },
    'FINNIFTY': { 1: 0.3, 2: 0.35, 3: 0.4 },
    'BANKNIFTY': { 1: 0.3, 2: 0.35, 3: 0.4 },
    'NIFTY': { 1: 0.3, 2: 0.35, 3: 0.4 },
    'SENSEX': { 1: 0.3, 2: 0.35, 3: 0.4 },
    'BANKEX': { 1: 0.3, 2: 0.35, 3: 0.4 },
};
AppConstants.slabRollInCounter = {
    'MIDCPNIFTY': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
    'FINNIFTY': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
    'BANKNIFTY': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
    'NIFTY': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
    'SENSEX': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
    'BANKEX': { 1: { 'CE': 0, 'PE': 0 }, 2: { 'CE': 0, 'PE': 0 }, 3: { 'CE': 0, 'PE': 0 }, },
};
AppConstants.rolloutStrikeMultiple = 1; // 2
// static trailingSL = ????????;
/***************** algo variables end **************************/
AppConstants.babyNamesLetters = {
    'A': 1,
    'B': 2,
    'C': 3,
    'D': 4,
    'E': 5,
    'F': 8,
    'G': 3,
    'H': 5,
    'I': 1,
    'J': 1,
    'K': 2,
    'L': 3,
    'M': 4,
    'N': 5,
    'O': 7,
    'P': 8,
    'Q': 1,
    'R': 2,
    'S': 3,
    'T': 4,
    'U': 6,
    'V': 6,
    'W': 6,
    'X': 5,
    'Y': 1,
    'Z': 7,
};
/* static USDINRFUTCodes = {
  'SEP': 1985,
  'OCT': 2698,
  'NOV': 3050,
  'DEC': 1487,
}; */
AppConstants.mastersContract = new Map();
AppConstants.monthsMapping = {
    1: 'JAN',
    2: 'FEB',
    3: 'MAR',
    4: 'APR',
    5: 'MAY',
    6: 'JUN',
    7: 'JUL',
    8: 'AUG',
    9: 'SEP',
    10: 'OCT',
    11: 'NOV',
    12: 'DEC'
};
/* static USDINRFUTCodes = {
  // Not updated for 2023
  'JAN': 1131,
  'FEB': 10210,
  'MAR': 1779,
  'APR': 1170,
  'MAY': 1381,
  'JUN': 1237,
  'JUL': 1503,
  'AUG': 1091,
  'SEP': 1136,
  'OCT': 1176,
  'NOV': 5940,
  'DEC': 1182,
}; */
// static USDINR_FUT_MONTH = ''; //new Date().toLocaleString('default', { month: 'short' }).toUpperCase().substring(0,3); // 'JUL';
/*   static FINNIFTYFUTCodes = {
    'JAN': 53825,
    'FEB': 37819,
    'MAR': 51317,
    // TODO BELOW
    'APR': 1170,
    'MAY': 1381,
    'JUN': 1237,
    'JUL': 1503,
    'AUG': 1091,
    'SEP': 1136,
    'OCT': 1176,
    'NOV': 5940,
    'DEC': 53825,
  }; */
// static FINNIFTY_FUT_MONTH = ''; //new Date().toLocaleString('default', { month: 'short' }).toUpperCase().substring(0,3); // 'JUL';
AppConstants.monthlyExpiryDates = {
    /* '21JAN': new Date(2021, 0, 27),
    '21FEB': new Date(2021, 1, 24),
    '21MAR': new Date(2021, 2, 26),
    '21APR': new Date(2021, 3, 29),
    '21MAY': new Date(2021, 4, 26),
    '21JUN': new Date(2021, 5, 30),
    '21JUL': new Date(2021, 6, 28),
    '21AUG': new Date(2021, 7, 26),
    '21SEP': new Date(2021, 8, 29),
    '21OCT': new Date(2021, 9, 28),
    '21NOV': new Date(2021, 10, 25),
    '21DEC': new Date(2021, 11, 30), */
    /* '22JAN': new Date(2022, 0, 27),
    '22FEB': new Date(2022, 1, 24),
    '22MAR': new Date(2022, 2, 31),
    '22APR': new Date(2022, 3, 28),
    '22MAY': new Date(2022, 4, 26),
    '22JUN': new Date(2022, 5, 30),
    '22JUL': new Date(2022, 6, 28),
    '22AUG': new Date(2022, 7, 25),
    '22SEP': new Date(2022, 8, 29),
    '22OCT': new Date(2022, 9, 27),
    '22NOV': new Date(2022, 10, 24),
    '22DEC': new Date(2022, 11, 29), */
    '23JAN': new Date(2023, 0, 25),
    '23FEB': new Date(2023, 1, 23),
    '23MAR': new Date(2023, 2, 29),
    '23APR': new Date(2023, 3, 27),
    '23MAY': new Date(2023, 4, 25),
    '23JUN': new Date(2023, 5, 28),
    '23JUL': new Date(2023, 6, 27),
    '23AUG': new Date(2023, 7, 31),
    '23SEP': new Date(2023, 8, 28),
    '23OCT': new Date(2023, 9, 26),
    '23NOV': new Date(2023, 10, 30),
    '23DEC': new Date(2023, 11, 28),
    // TODO below
};
AppConstants.monthlyExpiryDatesBNF = {
    /* '21JAN': new Date(2021, 0, 27),
    '21FEB': new Date(2021, 1, 24),
    '21MAR': new Date(2021, 2, 26),
    '21APR': new Date(2021, 3, 29),
    '21MAY': new Date(2021, 4, 26),
    '21JUN': new Date(2021, 5, 30),
    '21JUL': new Date(2021, 6, 28),
    '21AUG': new Date(2021, 7, 26),
    '21SEP': new Date(2021, 8, 29),
    '21OCT': new Date(2021, 9, 28),
    '21NOV': new Date(2021, 10, 25),
    '21DEC': new Date(2021, 11, 30), */
    /* '22JAN': new Date(2022, 0, 27),
    '22FEB': new Date(2022, 1, 24),
    '22MAR': new Date(2022, 2, 31),
    '22APR': new Date(2022, 3, 28),
    '22MAY': new Date(2022, 4, 26),
    '22JUN': new Date(2022, 5, 30),
    '22JUL': new Date(2022, 6, 28),
    '22AUG': new Date(2022, 7, 25),
    '22SEP': new Date(2022, 8, 29),
    '22OCT': new Date(2022, 9, 27),
    '22NOV': new Date(2022, 10, 24),
    '22DEC': new Date(2022, 11, 29), */
    '23JAN': new Date(2023, 0, 25),
    '23FEB': new Date(2023, 1, 23),
    '23MAR': new Date(2023, 2, 29),
    '23APR': new Date(2023, 3, 27),
    '23MAY': new Date(2023, 4, 25),
    '23JUN': new Date(2023, 5, 28),
    '23JUL': new Date(2023, 6, 27),
    '23AUG': new Date(2023, 7, 31),
    '23SEP': new Date(2023, 8, 28),
    '23OCT': new Date(2023, 9, 26),
    '23NOV': new Date(2023, 10, 30),
    '23DEC': new Date(2023, 11, 28),
    // TODO below
};
AppConstants.monthlyExpiryDatesFINNIFTY = {
    '23JAN': new Date(2023, 0, 31),
    '23FEB': new Date(2023, 1, 28),
    '23MAR': new Date(2023, 2, 28),
    '23APR': new Date(2023, 3, 25),
    '23MAY': new Date(2023, 4, 30),
    '23JUN': new Date(2023, 5, 27),
    '23JUL': new Date(2023, 6, 25),
    '23AUG': new Date(2023, 7, 29),
    '23SEP': new Date(2023, 8, 26),
    '23OCT': new Date(2023, 9, 31),
    '23NOV': new Date(2023, 10, 28),
    // TODO below
    '23DEC': new Date(2023, 11, 28),
};
AppConstants.monthlyExpiryDatesMidcap = {
    '23JAN': new Date(2023, 0, 31),
    '23FEB': new Date(2023, 1, 28),
    '23MAR': new Date(2023, 2, 28),
    '23APR': new Date(2023, 3, 25),
    '23MAY': new Date(2023, 4, 30),
    '23JUN': new Date(2023, 5, 27),
    '23JUL': new Date(2023, 6, 26),
    '23AUG': new Date(2023, 7, 28),
    '23SEP': new Date(2023, 8, 25),
    '23OCT': new Date(2023, 9, 30),
    // TODO below
    '23NOV': new Date(2023, 10, 24),
    '23DEC': new Date(2023, 11, 28),
};
AppConstants.monthlyExpiryDatesSensex = {
    '23JAN': new Date(2023, 0, 25),
    '23FEB': new Date(2023, 1, 23),
    '23MAR': new Date(2023, 2, 29),
    '23APR': new Date(2023, 3, 27),
    '23MAY': new Date(2023, 4, 25),
    '23JUN': new Date(2023, 5, 28),
    '23JUL': new Date(2023, 6, 28),
    '23AUG': new Date(2023, 7, 25),
    '23SEP': new Date(2023, 8, 29),
    '23OCT': new Date(2023, 9, 27),
    '23NOV': new Date(2023, 10, 24),
    '23DEC': new Date(2023, 11, 29),
    // TODO below
};
AppConstants.monthlyExpiryDatesBankex = {
    // TODO below
    '23JAN': new Date(2023, 0, 31),
    '23FEB': new Date(2023, 1, 28),
    '23MAR': new Date(2023, 2, 28),
    '23APR': new Date(2023, 3, 25),
    '23MAY': new Date(2023, 4, 30),
    '23JUN': new Date(2023, 5, 27),
    '23JUL': new Date(2023, 6, 26),
    '23AUG': new Date(2023, 7, 28),
    '23SEP': new Date(2023, 8, 25),
    '23OCT': new Date(2023, 9, 30),
    '23NOV': new Date(2023, 10, 24),
    '23DEC': new Date(2023, 11, 22),
};
AppConstants.monthlyExpiryDatesUSDINR = {
    /* '21JAN': new Date(2021, 0, 27),
    '21FEB': new Date(2021, 1, 24),
    '21MAR': new Date(2021, 2, 26),
    '21APR': new Date(2021, 3, 28),
    '21MAY': new Date(2021, 4, 27),
    '21JUN': new Date(2021, 5, 28),
    '21JUL': new Date(2021, 6, 27),
    '21AUG': new Date(2021, 7, 27),
    '21SEP': new Date(2021, 8, 28),
    '21OCT': new Date(2021, 9, 27),
    '21NOV': new Date(2021, 10, 26),
    '21DEC': new Date(2021, 11, 29), */
    /* '22JAN': new Date(2022, 0, 27),
    '22FEB': new Date(2022, 1, 24),
    '22MAR': new Date(2022, 2, 29),
    '22APR': new Date(2022, 3, 27),
    '22MAY': new Date(2022, 4, 27),
    '22JUN': new Date(2022, 5, 28),
    '22JUL': new Date(2022, 6, 27),
    '22AUG': new Date(2022, 7, 26),
    '22SEP': new Date(2022, 8, 28),
    '22OCT': new Date(2022, 9, 29),
    '22NOV': new Date(2022, 10, 29),
    '22DEC': new Date(2022, 11, 29), */
    '23JAN': new Date(2023, 0, 27),
    '23FEB': new Date(2023, 1, 24),
    '23MAR': new Date(2023, 2, 28),
    '23APR': new Date(2023, 3, 26),
    '23MAY': new Date(2023, 4, 29),
    '23JUN': new Date(2023, 5, 27),
    '23JUL': new Date(2023, 6, 27),
    // TODO below
    '23AUG': new Date(2023, 7, 25),
    '23SEP': new Date(2023, 8, 26),
    '23OCT': new Date(2023, 9, 27),
    '23NOV': new Date(2023, 10, 24),
    '23DEC': new Date(2023, 11, 28),
};
AppConstants.holidays = [
    /* new Date(2022, 0, 26),
    new Date(2022, 2, 1),
    new Date(2022, 2, 18),
    new Date(2022, 3, 14),
    new Date(2022, 3, 15),
    new Date(2022, 4, 3),
    new Date(2022, 7, 9),
    new Date(2022, 7, 15),
    new Date(2022, 7, 31),
    new Date(2022, 9, 5),
    new Date(2022, 9, 24),
    new Date(2022, 9, 26),
    new Date(2022, 10, 8), */
    new Date(2023, 0, 26),
    new Date(2023, 2, 7),
    new Date(2023, 2, 30),
    new Date(2023, 3, 4),
    new Date(2023, 3, 7),
    new Date(2023, 3, 14),
    new Date(2023, 4, 1),
    new Date(2023, 5, 29),
    new Date(2023, 7, 15),
    new Date(2023, 8, 19),
    new Date(2023, 9, 2),
    new Date(2023, 9, 24),
    new Date(2023, 10, 14),
    new Date(2023, 10, 27),
    new Date(2023, 11, 25),
];
AppConstants.niftyExpiries = [
    new Date(2022, 0, 6),
    new Date(2022, 0, 13),
    new Date(2022, 0, 22),
    new Date(2022, 0, 27),
    new Date(2022, 1, 3),
    new Date(2022, 1, 10),
    new Date(2022, 1, 17),
    new Date(2022, 1, 24),
    new Date(2022, 2, 3),
    new Date(2022, 2, 10),
    new Date(2022, 2, 17),
    new Date(2022, 2, 24),
    new Date(2022, 2, 31),
    new Date(2022, 3, 7),
    new Date(2022, 3, 13),
    new Date(2022, 3, 21),
    new Date(2022, 3, 28),
    new Date(2022, 4, 5),
    new Date(2022, 4, 12),
    new Date(2022, 4, 19),
    new Date(2022, 4, 26),
    new Date(2022, 5, 2),
    new Date(2022, 5, 9),
    new Date(2022, 5, 16),
    new Date(2022, 5, 23),
    new Date(2022, 5, 30),
    new Date(2022, 6, 7),
    new Date(2022, 6, 14),
    new Date(2022, 6, 21),
    new Date(2022, 6, 28),
    new Date(2022, 7, 4),
    new Date(2022, 7, 11),
    new Date(2022, 7, 18),
    new Date(2022, 7, 25),
    new Date(2022, 8, 1),
    new Date(2022, 8, 8),
    new Date(2022, 8, 15),
    new Date(2022, 8, 22),
    new Date(2022, 8, 29),
    new Date(2022, 9, 6),
    new Date(2022, 9, 13),
    new Date(2022, 9, 20),
    new Date(2022, 9, 27),
    new Date(2022, 10, 3),
    new Date(2022, 10, 10),
    new Date(2022, 10, 17),
    new Date(2022, 10, 24),
    new Date(2022, 11, 1),
    new Date(2022, 11, 8),
    new Date(2022, 11, 15),
    new Date(2022, 11, 22),
    new Date(2022, 11, 29),
    new Date(2023, 0, 5),
    new Date(2023, 0, 12),
    new Date(2023, 0, 19),
    new Date(2023, 0, 25),
    new Date(2023, 1, 2),
    new Date(2023, 1, 9),
    new Date(2023, 1, 16),
    new Date(2023, 1, 23),
    new Date(2023, 2, 2),
    new Date(2023, 2, 9),
    new Date(2023, 2, 16),
    new Date(2023, 2, 23),
    new Date(2023, 2, 29),
    new Date(2023, 3, 6),
    new Date(2023, 3, 13),
    new Date(2023, 3, 20),
    new Date(2023, 3, 27),
    new Date(2023, 4, 4),
    new Date(2023, 4, 11),
    new Date(2023, 4, 18),
    new Date(2023, 4, 25),
    new Date(2023, 5, 1),
    new Date(2023, 5, 8),
    new Date(2023, 5, 15),
    new Date(2023, 5, 22),
    new Date(2023, 5, 28),
    new Date(2023, 6, 6),
    new Date(2023, 6, 13),
    new Date(2023, 6, 20),
    new Date(2023, 6, 27),
    new Date(2023, 7, 3),
    new Date(2023, 7, 10),
    new Date(2023, 7, 17),
    new Date(2023, 7, 24),
    new Date(2023, 7, 31),
    new Date(2023, 8, 7),
    new Date(2023, 8, 14),
    new Date(2023, 8, 21),
    new Date(2023, 8, 28),
    new Date(2023, 9, 5),
    new Date(2023, 9, 12),
    new Date(2023, 9, 19),
    new Date(2023, 9, 26),
    new Date(2023, 10, 2),
    // TODO below
    /*
    new Date(2023, 10, 10),
    new Date(2023, 10, 17),
    new Date(2023, 10, 24),
    new Date(2023, 11, 1),
    new Date(2023, 11, 8),
    new Date(2023, 11, 15),
    new Date(2023, 11, 22),
    new Date(2023, 11, 29), */
];
AppConstants.bnfExpiries = [
    new Date(2022, 0, 6),
    new Date(2022, 0, 13),
    new Date(2022, 0, 22),
    new Date(2022, 0, 27),
    new Date(2022, 1, 3),
    new Date(2022, 1, 10),
    new Date(2022, 1, 17),
    new Date(2022, 1, 24),
    new Date(2022, 2, 3),
    new Date(2022, 2, 10),
    new Date(2022, 2, 17),
    new Date(2022, 2, 24),
    new Date(2022, 2, 31),
    new Date(2022, 3, 7),
    new Date(2022, 3, 13),
    new Date(2022, 3, 21),
    new Date(2022, 3, 28),
    new Date(2022, 4, 5),
    new Date(2022, 4, 12),
    new Date(2022, 4, 19),
    new Date(2022, 4, 26),
    new Date(2022, 5, 2),
    new Date(2022, 5, 9),
    new Date(2022, 5, 16),
    new Date(2022, 5, 23),
    new Date(2022, 5, 30),
    new Date(2022, 6, 7),
    new Date(2022, 6, 14),
    new Date(2022, 6, 21),
    new Date(2022, 6, 28),
    new Date(2022, 7, 4),
    new Date(2022, 7, 11),
    new Date(2022, 7, 18),
    new Date(2022, 7, 25),
    new Date(2022, 8, 1),
    new Date(2022, 8, 8),
    new Date(2022, 8, 15),
    new Date(2022, 8, 22),
    new Date(2022, 8, 29),
    new Date(2022, 9, 6),
    new Date(2022, 9, 13),
    new Date(2022, 9, 20),
    new Date(2022, 9, 27),
    new Date(2022, 10, 3),
    new Date(2022, 10, 10),
    new Date(2022, 10, 17),
    new Date(2022, 10, 24),
    new Date(2022, 11, 1),
    new Date(2022, 11, 8),
    new Date(2022, 11, 15),
    new Date(2022, 11, 22),
    new Date(2022, 11, 29),
    new Date(2023, 0, 5),
    new Date(2023, 0, 12),
    new Date(2023, 0, 19),
    new Date(2023, 0, 25),
    new Date(2023, 1, 2),
    new Date(2023, 1, 9),
    new Date(2023, 1, 16),
    new Date(2023, 1, 23),
    new Date(2023, 2, 2),
    new Date(2023, 2, 9),
    new Date(2023, 2, 16),
    new Date(2023, 2, 23),
    new Date(2023, 2, 29),
    new Date(2023, 3, 6),
    new Date(2023, 3, 13),
    new Date(2023, 3, 20),
    new Date(2023, 3, 27),
    new Date(2023, 4, 4),
    new Date(2023, 4, 11),
    new Date(2023, 4, 18),
    new Date(2023, 4, 25),
    new Date(2023, 5, 1),
    new Date(2023, 5, 8),
    new Date(2023, 5, 15),
    new Date(2023, 5, 22),
    new Date(2023, 5, 28),
    new Date(2023, 6, 6),
    new Date(2023, 6, 13),
    new Date(2023, 6, 20),
    new Date(2023, 6, 27),
    new Date(2023, 7, 3),
    new Date(2023, 7, 10),
    new Date(2023, 7, 17),
    new Date(2023, 7, 24),
    new Date(2023, 7, 31),
    new Date(2023, 8, 6),
    new Date(2023, 8, 13),
    new Date(2023, 8, 20),
    new Date(2023, 8, 27),
    new Date(2023, 9, 4),
    new Date(2023, 9, 11),
    new Date(2023, 9, 18),
    new Date(2023, 9, 26),
    new Date(2023, 10, 1),
    // TODO below
    /*
     new Date(2023, 10, 10),
     new Date(2023, 10, 17),
     new Date(2023, 10, 24),
     new Date(2023, 11, 1),
     new Date(2023, 11, 8),
     new Date(2023, 11, 15),
     new Date(2023, 11, 22),
     new Date(2023, 11, 29), */
];
AppConstants.finniftyExpiries = [
    new Date(2023, 0, 5),
    new Date(2023, 0, 12),
    new Date(2023, 0, 19),
    new Date(2023, 0, 25),
    new Date(2023, 1, 7),
    new Date(2023, 1, 14),
    new Date(2023, 1, 21),
    new Date(2023, 1, 28),
    new Date(2023, 2, 6),
    new Date(2023, 2, 14),
    new Date(2023, 2, 21),
    new Date(2023, 2, 28),
    new Date(2023, 3, 3),
    new Date(2023, 3, 11),
    new Date(2023, 3, 18),
    new Date(2023, 3, 25),
    new Date(2023, 4, 2),
    new Date(2023, 4, 9),
    new Date(2023, 4, 16),
    new Date(2023, 4, 23),
    new Date(2023, 4, 30),
    new Date(2023, 5, 6),
    new Date(2023, 5, 13),
    new Date(2023, 5, 20),
    new Date(2023, 5, 27),
    new Date(2023, 6, 6),
    new Date(2023, 6, 13),
    new Date(2023, 6, 20),
    new Date(2023, 6, 27),
    new Date(2023, 7, 1),
    new Date(2023, 7, 8),
    new Date(2023, 7, 14),
    new Date(2023, 7, 22),
    new Date(2023, 7, 29),
    new Date(2023, 8, 5),
    new Date(2023, 8, 12),
    new Date(2023, 8, 18),
    new Date(2023, 8, 26),
    new Date(2023, 9, 3),
    new Date(2023, 9, 10),
    new Date(2023, 9, 17),
    new Date(2023, 9, 23),
    new Date(2023, 9, 31),
    // TODO below,
    /*
    new Date(2023, 10, 3),
    new Date(2023, 10, 10),
    new Date(2023, 10, 17),
    new Date(2023, 10, 24),
    new Date(2023, 11, 1),
    new Date(2023, 11, 8),
    new Date(2023, 11, 15),
    new Date(2023, 11, 22),
    new Date(2023, 11, 29), */
];
AppConstants.midcapExpiries = [
    /* new Date(2023, 0, 5),
    new Date(2023, 0, 12),
    new Date(2023, 0, 19),
    new Date(2023, 0, 25),
    new Date(2023, 1, 7),
    new Date(2023, 1, 14),
    new Date(2023, 1, 21),
    new Date(2023, 1, 28),
    new Date(2023, 2, 6),
    new Date(2023, 2, 14),
    new Date(2023, 2, 21),
    new Date(2023, 2, 28),
    new Date(2023, 3, 3),
    new Date(2023, 3, 11),
    new Date(2023, 3, 18),
    new Date(2023, 3, 25),
    new Date(2023, 4, 2),
    new Date(2023, 4, 9),
    new Date(2023, 4, 16),
    new Date(2023, 4, 23),
    new Date(2023, 4, 30),
    new Date(2023, 5, 6),
    new Date(2023, 5, 13),
    new Date(2023, 5, 20),
    new Date(2023, 5, 27), */
    new Date(2023, 6, 12),
    new Date(2023, 6, 19),
    new Date(2023, 6, 26),
    new Date(2023, 7, 2),
    new Date(2023, 7, 9),
    new Date(2023, 7, 16),
    new Date(2023, 7, 21),
    new Date(2023, 7, 28),
    new Date(2023, 8, 4),
    new Date(2023, 8, 11),
    new Date(2023, 8, 18),
    new Date(2023, 8, 25),
    new Date(2023, 8, 29),
    new Date(2023, 9, 9),
    new Date(2023, 9, 16),
    new Date(2023, 9, 23),
    new Date(2023, 9, 30),
    // TODO below
    /*
    new Date(2023, 10, 3),
    new Date(2023, 10, 10),
    new Date(2023, 10, 17),
    new Date(2023, 10, 24),
    new Date(2023, 11, 1),
    new Date(2023, 11, 8),
    new Date(2023, 11, 15),
    new Date(2023, 11, 22),
    new Date(2023, 11, 29), */
];
AppConstants.sensexExpiries = [
    /* new Date(2023, 0, 5),
    new Date(2023, 0, 12),
    new Date(2023, 0, 19),
    new Date(2023, 0, 25),
    new Date(2023, 1, 7),
    new Date(2023, 1, 14),
    new Date(2023, 1, 21),
    new Date(2023, 1, 28),
    new Date(2023, 2, 6),
    new Date(2023, 2, 14),
    new Date(2023, 2, 21),
    new Date(2023, 2, 28),
    new Date(2023, 3, 3),
    new Date(2023, 3, 11),
    new Date(2023, 3, 18),
    new Date(2023, 3, 25),
    new Date(2023, 4, 2),
    new Date(2023, 4, 9),
    new Date(2023, 4, 16),
    new Date(2023, 4, 23),
    new Date(2023, 4, 30),
    new Date(2023, 5, 6),
    new Date(2023, 5, 13),
    new Date(2023, 5, 20),
    new Date(2023, 5, 27), */
    new Date(2023, 6, 14),
    new Date(2023, 6, 21),
    new Date(2023, 6, 28),
    new Date(2023, 7, 4),
    new Date(2023, 7, 11),
    new Date(2023, 7, 18),
    new Date(2023, 7, 25),
    new Date(2023, 8, 1),
    new Date(2023, 8, 8),
    new Date(2023, 8, 15),
    new Date(2023, 8, 22),
    new Date(2023, 8, 29),
    new Date(2023, 9, 6),
    new Date(2023, 9, 13),
    new Date(2023, 9, 20),
    new Date(2023, 9, 27),
    new Date(2023, 10, 3),
    new Date(2023, 10, 10),
    // TODO below,
    /*
    new Date(2023, 10, 17),
    new Date(2023, 10, 24),
    new Date(2023, 11, 1),
    new Date(2023, 11, 8),
    new Date(2023, 11, 15),
    new Date(2023, 11, 22),
    new Date(2023, 11, 29), */
];
AppConstants.bankexExpiries = [
    new Date(2023, 9, 23),
    new Date(2023, 9, 30),
    new Date(2023, 10, 6),
    new Date(2023, 10, 13),
    new Date(2023, 10, 20),
    new Date(2023, 10, 24),
    // TODO below
    /*
    new Date(2023, 11, 1),
    new Date(2023, 11, 8),
    new Date(2023, 11, 15),
    new Date(2023, 11, 22),
    new Date(2023, 11, 29), */
];
AppConstants.usdinrExpiries = [
    new Date(2023, 0, 5),
    new Date(2023, 0, 12),
    new Date(2023, 0, 19),
    new Date(2023, 0, 25),
    new Date(2023, 1, 3),
    new Date(2023, 1, 10),
    new Date(2023, 1, 17),
    new Date(2023, 1, 24),
    new Date(2023, 2, 3),
    new Date(2023, 2, 10),
    new Date(2023, 2, 17),
    new Date(2023, 2, 24),
    new Date(2023, 2, 28),
    new Date(2023, 2, 31),
    new Date(2023, 3, 6),
    new Date(2023, 3, 13),
    // TODO below
    new Date(2023, 3, 21),
    new Date(2023, 3, 28),
    new Date(2023, 4, 5),
    new Date(2023, 4, 12),
    new Date(2023, 4, 19),
    new Date(2023, 4, 26),
    new Date(2023, 5, 2),
    new Date(2023, 5, 9),
    new Date(2023, 5, 16),
    new Date(2023, 5, 23),
    new Date(2023, 5, 30),
    new Date(2023, 6, 7),
    new Date(2023, 6, 14),
    new Date(2023, 6, 21),
    new Date(2023, 6, 28),
    new Date(2023, 7, 4),
    new Date(2023, 7, 11),
    new Date(2023, 7, 18),
    new Date(2023, 7, 25),
    new Date(2023, 8, 1),
    new Date(2023, 8, 8),
    new Date(2023, 8, 15),
    new Date(2023, 8, 22),
    new Date(2023, 8, 29),
    new Date(2023, 9, 6),
    new Date(2023, 9, 13),
    new Date(2023, 9, 20),
    new Date(2023, 9, 27),
    new Date(2023, 10, 3),
    new Date(2023, 10, 10),
    new Date(2023, 10, 17),
    new Date(2023, 10, 24),
    new Date(2023, 11, 1),
    new Date(2023, 11, 8),
    new Date(2023, 11, 15),
    new Date(2023, 11, 22),
    new Date(2023, 11, 29),
];
/* Enter Supports from high to low, Enter Resistances from Low to High */
AppConstants.holdings = {
    /* 'NIFTY 50': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 17369, 'qty': 161, 'support': [16800, 16500], 'resistance': [18350, 18600] }, */ /* 187.97 * 92.4 */ /* 185.4 * 92.4 */
    /* 'NIFTY BANK': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 36938, 'qty': 27, 'support': [34200], 'resistance': [38900, 41800] }, */ /* 369.38 * 99.5 */
    'NIFTYBEES': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 182.78, 'qty': 696, 'support': [180], 'resistance': [207] },
    'BANKBEES': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 373.28, 'qty': 171, 'support': [350], 'resistance': [410] },
    'NETFIT': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 35.33, 'qty': 1750, 'support': [35], 'resistance': [40] },
    'ADANIPORTS': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [650], 'resistance': [900] },
    'ASIANPAINT': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 3098.95, 'qty': 3, 'support': [3000, 2860], 'resistance': [3600] },
    'AXISBANK': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [650], 'resistance': [770, 850] },
    'BAJAJ-AUTO': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [3300], 'resistance': [4000, 4300] },
    'BAJAJFINSV': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 17013.7, 'qty': 1, 'support': [15500], 'resistance': [19200] },
    'BAJFINANCE': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [6500], 'resistance': [8000] },
    'BHARTIARTL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [650], 'resistance': [780] },
    'BPCL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [360, 250], 'resistance': [500, 550] },
    'BRITANNIA': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [3400], 'resistance': [3800, 4150] },
    'CIPLA': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [870], 'resistance': [1000] },
    'COALINDIA': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [140], 'resistance': [200] },
    'DIVISLAB': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [4350], 'resistance': [5400] },
    'DRREDDY': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [4250], 'resistance': [5600] },
    'EICHERMOT': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [2350], 'resistance': [3000] },
    'GRASIM': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 1733.95, 'qty': 6, 'support': [1600], 'resistance': [1900] },
    'HCLTECH': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1100], 'resistance': [1360] },
    'HDFC': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [2500], 'resistance': [3000] },
    'HDFCBANK': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1400], 'resistance': [1700] },
    'HDFCLIFE': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [630], 'resistance': [760] },
    'HEROMOTOCO': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [2300], 'resistance': [3600] },
    'HINDALCO': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [410], 'resistance': [550] },
    'HINDUNILVR': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [2230], 'resistance': [2800] },
    'ICICIBANK': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [710], 'resistance': [850] },
    'INDUSINDBK': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [810], 'resistance': [1230] },
    'INFY': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1800, 1670], 'resistance': [1950] },
    'IOC': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [110], 'resistance': [140, 170] },
    'ITC': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [210, 200], 'resistance': [260] },
    'JSWSTEEL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [620], 'resistance': [770] },
    'KOTAKBANK': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1720], 'resistance': [2200] },
    'LT': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1740], 'resistance': [2070] },
    'M&M': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [800, 730], 'resistance': [980] },
    'MARUTI': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 8565.9, 'qty': 1, 'support': [7000], 'resistance': [8300, 9900] },
    'NESTLEIND': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 18927.05, 'qty': 1, 'support': [18600], 'resistance': [20600] },
    'NTPC': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [120], 'resistance': [150] },
    'ONGC': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [130], 'resistance': [170] },
    'POWERGRID': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 202.1, 'qty': 45, 'support': [198], 'resistance': [215] },
    'RELIANCE': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 2481, 'qty': 4, 'support': [2350], 'resistance': [2750] },
    'SBILIFE': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 1183.8, 'qty': 8, 'support': [1100], 'resistance': [1290] },
    'SBIN': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [450], 'resistance': [540] },
    'SHREECEM': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [25300], 'resistance': [31300] },
    'SUNPHARMA': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 829.8, 'qty': 12, 'support': [730], 'resistance': [870] },
    'TATACONSUM': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [700], 'resistance': [880] },
    'TATAMOTORS': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 513.9, 'qty': 20, 'support': [440], 'resistance': [530] },
    'TATASTEEL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1060], 'resistance': [1500] },
    'TCS': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [3400], 'resistance': [4000] },
    'TECHM': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1540], 'resistance': [1830] },
    'TITAN': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 2330.5, 'qty': 4, 'support': [2200], 'resistance': [2680] },
    'ULTRACEMCO': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [7000], 'resistance': [8200] },
    'UPL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [700], 'resistance': [850] },
    'WIPRO': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [600], 'resistance': [725] },
    'RADICO': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 1068.1, 'qty': 9, 'support': [1000], 'resistance': [1300] },
    'VBL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 901.7, 'qty': 11, 'support': [810], 'resistance': [1000] },
    'ACC': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [2100], 'resistance': [2600] },
    'ADANIENT': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 1860.9, 'qty': 6, 'support': [1750, 1350], 'resistance': [1800, 1900] },
    'ADANIGREEN': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1500, 875], 'resistance': [1500, 1900] },
    'ADANITRANS': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1650], 'resistance': [2040] },
    'AMBUJACEM': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [350], 'resistance': [440] },
    'APOLLOHOSP': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [4000], 'resistance': [5930] },
    'AUROPHARMA': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [620], 'resistance': [770, 1060] },
    'BAJAJHLDNG': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [5000], 'resistance': [5650] },
    'BANDHANBNK': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [250], 'resistance': [430, 630] },
    'BANKBARODA': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [70], 'resistance': [140] },
    'BERGEPAINT': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [720], 'resistance': [870] },
    'BIOCON': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [320], 'resistance': [480] },
    'BOSCHLTD': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [13300, 8000], 'resistance': [19100, 22400, 27900] },
    'CADILAHC': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [410], 'resistance': [570, 670] },
    'CHOLAFIN': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 654.79, 'qty': 31, 'support': [470], 'resistance': [670] },
    'COLPAL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1400], 'resistance': [1750, 1800] },
    'DABUR': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [550], 'resistance': [650] },
    'DLF': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [360], 'resistance': [450] },
    'DMART': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 4704.85, 'qty': 2, 'support': [4170], 'resistance': [5200] },
    'GAIL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [125], 'resistance': [170, 200] },
    'GLAND': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [3350], 'resistance': [4050, 4300] },
    'GODREJCP': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [880], 'resistance': [1130] },
    'HAVELLS': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1240], 'resistance': [1500] },
    'HDFCAMC': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [2200], 'resistance': [3300] },
    'HINDPETRO': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [275], 'resistance': [350] },
    'ICICIGI': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1330], 'resistance': [1650] },
    'ICICIPRULI': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [530], 'resistance': [700] },
    'IGL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [450, 370], 'resistance': [600] },
    'INDIGO': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1800], 'resistance': [2350] },
    'INDUSTOWER': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [235], 'resistance': [330] },
    'JINDALSTEL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [350], 'resistance': [500] },
    'JUBLFOOD': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [3400], 'resistance': [4575] },
    'LTI': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [6300], 'resistance': [7550] },
    'LUPIN': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [860], 'resistance': [1260] },
    'MARICO': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [490], 'resistance': [600] },
    'MCDOWELL-N': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [860, 820], 'resistance': [1000] },
    'MUTHOOTFIN': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [1410], 'resistance': [1700] },
    'NAUKRI': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [5100], 'resistance': [7200] },
    'NMDC': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [130], 'resistance': [200] },
    'PEL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [2400], 'resistance': [3000] },
    'PGHH': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [15400, 14300], 'resistance': [16200] },
    'PIDILITIND': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 2648.45, 'qty': 4, 'support': [2500], 'resistance': [2750] },
    'PIIND': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [2730], 'resistance': [3500] },
    'PNB': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [36], 'resistance': [48] },
    'SAIL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [100], 'resistance': [145] },
    'SBICARD': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [880], 'resistance': [1150] },
    'SIEMENS': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [2100], 'resistance': [2550] },
    'TORNTPHARM': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [2740], 'resistance': [3280] },
    'VEDL': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [300], 'resistance': [370] },
    'YESBANK': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': null, 'qty': null, 'support': [10], 'resistance': [20] },
    'NYKAA': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 1690, 'qty': 3, 'support': [], 'resistance': [] },
    'ZOMATO': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 92.75, 'qty': 50, 'support': [], 'resistance': [] },
    'PAYTM': { 'ltp': null, 'volume': null, 'oned': null, 'onew': null, 'onem': null, 'threem': null, 'fiftytwow': null, 'avgp': 779.91, 'qty': 12, 'support': [], 'resistance': [] },
};
AppConstants.audioSuccess = 'data:audio/mp3;base64,';
AppConstants.audioError = 'data:audio/mp3;base64,';
AppConstants.audioWarn = 'data:audio/mp3;base64,';
AppConstants.dummyResPos = '{"s":"ok","netPositions":[{"crossCurrency":"N","qty":16,"realized_profit":0,"id":"NSE:JPASSOCIAT-EQ-CNC","unrealized_profit":0.32,"buyQty":16,"sellAvg":0,"sellQty":0,"buyAvg":4.78,"symbol":"NSE:JPASSOCIAT-EQ","fyToken":"101000000011460","slNo":0,"avgPrice":4.78,"segment":"E","dummy":" ","rbiRefRate":1,"side":1,"netQty":16,"pl":0.32,"productType":"CNC","netAvg":4.78,"qtyMulti_com":1},{"crossCurrency":"N","qty":16,"realized_profit":0,"id":"NSE:JPASSOCIAT-EQ-CNC","unrealized_profit":0.32,"buyQty":16,"sellAvg":0,"sellQty":0,"buyAvg":4.78,"symbol":"NSE:JPASSOCIAT-EQ","fyToken":"101000000011460","slNo":0,"avgPrice":4.78,"segment":"E","dummy":" ","rbiRefRate":1,"side":1,"netQty":16,"pl":0.32,"productType":"CNC","netAvg":4.78,"qtyMulti_com":1}],"message":""}';
AppConstants.dummyResOrd = '{"s":"ok","message":"","orderBook":[{"status":5,"symbol":"NSE:TCSEQ","qty":1,"orderNumStatus":"119050790482:5","dqQtyRem":5,"orderDateTime":"07-May-2019 15:18:04","orderValidity":"IOC","fyToken":"101000000011536","slNo":1,"message":"RMS:119050790482:Not allowed to trade in NSE EQ","segment":"E","id":"119050790482","stopPrice":0,"exchOrdId":0,"remainingQuantity":1,"filledQty":0,"limitPrice":2155,"offlineOrder":"false","instrument":"EQUITY","productType":"CNC","type":1,"side":1,"discloseQty":5,"tradedPrice":0}]}';


/***/ }),

/***/ 6982:
/*!*****************************************!*\
  !*** ./src/app/common/fyers.service.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "FyersService": () => (/* binding */ FyersService)
/* harmony export */ });
/* harmony import */ var _application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application.constant */ 8001);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




// const fyers = require('fyers-api');
// import * as fyers from 'fyers-api';
class FyersService {
    constructor(http) {
        this.http = http;
        this.baseUrl = 'https://api.fyers.in/api/v1/';
        this.dataUrl = 'https://data.fyers.in/data-api/v1/';
        this.testUrl = 'https://jsonplaceholder.typicode.com/posts';
    }
    auth() {
        /* let reqBody = { 'app_id': AppConstants.fyersAppId, 'secret_key':  AppConstants.fyersSecretId };
        return fyers.auth(reqBody); */
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpHeaders({
                /* Authorization: auth, */
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + 'auth';
        let body = { 'app_id': _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.fyersAppId, 'secret_key': _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.fyersSecretId };
        return this.http.post(url, body, httpOptions);
    }
    getTokenUrl(auth_code, appId) {
        /* return fyers.generateToken(); */
        return this.baseUrl + 'genrateToken' + '?authorization_code=' + auth_code + '&appId=' + appId;
    }
    getFunds(access_token) {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpHeaders({
                Authorization: access_token,
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + 'funds';
        return this.http.get(url, httpOptions);
    }
    getPositions(access_token) {
        /* return from(
          [this.convertToJson(AppConstants.dummyResPos.replace('\ufeff', ''))]
        ); */
        /* return from(
          [JSON.parse(AppConstants.dummyResPos)]
        ); */
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpHeaders({
                Authorization: access_token,
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + 'positions';
        return this.http.get(url, httpOptions);
    }
    getOrders(access_token) {
        /* return from(
          [JSON.parse(AppConstants.dummyResOrd)]
        ); */
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpHeaders({
                Authorization: access_token,
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + 'orders';
        return this.http.get(url, httpOptions);
    }
    place_order(access_token, body) {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpHeaders({
                Authorization: access_token,
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + 'orders';
        return this.http.post(url, body, httpOptions);
    }
}
FyersService.ɵfac = function FyersService_Factory(t) { return new (t || FyersService)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient)); };
FyersService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: FyersService, factory: FyersService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 3609:
/*!********************************************!*\
  !*** ./src/app/common/holdings.service.ts ***!
  \********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HoldingsService": () => (/* binding */ HoldingsService)
/* harmony export */ });
/* harmony import */ var _application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application.constant */ 8001);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);




class HoldingsService {
    constructor(http) {
        this.http = http;
        /*
      go to https://www.nseindia.com/
      in the search bar, search for instrument like TCS
      on instrument's page, scroll down and select Historical Data tab
      select 3M and click Filter
      get the url from Network tab in dev console
      example: https://www.nseindia.com/api/historical/cm/equity?symbol=TCS&series=[%22EQ%22]&from=21-09-2021&to=21-12-2021
  
      for nf, bnf:
      gives 1 year by default:
      https://query1.finance.yahoo.com/v8/finance/chart/%5ENSEI
      https://query1.finance.yahoo.com/v8/finance/chart/%5ENSEBANK
      also for stocks, but does not give 52W high:
      https://query1.finance.yahoo.com/v8/finance/chart/TCS.NS
      for providing range:
      https://query1.finance.yahoo.com/v8/finance/chart/%5ENSEI?formatted=true&lang=en-US&region=US&includeAdjustedClose=true&interval=1d&period1=1632182400&period2=1640044800
      https://query1.finance.yahoo.com/v8/finance/chart/%5ENSEBANK?formatted=true&lang=en-US&region=US&includeAdjustedClose=true&interval=1d&period1=1632182400&period2=1640044800
      or get the data from https://www1.nseindia.com/products/content/equities/indices/historical_index_data.htm
      */
        /*
        let u1 = 'https://www.nseindia.com/api/historical/cm/equity?symbol=TCS&series=[%22EQ%22]&from=21-09-2021&to=21-12-2021';
        this.http.get(u1, httpOptions).subscribe((res: any) => {
          console.log('nse', res);
        });
        let u2 = 'https://www.nseindia.com/api/historical/cm/equity?symbol=INFY&series=[%22EQ%22]&from=21-09-2021&to=21-12-2021';
        this.http.get(u2, httpOptions).subscribe((res: any) => {
          console.log('nse2', res);
        });
        let u3 = 'https://www.nseindia.com/api/historical/cm/equity?symbol=GRASIM&series=[%22EQ%22]&from=21-09-2021&to=21-12-2021';
        this.http.get(u3, httpOptions).subscribe((res: any) => {
          console.log('nse3', res);
        });
        */
        this.holdingsMap = {
            'ADANIPORTS.NS': { 'holding': false, 'average': null },
            'ASIANPAINT.NS': { 'holding': true, 'average': 3098.95 },
        };
        this.backtestMap = {};
        this.shortlistedStocks = [];
        // *** add scrips from only ONE expiry to wathclist 5
        // update append value - for weekly add WK and keep empty for monthly
        // get authorization header from minute request
        // get response of marketwatch request
        // get date range from minute url
        this.append = '';
        this.auth = '';
        this.marketwatch = '';
        this.from_date = '';
        this.to_date = '';
        this.expiry_date = '';
        this.instruments = [];
        this.delay = 200;
        this.data = {};
        this.niftyReturn = {};
    }
    getZerodhaInstruments(append, auth, from_date, to_date, expiry_date) {
        this.append = append;
        this.auth = auth;
        this.from_date = from_date;
        this.to_date = to_date;
        this.expiry_date = expiry_date;
        let httpOptions = {
            responseType: 'text'
        };
        let url = 'https://api.kite.trade/instruments';
        this.http.get(url, httpOptions).subscribe((res) => {
            console.log('zerodha instruments', res);
            let allTextLines_all_data = res.split(/\r|\n|\r/);
            let allTextLines = allTextLines_all_data.filter(function (elem) {
                return elem !== '';
            });
            this.instruments = [];
            // console.log('allTextLines_all_data', allTextLines_all_data);
            for (let index = 1; index < allTextLines.length; index++) { // ignore first line - headers
                // 10698242,41790,BANKNIFTY2310544000CE,"BANKNIFTY",0,2023-01-05,44000,0.05,25,CE,NFO-OPT,NFO
                let split = allTextLines[index].split(',');
                let tradingsymbol = split[2];
                let name = split[3].replaceAll('"', '');
                let expiry = split[5];
                if (((name === 'NIFTY' || name === 'BANKNIFTY' || name === 'FINNIFTY' || name === 'MIDCPNIFTY' || name === 'SENSEX' || name === 'BANKEX') && expiry === this.expiry_date)
                    || (name === 'NIFTY 50' || name === 'NIFTY BANK' || name === 'NIFTY FIN SERVICE' || name === 'NIFTY MIDCAP SELECT (MIDCPNIFTY)' || tradingsymbol === 'SENSEX' || name === 'BSE INDEX BANKEX')) {
                    this.instruments.push(allTextLines[index]);
                    //console.log(allTextLines[index]);
                    /* setTimeout(() => {
                      console.log('item', allTextLines[index]);
                      this.getItem(allTextLines[index]);
                    }, index * this.delay); */
                }
            }
            console.log('Instruments to fetch: ', this.instruments.length);
            for (let i = 0; i < this.instruments.length; i++) {
                setTimeout(() => {
                    let item = this.instruments[i];
                    console.log('item', i, item);
                    let isLastItem = false;
                    if (i === this.instruments.length - 1) {
                        isLastItem = true;
                        console.log('last item', this.instruments.length - 1);
                    }
                    this.getItem(item, isLastItem);
                }, i * this.delay);
            }
        }, error => {
            console.log('zerodha instruments error', error);
        });
    }
    fetchCandles(append, auth, marketwatch, from_date, to_date, expiry_date) {
        this.append = append;
        this.auth = auth;
        this.marketwatch = marketwatch;
        this.from_date = from_date;
        this.to_date = to_date;
        this.expiry_date = expiry_date;
        // let json = JSON.parse(this.marketwatch);
        // let items = json.data[4].items;
        // console.log('marketwatch watchlist 5: ', json.data[4].items.length, json.data[4]);
        //for (let i = 0; i < items.length; i++) {
        for (let i = 0; i < this.instruments.length; i++) {
            setTimeout(() => {
                let item = this.instruments[i];
                console.log('item', i, item);
                this.getItem(item, false);
            }, i * this.delay);
        }
    }
    getItem(item, isLastItem) {
        const headers = new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpHeaders({
            'authorization': this.auth,
        });
        let httpOptions = {
            responseType: 'json',
            headers: headers
        };
        // let symbol = item.tradingsymbol; // let symbol = 'USDINR2210775.5CE' 'USDINR22FEB74PE' 'USDINR22107FUT';
        // let token = item.instrument_token;
        // console.log(symbol, token);
        let split = item.split(',');
        let instru_token = split[0];
        let exchg_token = split[1];
        let tradingsymbol = split[2];
        let name = split[3].replaceAll('"', '');
        let last_price = split[4];
        let expiry = split[5];
        let strike = split[6];
        let type = split[9];
        /* let strike = symbol.substring(11);
        let scrip = 'USDINR' + this.append + strike;
        if (strike.includes('FUT')) {
          scrip = 'USDINR';
        } */
        let scrip = name + this.append + strike + type;
        if (name === 'NIFTY 50') {
            scrip = 'NIFTY';
        }
        if (name === 'NIFTY BANK') {
            scrip = 'BANKNIFTY';
        }
        if (name === 'NIFTY FIN SERVICE') {
            scrip = 'NIFTY FIN SERVICE';
        }
        if (name === 'NIFTY MIDCAP SELECT (MIDCPNIFTY)') {
            scrip = 'NIFTY MIDCAP SELECT (MIDCPNIFTY)';
        }
        if (tradingsymbol === 'SENSEX') {
            scrip = 'SENSEX';
        }
        if (name === 'BSE INDEX BANKEX') {
            scrip = 'BSE INDEX BANKEX';
        }
        // let url = 'https://www.nseindia.com/api/chart-databyindex?index=OPTCURUSDINR31-12-2021CE74.5000';
        // url = 'https://kite.zerodha.com/api/marketwatch';
        // let url = 'https://kite.zerodha.com/oms/instruments/historical/2085635/minute?user_id=FW6041&oi=1&from=2021-12-02&to=2022-01-01';
        let url = 'https://kite.zerodha.com/oms/instruments/historical/' + instru_token + '/minute?user_id=' + _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.zerodhaUserId + '&oi=1&from=' + this.from_date + '&to=' + this.to_date;
        this.http.get(url, httpOptions).subscribe((res) => {
            console.log('scrip data:', scrip, res);
            if (res.data.candles) {
                let arr = res.data.candles;
                if (arr.length === 0) {
                    console.log('ZERO CANDLES FOR ', scrip);
                }
                for (let j = 0; j < arr.length; j++) {
                    let element = arr[j];
                    let obj = this.data[scrip]; // getting all data for scrip
                    if (!obj) {
                        obj = {};
                    }
                    let d = this.getDateInFormat(element[0]);
                    obj[d] = [element[1], element[2], element[3], element[4], element[5], element[6]];
                    this.data[scrip] = obj;
                }
            }
            console.log('candles:', Object.keys(this.data).length, this.data);
            if (isLastItem === true) {
                this.exportToCSV();
            }
        });
    }
    getDataFromThirdParty(instru, append, from_date, to_date, expiry_date, startdate, upper_range, lower_range) {
        this.append = append;
        this.from_date = from_date;
        this.to_date = to_date;
        this.expiry_date = expiry_date;
        this.delay = 15000;
        let increment = 50;
        if (instru === 'CNXBAN') {
            increment = 100;
        }
        // console.log('printing', instru, increment, upper_range, lower_range);
        let count = 0;
        for (let i = lower_range; i <= upper_range; i += increment) {
            setTimeout(() => {
                console.log('item', i);
                this.getDataItemFromThirdParty(instru, i + 'CE', i, '', expiry_date, startdate);
                setTimeout(() => {
                    this.getDataItemFromThirdParty(instru, i + 'PE', '', i, expiry_date, startdate);
                }, 5000);
                setTimeout(() => {
                    this.getDataItemFromThirdParty(instru, '', '', '', expiry_date, startdate);
                }, 10000);
            }, count * this.delay);
            count++;
        }
    }
    getDataItemFromThirdParty(instru, strike, ce_strike, pe_strike, expiry, startdate) {
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpHeaders({
                'Content-type': 'application/json; charset=UTF-8'
            }),
            responseType: 'json'
        };
        let url = 'https://icici-historial.up.railway.app/ohlc';
        let body = JSON.stringify({
            "ce_strike": '' + ce_strike,
            "pe_strike": '' + pe_strike,
            "index_symbol": instru,
            "expiry": expiry,
            "startdate": startdate,
        });
        // let scrip = name + this.append + strike + type;
        let scrip = instru + this.append + strike;
        if (strike === '') {
            scrip = instru;
        }
        this.http.post(url, body /* b.toString() */, httpOptions).subscribe((res) => {
            console.log('getDataFromThirdParty response', res);
            let ohlc_arr = res.combined;
            if (!ohlc_arr || ohlc_arr.date.length === 0) {
                console.log('ZERO CANDLES FOR ', scrip);
            }
            for (let i = 0; i < ohlc_arr.date.length; i++) {
                let curr_date = ohlc_arr.date[i];
                let curr_open = ohlc_arr.open[i];
                let curr_high = ohlc_arr.high[i];
                let curr_low = ohlc_arr.low[i];
                let curr_close = ohlc_arr.close[i];
                let obj = this.data[scrip]; // getting all data for scrip
                if (!obj) {
                    obj = {};
                }
                let d = this.getDateInFormat(curr_date);
                obj[d] = [curr_open, curr_high, curr_low, curr_close, 0, 0];
                this.data[scrip] = obj;
            }
            console.log('candles:', Object.keys(this.data).length, this.data);
        }, error => {
            console.log('getDataFromThirdParty error', error);
        });
        ;
    }
    exportToCSV() {
        let expiry_string = 'Monthly';
        if (this.append === 'WK') {
            expiry_string = 'Weekly';
        }
        let export_file_name = this.expiry_date + ' ' + expiry_string + '.csv';
        console.log('exporting: ', export_file_name);
        if (this.data) {
            let str = '';
            str += 'Ticker,Date/Time,Open,High,Low,Close,Volume,Open Interest\r\n';
            for (let key in this.data) { // for each scrip
                for (let key1 in this.data[key]) { // for each time in scrip
                    let row = '';
                    let arr = this.data[key][key1];
                    row += key + ',' + key1 + ',' + arr[0] + ',' + arr[1] + ',' + arr[2] + ',' + arr[3] + ',' + arr[4] + ',' + arr[5];
                    str += row + '\r\n';
                }
            }
            const downloadFile = new Blob([str], {
                type: 'application/x-msdownload',
            });
            /* if (window.navigator && window.navigator.msSaveOrOpenBlob) { // for IE
              window.navigator.msSaveOrOpenBlob(downloadFile, export_file_name);
            } else { */
            const fileURL = URL.createObjectURL(downloadFile);
            const link = document.createElement('a');
            link.href = fileURL;
            link.target = '_blank';
            document.body.appendChild(link);
            link.download = export_file_name;
            link.click();
            link.parentNode.removeChild(link);
            // }
        }
        localStorage.setItem('export_' + this.expiry_date, JSON.stringify('true'));
        _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.isHistoricalRunning = false;
    }
    getDateInFormat(str = null) {
        if (!str) {
            str = new Date();
        }
        let date = new Date(str);
        let d = date.getDate();
        let m = date.getMonth() + 1; //Month from 0 to 11
        let y = date.getFullYear();
        let h = date.getHours();
        let mins = date.getMinutes();
        let s = date.getSeconds();
        // dd-mm-yyyy hh:mm:ss
        let format = '' + (d <= 9 ? '0' + d : d) + '-' + (m <= 9 ? '0' + m : m) + '-' + y + ' ' + (h <= 9 ? '0' + h : h) + ':' + (mins <= 9 ? '0' + mins : mins) + ':' + (s <= 9 ? '0' + s : s);
        return format;
    }
    loadHoldings() {
        let portfolio_return = 0;
        let holdings = [];
        let total_investment = 0;
        let current_value = 0;
        // console.log(AppConstants.holdings);
        for (let key in _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings) {
            if (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings.hasOwnProperty(key)) {
                // doing here and not in fetchStockHistoricalData to avoid overwriting of average price in appconstants
                let avgp = null;
                let supp_str = '';
                let res_str = '';
                let buyvalue = null;
                if (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['avgp']) {
                    avgp = (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['ltp'] - _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['avgp']) * 100 / _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['avgp'];
                    avgp = Math.round((avgp + 0.00001) * 100) / 100;
                    let avgp_adj = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['avgp'];
                    let ltp_adj = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['ltp'];
                    if (key === 'NIFTY 50') {
                        avgp_adj = avgp_adj / 92.4;
                        ltp_adj = ltp_adj / 92.4;
                    }
                    if (key === 'NIFTY BANK') {
                        avgp_adj = avgp_adj / 100;
                        ltp_adj = ltp_adj / 100;
                    }
                    buyvalue = (avgp_adj * _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['qty']);
                    total_investment += buyvalue;
                    current_value += (ltp_adj * _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['qty']);
                    buyvalue = Math.round(buyvalue);
                }
                let supp_perc = -999;
                let supp = null;
                for (let i = 0; i < _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['support'].length; i++) {
                    let element = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['support'][i];
                    let supp_perc_t = (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['ltp'] - element) * 100 / element;
                    if (supp_perc_t < 0 && supp_perc_t > supp_perc) {
                        supp_perc = supp_perc_t;
                        supp = element;
                    }
                    console.log(key, _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['ltp'], element, supp_perc_t);
                }
                if (supp !== null) {
                    supp_perc = Math.round((supp_perc + 0.00001) * 100) / 100;
                    supp_str = supp_perc + ' (' + supp + ')';
                }
                let res_perc = 999;
                let res = null;
                for (let i = 0; i < _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['resistance'].length; i++) {
                    let element = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['resistance'][i];
                    let res_perc_t = (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['ltp'] - element) * 100 / element;
                    if (res_perc_t > 0 && res_perc_t < res_perc) {
                        res_perc = res_perc_t;
                        res = element;
                    }
                }
                if (res !== null) {
                    res_perc = Math.round((res_perc + 0.00001) * 100) / 100;
                    res_str = res_perc + ' (' + res + ')';
                }
                holdings.push({ scrip: key, volume: _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['volume'], ltp: _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['ltp'], oned: _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['oned'],
                    onew: _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['onew'], onem: _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['onem'], threem: _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['threem'],
                    fiftytwow: _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['fiftytwow'], avgp: avgp, support: supp_str, resistance: res_str, buyvalue: buyvalue });
            }
        }
        portfolio_return = (current_value - total_investment) * 100 / total_investment;
        portfolio_return = Math.round((portfolio_return + 0.00001) * 100) / 100;
        total_investment = Math.round(total_investment);
        current_value = Math.round(current_value);
        // console.log(total_investment, current_value);
        return { 'portfolio_return': portfolio_return, 'holdings': holdings, 'total_inv': total_investment, 'current_val': current_value };
    }
    fetchStocksData() {
        let httpOptions = {
            responseType: 'json'
        };
        let nifty50stocksURL = 'https://www.nseindia.com/api/equity-stockIndices?index=NIFTY%2050';
        /* this.http.get(indicesURL, httpOptions).subscribe((res: any) => {
          console.log('ind', res);
        }); */
        this.http.get(nifty50stocksURL, httpOptions).subscribe((res) => {
            console.log('now stocks data: ', res);
            let resArr = res.data;
            resArr.forEach(element => {
                if (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings.hasOwnProperty(element.symbol)) {
                    _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[element.symbol]['ltp'] = Math.round((element.lastPrice + 0.00001) * 100) / 100;
                    _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[element.symbol]['volume'] = Math.round((element.totalTradedVolume + 0.00001) * 100) / 100;
                    _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[element.symbol]['oned'] = Math.round((element.pChange + 0.00001) * 100) / 100;
                    // AppConstants.holdings[element.symbol]['onew'] = Math.round((element.nearWKH + 0.00001) * 100) / 100;
                    _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[element.symbol]['onem'] = Math.round((element.perChange30d + 0.00001) * 100) / 100;
                    let fiftytwow = (element.lastPrice - element.yearHigh) * 100 / element.yearHigh;
                    _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[element.symbol]['fiftytwow'] = Math.round((fiftytwow + 0.00001) * 100) / 100;
                }
            });
        });
        setTimeout(() => { this.fetchIndicesData(); }, 2000);
        setTimeout(() => { this.fetchHistoricalData(); }, 4000);
        // console.log(AppConstants.holdings);
    }
    fetchIndicesData() {
        let httpOptions = {
            responseType: 'json'
        };
        let indicesURL = 'https://www.nseindia.com/api/allIndices';
        this.http.get(indicesURL, httpOptions).subscribe((res) => {
            console.log('indices data: ', res);
            let resArr = res.data;
            resArr.forEach(element => {
                if (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings.hasOwnProperty(element.index)) {
                    _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[element.index]['ltp'] = Math.round((element.last + 0.00001) * 100) / 100;
                    _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[element.index]['oned'] = Math.round((element.percentChange + 0.00001) * 100) / 100;
                    // AppConstants.holdings[element.symbol]['onew'] = Math.round((element.nearWKH + 0.00001) * 100) / 100;
                    _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[element.index]['onem'] = Math.round((element.perChange30d + 0.00001) * 100) / 100;
                    let fiftytwow = (element.last - element.yearHigh) * 100 / element.yearHigh;
                    _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[element.index]['fiftytwow'] = Math.round((fiftytwow + 0.00001) * 100) / 100;
                }
            });
        });
    }
    fetchHistoricalData() {
        let httpOptions = {
            responseType: 'json'
        };
        let date_now = new Date();
        let date_prev = new Date();
        date_prev.setDate(date_prev.getDate() - 150);
        // let stockHistoricalURL = 'https://www.nseindia.com/api/historical/cm/equity?symbol=TCS&series=[%22EQ%22]&from=21-09-2021&to=21-12-2021';
        let stockHistoricalURL = 'https://query1.finance.yahoo.com/v8/finance/chart/';
        for (let key in _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings) {
            if (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings.hasOwnProperty(key)) {
                // console.log(key + " -> " + this.tempmonthlyExpiryDates[key] + ' ' + enteredDate);
                // https://query1.finance.yahoo.com/v7/finance/quote?symbols=RADICO.NS&fields=exchangeTimezoneName,exchangeTimezoneShortName,regularMarketTime,gmtOffSetMilliseconds&region=US&lang=en-US
                // https://query1.finance.yahoo.com/v7/finance/quote?formatted=true&crumb=DVvEVKnjAxW&lang=en-US&region=US&symbols=RADICO.NS&fields=messageBoardId%2ClongName%2CshortName%2CmarketCap%2CunderlyingSymbol%2CunderlyingExchangeSymbol%2CheadSymbolAsString%2CregularMarketPrice%2CregularMarketChange%2CregularMarketChangePercent%2CregularMarketVolume%2Cuuid%2CregularMarketOpen%2CfiftyTwoWeekLow%2CfiftyTwoWeekHigh%2CtoCurrency%2CfromCurrency%2CtoExchange%2CfromExchange&corsDomain=finance.yahoo.com
                let k = key + '.NS';
                if (k === 'NIFTY 50.NS') {
                    k = '%5ENSEI';
                }
                if (k === 'NIFTY BANK.NS') {
                    k = '%5ENSEBANK';
                }
                //let stockUrl = stockHistoricalURL + k + '?formatted=true&lang=en-US&region=US&includeAdjustedClose=true&interval=1d&period1=';
                //stockUrl += Math.floor(date_prev.getTime() / 1000) + '&period2=' + Math.floor(date_now.getTime() / 1000);
                let stockUrl = stockHistoricalURL + k + '?formatted=true&lang=en-US&region=US&includeAdjustedClose=true&interval=1d&range=1y';
                this.http.get(stockUrl, httpOptions).subscribe((res) => {
                    if (res) {
                        // console.log(res.chart.result[0].indicators.adjclose[0].adjclose[102]);
                        // console.log(res);
                        let closeArr = res.chart.result[0].indicators.adjclose[0].adjclose;
                        if (closeArr instanceof Array) {
                            let ltp = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['ltp'];
                            if (!ltp) {
                                ltp = res.chart.result[0].meta.regularMarketPrice;
                                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['ltp'] = ltp;
                                let currdate = res.chart.result[0].meta.regularMarketTime;
                                let index_oned = 1;
                                let timestamps = res.chart.result[0].timestamp;
                                if (new Date(currdate * 1000).getDate() === new Date(timestamps[timestamps.length - 1] * 1000).getDate()) {
                                    index_oned = 2;
                                }
                                let one = closeArr[closeArr.length - index_oned];
                                one = (ltp - one) * 100 / one;
                                one = Math.round((one + 0.00001) * 100) / 100;
                                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['oned'] = one;
                                let thirty = closeArr[closeArr.length - 30];
                                thirty = (ltp - thirty) * 100 / thirty;
                                thirty = Math.round((thirty + 0.00001) * 100) / 100;
                                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['onem'] = thirty;
                                let highArr = res.chart.result[0].indicators.quote[0].high;
                                var max_high = Math.max.apply(null, highArr);
                                let fiftytwow = (ltp - max_high) * 100 / max_high;
                                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['fiftytwow'] = Math.round((fiftytwow + 0.00001) * 100) / 100;
                                // console.log(ltp, one, thirty);
                            }
                            let seven = closeArr[closeArr.length - 7];
                            seven = (ltp - seven) * 100 / seven;
                            seven = Math.round((seven + 0.00001) * 100) / 100;
                            let ninety = closeArr[closeArr.length - 90];
                            ninety = (ltp - ninety) * 100 / ninety;
                            ninety = Math.round((ninety + 0.00001) * 100) / 100;
                            console.log(key, seven, ninety);
                            _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['onew'] = seven;
                            _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings[key]['threem'] = ninety;
                        }
                    }
                });
            }
        }
    }
    exportBacktest() {
        console.log(this.backtestMap);
        let export_file_name = 'Backtest ' + this.getDateInFormat() + '.csv';
        console.log('exporting: ', export_file_name);
        if (this.backtestMap) {
            let str = '';
            str += 'ExitDate,Portfolio,Nifty,S1,S2,S3,S4,S5,S6,S7,S8,S9,S10\r\n';
            for (let key in this.backtestMap) {
                this.shortlistedStocks = [];
                for (let k in this.backtestMap[key]) {
                    if (this.backtestMap[key][k]['fiftytwow'] > -10) {
                        // this.shortlistedStocks[k] = this.backtestMap[key][k];
                        let copy = Object.assign({}, this.backtestMap[key][k]);
                        copy['scrip'] = k;
                        this.shortlistedStocks.push(copy);
                    }
                }
                this.shortlistedStocks.sort((a, b) => {
                    // -1 means a should come before b
                    // 1 means a should come after b
                    if (a['onem'] > b['onem']) {
                        return -1;
                    }
                    else {
                        return 1;
                    }
                });
                console.log('shortlistedStocks:', this.shortlistedStocks);
                let finalStocks = this.shortlistedStocks.slice(0, 10);
                console.log('finalStocks:', finalStocks);
                let cum_percent = 0;
                let stocksRetStr = '';
                for (let i = 0; i < finalStocks.length; i++) {
                    let ret = (finalStocks[i]['last'] - finalStocks[i]['entry']) * 100 / finalStocks[i]['entry'];
                    ret = Math.round((ret + 0.00001) * 100) / 100;
                    cum_percent += ret;
                    stocksRetStr += ',' + ret;
                }
                let avg_percent = cum_percent / finalStocks.length;
                avg_percent = Math.round((avg_percent + 0.00001) * 100) / 100;
                console.log(avg_percent, this.niftyReturn[key]);
                let returnsStr = '' + key + ',' + avg_percent + ',' + this.niftyReturn[key] + stocksRetStr + '\r\n';
                console.log(returnsStr);
                str += returnsStr;
            }
            const downloadFile = new Blob([str], {
                type: 'application/x-msdownload',
            });
            /* if (window.navigator && window.navigator.msSaveOrOpenBlob) { // for IE
              window.navigator.msSaveOrOpenBlob(downloadFile, export_file_name);
            } else { */
            const fileURL = URL.createObjectURL(downloadFile);
            const link = document.createElement('a');
            link.href = fileURL;
            link.target = '_blank';
            document.body.appendChild(link);
            link.download = export_file_name;
            link.click();
            link.parentNode.removeChild(link);
            //}
        }
    }
    backtestStocks() {
        this.backtest52W1M();
    }
    backtest52W1M() {
        // find stocks under 10% from 52W high
        // rank top 10 stocks based on 1 month returns
        let httpOptions = {
            responseType: 'json'
        };
        let stockHistoricalURL = 'https://query1.finance.yahoo.com/v8/finance/chart/';
        let monthsToTest = 12;
        let curr_date = new Date();
        for (let i = 13; i <= 24; i++) {
            let test_date_end = new Date();
            test_date_end.setDate(curr_date.getDate() - (30 * i));
            let test_date_start = new Date();
            test_date_start.setDate(curr_date.getDate() - (30 * i) - 365);
            for (let key in _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings) {
                if (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.holdings.hasOwnProperty(key)) {
                    let k = key + '.NS';
                    if (k === 'NIFTY 50.NS') {
                        k = '%5ENSEI';
                    }
                    if (k === 'NIFTY BANK.NS') {
                        k = '%5ENSEBANK';
                    }
                    let stockUrl = stockHistoricalURL + k + '?formatted=true&lang=en-US&region=US&includeAdjustedClose=true&interval=1d&period1=';
                    stockUrl += Math.floor(test_date_start.getTime() / 1000) + '&period2=' + Math.floor(test_date_end.getTime() / 1000);
                    this.http.get(stockUrl, httpOptions).subscribe((res) => {
                        if (res) {
                            // console.log(res.chart.result[0].indicators.adjclose[0].adjclose[102]);
                            // console.log(res);
                            let closeArr = res.chart.result[0].indicators.adjclose[0].adjclose;
                            if (closeArr instanceof Array) {
                                let obj = {};
                                obj['last'] = closeArr[closeArr.length - 1];
                                obj['entry'] = closeArr[closeArr.length - 22]; // considering 21 trading days in a month
                                if (key === 'NIFTY 50') {
                                    let ret = (obj['last'] - obj['entry']) * 100 / obj['entry'];
                                    ret = Math.round((ret + 0.00001) * 100) / 100;
                                    this.niftyReturn[test_date_end.toLocaleDateString()] = ret;
                                }
                                let thirty = closeArr[closeArr.length - 43]; // 22 + 21
                                thirty = (obj['entry'] - thirty) * 100 / thirty;
                                thirty = Math.round((thirty + 0.00001) * 100) / 100;
                                obj['onem'] = thirty;
                                let highArr = res.chart.result[0].indicators.quote[0].high;
                                highArr = highArr.slice(0, -21);
                                var max_high = Math.max.apply(null, highArr);
                                let fiftytwow = (obj['entry'] - max_high) * 100 / max_high;
                                obj['fiftytwow'] = Math.round((fiftytwow + 0.00001) * 100) / 100;
                                // console.log(ltp, one, thirty);
                                if (!this.backtestMap[test_date_end.toLocaleDateString()]) {
                                    this.backtestMap[test_date_end.toLocaleDateString()] = {};
                                }
                                this.backtestMap[test_date_end.toLocaleDateString()][key] = obj;
                            }
                        }
                    });
                }
            }
        }
    }
}
HoldingsService.ɵfac = function HoldingsService_Factory(t) { return new (t || HoldingsService)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_1__.HttpClient)); };
HoldingsService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: HoldingsService, factory: HoldingsService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 2604:
/*!***************************************************!*\
  !*** ./src/app/common/httpInterceptor.service.ts ***!
  \***************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "HttpCustomInterceptor": () => (/* binding */ HttpCustomInterceptor)
/* harmony export */ });
/* harmony import */ var rxjs_operators__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! rxjs/operators */ 9019);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @angular/core */ 3184);


class HttpCustomInterceptor {
    intercept(req, next) {
        const timeoutValue = req.headers.get('timeout') || 1200000;
        const timeoutValueNumeric = Number(timeoutValue);
        return next.handle(req).pipe((0,rxjs_operators__WEBPACK_IMPORTED_MODULE_0__.timeout)(timeoutValueNumeric));
    }
}
HttpCustomInterceptor.ɵfac = function HttpCustomInterceptor_Factory(t) { return new (t || HttpCustomInterceptor)(); };
HttpCustomInterceptor.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_1__["ɵɵdefineInjectable"]({ token: HttpCustomInterceptor, factory: HttpCustomInterceptor.ɵfac });


/***/ }),

/***/ 397:
/*!***************************************!*\
  !*** ./src/app/common/map.service.ts ***!
  \***************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "MapService": () => (/* binding */ MapService)
/* harmony export */ });
/* harmony import */ var _application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application.constant */ 8001);
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models */ 8077);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);



class MapService {
    constructor() {
        this.ltpMap = new Map();
        this.atpMap = new Map();
        this.volumeMap = new Map();
        this.oiMap = new Map();
        this.lastDayOIMap = new Map();
        this.chgoiMap = new Map();
        this.ohlcMap = new Map();
        this.intradayData = new Array();
    }
    updateMaps_zerodha(p) {
        let symbol = '';
        if (p.instrument_token === 256265) {
            symbol = 'NIFTY50';
        }
        else if (p.instrument_token === 260105) {
            symbol = 'BANKNIFTY';
        }
        else if (p.instrument_token === 257801) {
            symbol = 'FINNIFTY';
        }
        else if (p.instrument_token === 288009) {
            symbol = 'MIDCPNIFTY';
        }
        else if (p.instrument_token === 265) {
            symbol = 'SENSEX';
        }
        else if (p.instrument_token === 274441) {
            symbol = 'BANKEX';
        }
        else {
            let instru_masters = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.get(p.instrument_token);
            let strike = '' + instru_masters.strike;
            if (instru_masters.tradingSymbol.includes('USDINR') && instru_masters.tradingSymbol.includes('FUT')) {
                strike = 'USDINR';
            }
            if (instru_masters) {
                symbol = this.getMapKey({ instru: instru_masters.instru, expiry: instru_masters.expiry, strike: strike, optionType: instru_masters.optionType });
                // console.log('updateMaps:', instru_masters, symbol);
            }
        }
        if (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.logWSFeed) {
            console.log('updateMaps symbol is', symbol);
        }
        this.setLtp(symbol, p.last_price);
        this.setAtp(symbol, p.average_price);
        this.setVolume(symbol, p.volume);
        this.setOI(symbol, p.oi);
        this.setOHLC(symbol, p.ohlc);
        // console.log('map', this.ohlcMap);
    }
    setLastDayOI(instru, expiryRecvd, strike, optionType, oi) {
        let object = { instru: instru, expiry: expiryRecvd, strike: strike, optionType: optionType };
        let symbol = this.getMapKey(object);
        this.lastDayOIMap.set(symbol, oi);
    }
    getLastDayOI(strike) {
        return this.lastDayOIMap.get(strike);
    }
    updateMaps_aliceblue(p) {
        let instru_masters = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.get(p.token);
        if (instru_masters) {
            // console.log('instru_masters.symbol', instru_masters.symbol);
            // let split = instru_masters.symbol.split(' ');
            let symbol = this.getMapKey({ instru: instru_masters.instru, expiry: instru_masters.expiry, strike: instru_masters.strike, optionType: instru_masters.optionType });
            console.log('updateMaps symbol is', symbol);
            this.setLtp(symbol, p.ltp);
            this.setAtp(symbol, p.atp);
            this.setVolume(symbol, p.volume);
            //this.setOI(symbol, p.oi);
            this.setOHLC(symbol, { open: p.open, high: p.high, low: p.low, close: p.close });
            //console.log('ohlc map', this.ohlcMap, p);
        }
        else { // symbol is in nse masters or cds masters, not nfo masters
            let symbol = '';
            if (p.token === 26000) {
                symbol = 'NIFTY50';
            }
            else if (p.token === 26009) {
                symbol = 'BANKNIFTY';
            }
            else if (p.token === 26037) {
                symbol = 'FINNIFTY';
            }
            else if (p.token === 1) {
                symbol = 'USDINR';
            }
            else {
                console.error(p.token, 'not found in masters');
            }
            console.log('updateMaps symbol is', symbol);
            this.setLtp(symbol, p.ltp);
            this.setAtp(symbol, p.atp);
            this.setVolume(symbol, p.volume);
        }
    }
    getZerodhaInstruToken(instru) {
        if (instru === 'NIFTY50' || instru === 'NIFTY') {
            return 256265;
        }
        else if (instru === 'BANKNIFTY') {
            return 260105;
        }
        else if (instru === 'FINNIFTY') {
            return 257801;
        }
        else if (instru === 'MIDCPNIFTY') {
            return 288009;
        }
        else if (instru === 'SENSEX') {
            return 265;
        }
        else if (instru === 'BANKEX') {
            return 274441;
        }
        else if (instru === 'USDINR') {
            return _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.USDINR_FUT_TOKEN;
        }
    }
    getMapKey(object) {
        let instru = object.instru;
        let expiryRecvd = object.expiry;
        let strike = object.strike;
        let type = object.optionType;
        let symbol = '';
        if (strike === 'NIFTY50' || strike === 'NIFTY') {
            symbol = 'NIFTY50';
        }
        else if (strike === 'BANKNIFTY') {
            symbol = 'BANKNIFTY';
        }
        else if (strike === 'FINNIFTY') {
            symbol = 'FINNIFTY';
        }
        else if (strike === 'MIDCPNIFTY') {
            symbol = 'MIDCPNIFTY';
        }
        else if (strike === 'SENSEX') {
            symbol = 'SENSEX';
        }
        else if (strike === 'BANKEX') {
            symbol = 'BANKEX';
        }
        else if (strike === 'USDINR') {
            symbol = 'USDINR';
            // let expiryDate: Date = AppConstants.monthlyExpiryDatesUSDINR[AppConstants.year + AppConstants.USDINR_FUT_MONTH];
            // let expiry = this.getExpiryString(expiryDate);
            // symbol = 'USDINR' + expiry + AppConstants.USDINR_FUT_MONTH + 'FUT';
        }
        else {
            let expiry = this.getExpiry(expiryRecvd, instru);
            symbol = instru + expiry + strike + type; // NIFTY2061810000CE NIFTY20JUN10000CE NIFTY20N1810000CE
        }
        return symbol;
    }
    getExpiry(expiryRecvd, instru) {
        let expiry = '';
        let monthly_expiry_string = this.isMonthlyExpiry(expiryRecvd, instru);
        if (monthly_expiry_string) {
            expiry = monthly_expiry_string;
        }
        else { // USDINR 19 JUN20 77.0 CE, NIFTY JUN FUT, NIFTY 13 AUG20 9000.0 PE
            expiry = this.getExpiryString(new Date(expiryRecvd));
        }
        return expiry;
    }
    isMonthlyExpiry(expiryRecvd, instru) {
        let is_monthly_expiry = false;
        let monthly_expiry_string = null;
        let expiryDate = new Date(expiryRecvd);
        expiryDate.setHours(0, 0, 0, 0);
        let tempmonthlyExpiryDates = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.monthlyExpiryDates;
        if (instru === 'BANKNIFTY') {
            tempmonthlyExpiryDates = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.monthlyExpiryDatesBNF;
        }
        else if (instru === 'FINNIFTY') {
            tempmonthlyExpiryDates = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.monthlyExpiryDatesFINNIFTY;
        }
        else if (instru === 'MIDCPNIFTY') {
            tempmonthlyExpiryDates = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.monthlyExpiryDatesMidcap;
        }
        else if (instru === 'SENSEX') {
            tempmonthlyExpiryDates = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.monthlyExpiryDatesSensex;
        }
        else if (instru === 'BANKEX') {
            tempmonthlyExpiryDates = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.monthlyExpiryDatesBankex;
        }
        else if (instru === 'USDINR') {
            tempmonthlyExpiryDates = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.monthlyExpiryDatesUSDINR;
        }
        for (let key in tempmonthlyExpiryDates) {
            if (tempmonthlyExpiryDates.hasOwnProperty(key)) {
                // console.log(key + " -> " + tempmonthlyExpiryDates[key] + ' ' + expiryDate);
                if (expiryDate.getTime() === tempmonthlyExpiryDates[key].getTime()) {
                    // console.log('monthly expiry matched');
                    is_monthly_expiry = true;
                    monthly_expiry_string = key;
                    break;
                }
            }
        }
        return monthly_expiry_string;
    }
    getExpiryString(expiryDate) {
        // console.log((expiryDate.getFullYear() - 2000), (expiryDate.getMonth() + 1), expiryDate.getDate());
        let expiryMonth = null;
        if (expiryDate.getMonth() + 1 === 10) {
            expiryMonth = 'O';
        }
        else if (expiryDate.getMonth() + 1 === 11) {
            expiryMonth = 'N';
        }
        else if (expiryDate.getMonth() + 1 === 12) {
            expiryMonth = 'D';
        }
        else {
            expiryMonth = expiryDate.getMonth() + 1;
        }
        let expiry = '' + (expiryDate.getFullYear() - 2000) + (expiryMonth) + ('0' + expiryDate.getDate()).slice(-2); // expiryDate.getDate();
        return expiry;
    }
    findCurrExpiryForDisplay(datesObj) {
        let diff = 10000000000000000000;
        let expiry = new Date();
        // AppConstants.niftyExpiries.forEach((element: Date) => {
        for (let key in datesObj) {
            let element = datesObj[key];
            let today = new Date();
            let sameDay = element.getFullYear() === today.getFullYear() && element.getMonth() === today.getMonth() && element.getDate() === today.getDate();
            if (sameDay) {
                diff = 0;
                expiry = element;
            }
            else {
                let currDiff = element.getTime() - new Date().getTime();
                if (currDiff >= 0 && currDiff < diff) {
                    diff = currDiff;
                    expiry = element;
                }
            }
        }
        let expiryString = '' + expiry.getFullYear() + '-' + ('0' + (expiry.getMonth() + 1)).slice(-2) + '-' + ('0' + expiry.getDate()).slice(-2);
        return expiryString;
    }
    findTodayExpiry(datesObj) {
        let expiry = new Date();
        // AppConstants.niftyExpiries.forEach((element: Date) => {
        for (let key in datesObj) {
            let element = datesObj[key];
            let today = new Date();
            let sameDay = element.getFullYear() === today.getFullYear() && element.getMonth() === today.getMonth() && element.getDate() === today.getDate();
            if (sameDay) {
                return element;
            }
        }
        return null;
    }
    getSubscriptionObject(scrip, instru, expiry) {
        let symbol = scrip;
        let type = '';
        if (symbol.includes('CE')) {
            type = 'CE';
        }
        if (symbol.includes('PE')) {
            type = 'PE';
        }
        symbol = symbol.slice(0, -2); // remove CE PE at end
        let expiryDate = new Date(expiry).toDateString(); // expiry_date
        let e1 = new _models__WEBPACK_IMPORTED_MODULE_1__.Instrument();
        e1.expiry = expiryDate;
        e1.instru = instru;
        e1.strike = Number(symbol);
        e1.type = type;
        console.log('getSubscriptionObject symbol: ' + symbol, e1);
        return e1;
    }
    getSubscriptionObjectForFuture(tradingSymbol, exchange) {
        console.log('getSubscriptionObject tradingSymbol: ' + tradingSymbol);
        let e1 = new _models__WEBPACK_IMPORTED_MODULE_1__.Instrument();
        e1.tradingSymbol = tradingSymbol;
        e1.exchange = exchange;
        return e1;
    }
    parseSymbol(symbol) {
        symbol = symbol.replace('NSE:', '');
        let instru = '';
        if (symbol.startsWith('NIFTY')) {
            instru = 'NIFTY';
            symbol = symbol.replace('NIFTY', '');
        }
        if (symbol.startsWith('BANKNIFTY')) {
            instru = 'BANKNIFTY';
            symbol = symbol.replace('BANKNIFTY', '');
        }
        if (symbol.startsWith('FINNIFTY')) {
            instru = 'FINNIFTY';
            symbol = symbol.replace('FINNIFTY', '');
        }
        if (symbol.startsWith('MIDCPNIFTY')) {
            instru = 'MIDCPNIFTY';
            symbol = symbol.replace('MIDCPNIFTY', '');
        }
        if (symbol.startsWith('SENSEX')) {
            instru = 'SENSEX';
            symbol = symbol.replace('SENSEX', '');
        }
        if (symbol.startsWith('BANKEX')) {
            instru = 'BANKEX';
            symbol = symbol.replace('BANKEX', '');
        }
        if (symbol.startsWith('USDINR')) {
            instru = 'USDINR';
            symbol = symbol.replace('USDINR', '');
        }
        let type = '';
        if (symbol.includes('CE')) {
            type = 'CE';
        }
        if (symbol.includes('PE')) {
            type = 'PE';
        }
        symbol = symbol.slice(0, -2); // remove CE PE at end
        let strike = symbol.substring(5);
        let expiry = symbol.substring(0, 5); // 20N08 20JUN 20911
        return { instru: instru, expiry: expiry, strike: strike, type: type };
    }
    parseScrip(scrip) {
        if (scrip) {
            let type = '';
            if (scrip.includes('CE')) {
                type = 'CE';
            }
            if (scrip.includes('PE')) {
                type = 'PE';
            }
            scrip = scrip.slice(0, -2); // remove CE PE at end
            return { scrip: scrip, type: type };
        }
    }
    getScripLTP(instru, expiryRecvd, strike, optionType) {
        let object = { instru: instru, expiry: expiryRecvd, strike: strike, optionType: optionType };
        let symbol = this.getMapKey(object);
        return this.getLtp(symbol);
    }
    getScripOI(instru, expiryRecvd, strike, optionType) {
        let object = { instru: instru, expiry: expiryRecvd, strike: strike, optionType: optionType };
        let symbol = this.getMapKey(object);
        return this.getOI(symbol);
    }
    getScripLastDayOI(instru, expiryRecvd, strike, optionType) {
        let object = { instru: instru, expiry: expiryRecvd, strike: strike, optionType: optionType };
        let symbol = this.getMapKey(object);
        return this.getLastDayOI(symbol);
    }
    getScripOHLC(instru, expiryRecvd, strike, optionType) {
        let object = { instru: instru, expiry: expiryRecvd, strike: strike, optionType: optionType };
        let symbol = this.getMapKey(object);
        return this.getOHLC(symbol);
    }
    getLtp(strike) {
        if (strike === 'BANKNIFTY') {
            // return 37739;
        }
        return this.ltpMap.get(strike);
    }
    setLtp(strike, val) {
        this.ltpMap.set(strike, val);
    }
    getAtp(strike) {
        return this.atpMap.get(strike);
    }
    setAtp(strike, val) {
        this.atpMap.set(strike, val);
    }
    getVolume(strike) {
        return this.volumeMap.get(strike);
    }
    setVolume(strike, val) {
        this.volumeMap.set(strike, val);
    }
    getOI(strike) {
        return this.oiMap.get(strike);
    }
    setOI(strike, val) {
        this.oiMap.set(strike, val);
    }
    getChgOI(strike) {
        return this.chgoiMap.get(strike);
    }
    setChgOI(strike, val) {
        this.chgoiMap.set(strike, val);
    }
    getOHLC(strike) {
        return this.ohlcMap.get(strike);
    }
    setOHLC(strike, val) {
        this.ohlcMap.set(strike, val);
    }
    getIntradayData(period) {
        return this.intradayData.slice(Math.max(this.intradayData.length - period, 0));
    }
    setIntradayData() {
    }
}
MapService.simulateData = {};
MapService.stockChartData = {};
MapService.ɵfac = function MapService_Factory(t) { return new (t || MapService)(); };
MapService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: MapService, factory: MapService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 8077:
/*!**********************************!*\
  !*** ./src/app/common/models.ts ***!
  \**********************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "IntradayData": () => (/* binding */ IntradayData),
/* harmony export */   "Position": () => (/* binding */ Position),
/* harmony export */   "OrderPasted1": () => (/* binding */ OrderPasted1),
/* harmony export */   "OrderPasted": () => (/* binding */ OrderPasted),
/* harmony export */   "Order": () => (/* binding */ Order),
/* harmony export */   "ZerodhaOrder": () => (/* binding */ ZerodhaOrder),
/* harmony export */   "ZerodhaPosition": () => (/* binding */ ZerodhaPosition),
/* harmony export */   "PlaceOrder": () => (/* binding */ PlaceOrder),
/* harmony export */   "MasterInstrument": () => (/* binding */ MasterInstrument),
/* harmony export */   "Instrument": () => (/* binding */ Instrument),
/* harmony export */   "AliceMarketData": () => (/* binding */ AliceMarketData),
/* harmony export */   "ZerodhaWSData": () => (/* binding */ ZerodhaWSData),
/* harmony export */   "AliceBlueLiveFeedType": () => (/* binding */ AliceBlueLiveFeedType),
/* harmony export */   "AliceBlueWsFrameMode": () => (/* binding */ AliceBlueWsFrameMode),
/* harmony export */   "PositionTypeForPayOff": () => (/* binding */ PositionTypeForPayOff),
/* harmony export */   "AlgoPosition": () => (/* binding */ AlgoPosition)
/* harmony export */ });
class IntradayData {
}
class Position {
    constructor() {
        this.includeInSum1 = false;
        this.includeInSum2 = false;
        this.includeInSum3 = false;
        this.includeInSum4 = false;
    }
}
class OrderPasted1 {
}
class OrderPasted {
}
class Order {
}
class ZerodhaOrder {
}
class ZerodhaPosition {
}
class PlaceOrder {
}
class MasterInstrument {
}
class Instrument {
}
class AliceMarketData {
}
class ZerodhaWSData {
}
var AliceBlueLiveFeedType;
(function (AliceBlueLiveFeedType) {
    AliceBlueLiveFeedType["MARKET_DATA"] = "marketdata";
    AliceBlueLiveFeedType["COMPACT"] = "compact_marketdata";
    AliceBlueLiveFeedType["SNAPQUOTE"] = "snapquote";
    AliceBlueLiveFeedType["FULL_SNAPQUOTE"] = "full_snapquote";
})(AliceBlueLiveFeedType || (AliceBlueLiveFeedType = {}));
var AliceBlueWsFrameMode;
(function (AliceBlueWsFrameMode) {
    AliceBlueWsFrameMode[AliceBlueWsFrameMode["MARKETDATA"] = 1] = "MARKETDATA";
    AliceBlueWsFrameMode[AliceBlueWsFrameMode["COMPACT_MARKETDATA"] = 2] = "COMPACT_MARKETDATA";
    AliceBlueWsFrameMode[AliceBlueWsFrameMode["SNAPQUOTE"] = 3] = "SNAPQUOTE";
    AliceBlueWsFrameMode[AliceBlueWsFrameMode["FULL_SNAPQUOTE"] = 4] = "FULL_SNAPQUOTE";
    AliceBlueWsFrameMode[AliceBlueWsFrameMode["SPREADDATA"] = 5] = "SPREADDATA";
    AliceBlueWsFrameMode[AliceBlueWsFrameMode["SPREAD_SNAPQUOTE"] = 6] = "SPREAD_SNAPQUOTE";
    AliceBlueWsFrameMode[AliceBlueWsFrameMode["DPR"] = 7] = "DPR";
    AliceBlueWsFrameMode[AliceBlueWsFrameMode["OI"] = 8] = "OI";
    AliceBlueWsFrameMode[AliceBlueWsFrameMode["MARKET_STATUS"] = 9] = "MARKET_STATUS";
    AliceBlueWsFrameMode[AliceBlueWsFrameMode["EXCHANGE_MESSAGES"] = 10] = "EXCHANGE_MESSAGES";
})(AliceBlueWsFrameMode || (AliceBlueWsFrameMode = {}));
var PositionTypeForPayOff;
(function (PositionTypeForPayOff) {
    PositionTypeForPayOff["CEsell"] = "cesell";
    PositionTypeForPayOff["PEsell"] = "pesell";
    PositionTypeForPayOff["CEbuy"] = "cebuy";
    PositionTypeForPayOff["PEbuy"] = "pebuy";
    PositionTypeForPayOff["CE"] = "ce";
    PositionTypeForPayOff["PE"] = "pe";
})(PositionTypeForPayOff || (PositionTypeForPayOff = {}));
class AlgoPosition {
}


/***/ }),

/***/ 4440:
/*!*********************************************!*\
  !*** ./src/app/common/websocket.service.ts ***!
  \*********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "WebsocketService": () => (/* binding */ WebsocketService)
/* harmony export */ });
/* harmony import */ var _application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application.constant */ 8001);
/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! js-sha256 */ 396);
/* harmony import */ var js_sha256__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(js_sha256__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _aliceblue_parser_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./aliceblue-parser.service */ 4256);




//import * as smartapi from 'smartapi-javascript';
class WebsocketService {
    constructor(aliceblueParserService) {
        this.aliceblueParserService = aliceblueParserService;
        this.baseUrl = 'https://ant.aliceblueonline.com';
        this.socket_endpoint = 'wss://ws1.aliceblueonline.com/NorenWS/'; // 'wss://ant.aliceblueonline.com/hydrasocket/v2/websocket?access_token=';
        this.user_id = 'AB033978';
    }
    isSocketConnected() {
        if (this.websocket && this.websocket.OPEN === 1) {
            return true;
        }
        return false;
    }
    connect(access_token) {
        this.access_token = access_token;
        this.websocket = new WebSocket(this.socket_endpoint /* + access_token */);
        //this.websocket.binaryType = 'arraybuffer';
        this.websocket.onopen = () => {
            this.handleOnOpen(event);
        };
        this.websocket.onmessage = messageEvent => {
            this.handleOnMessage(messageEvent);
        };
        this.websocket.onerror = event => {
            this.handleOnError(event);
        };
        this.websocket.onclose = event => {
            this.handleOnClose(event);
        };
    }
    handleOnOpen(event) {
        console.log('Opened Web Socket connection');
        if (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'aliceblue') {
            let initCon = JSON.stringify({
                "susertoken": (0,js_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)((0,js_sha256__WEBPACK_IMPORTED_MODULE_1__.sha256)(_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.AliceblueSessionId)),
                "t": "c",
                "actid": this.user_id + "_API",
                "uid": this.user_id + "_API",
                "source": "API"
            });
            this.sendMessage(initCon);
            setTimeout(() => {
                this.sendInitialSubscription();
                this.sendHeartbeat();
            }, 2000);
            setTimeout(() => {
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.websocketEvent$.next('connected');
            }, 4000);
        }
    }
    sendHeartbeat() {
        this.heartbeatInterval = setInterval(() => {
            //console.log('sending heartbeat');
            //let message = JSON.stringify({"a": "h", "v": [], "m": ""});
            let message = JSON.stringify({ "t": "h" });
            this.sendMessage(message);
        }, 5000);
    }
    sendInitialSubscription() {
        console.log('sending initial subscription');
        // let usdinr_fut_code = AppConstants.USDINRFUTCodes[AppConstants.USDINR_FUT_MONTH];
        // let finnifty_fut_code = AppConstants.FINNIFTYFUTCodes[AppConstants.FINNIFTY_FUT_MONTH];
        /*let message = JSON.stringify({
          'a' : 'subscribe',
          'v' : [[1, 26000], [1, 26009], [3, 1], [3, usdinr_fut_code]], // , [2, 95734], [2, 95733]
          'm' : AliceBlueLiveFeedType.MARKET_DATA});
        */
        //let message = JSON.stringify({"k":"NSE|26000#NSE|26009#NSE|26037#NFO|" + finnifty_fut_code + "#CDS|" + usdinr_fut_code,"t":"t"});
        // let message = JSON.stringify({"k":"NSE|26000#NSE|26009#NSE|26037#CDS|" + usdinr_fut_code,"t":"t"});
        let message = JSON.stringify({ "k": "NSE|26000#NSE|26009#NSE|26037", "t": "t" });
        //message = JSON.stringify({"k":"NFO|" + finnifty_fut_code,"t":"t"});
        //message = JSON.stringify({"k":"NFO|26037","t":"t"});
        // 26000 26009 26037 for nf, bnf, finnifty spot
        // 1 is usdinr spot
        //console.log('usdinr_fut_code', usdinr_fut_code);
        this.sendMessage(message);
    }
    handleOnMessage(messageEvent) {
        console.log('handleOnMessage', messageEvent);
        if (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.SocketMode === 'aliceblue') {
            this.aliceblueParserService.handleSocketMessage(messageEvent.data);
        }
    }
    handleOnError(event) {
        console.log('Error in WS connection', event);
    }
    handleOnClose(event) {
        console.log('Closed WS connection', event);
        clearInterval(this.heartbeatInterval);
        this.websocket = null;
        setTimeout(() => {
            console.log('Reconnecting websocket');
            this.connect(this.access_token);
        }, 2000);
    }
    closeSocket() {
        console.log('Closing WS connection manually');
        this.websocket.close();
        clearInterval(this.heartbeatInterval);
        this.websocket = null;
    }
    sendMessage(message) {
        if (this.websocket && this.websocket.OPEN === 1) {
            console.log('Sending message over websocket: ' + message);
            this.websocket.send(message);
        }
        else {
            console.log('Cannot send the message. Socket is not yet opened or it has been closed - ', message);
        }
    }
}
WebsocketService.ɵfac = function WebsocketService_Factory(t) { return new (t || WebsocketService)(_angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵinject"](_aliceblue_parser_service__WEBPACK_IMPORTED_MODULE_2__.AliceblueParserService)); };
WebsocketService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_3__["ɵɵdefineInjectable"]({ token: WebsocketService, factory: WebsocketService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 38:
/*!*****************************************************!*\
  !*** ./src/app/common/zerodha-websocket.service.ts ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ZerodhaWebsocketService": () => (/* binding */ ZerodhaWebsocketService)
/* harmony export */ });
/* harmony import */ var _application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application.constant */ 8001);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _map_service__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./map.service */ 397);



//import * as smartapi from 'smartapi-javascript';
class ZerodhaWebsocketService {
    constructor(mapService) {
        this.mapService = mapService;
        this.user_id = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.zerodhaUserId;
        this.root = "wss://ws.zerodha.com/";
        this.read_timeout = 10; // seconds
        this.reconnect_max_delay = 0;
        this.reconnect_max_tries = 0;
        // message flags (outgoing)
        this.mSubscribe = "subscribe";
        this.mUnSubscribe = "unsubscribe";
        this.mSetMode = "mode";
        // incoming
        this.mAlert = 10;
        this.mMessage = 11;
        this.mLogout = 12;
        this.mReload = 13;
        this.mClearCache = 14;
        // public constants
        this.modeFull = "full"; // Full quote including market depth. 164 bytes.
        this.modeQuote = "quote"; // Quote excluding market depth. 52 bytes.
        this.modeLTP = "ltp";
        this.ws = null;
        this.triggers = { "connect": [],
            "ticks": [],
            "disconnect": [],
            "error": [],
            "close": [],
            "reconnect": [],
            "noreconnect": [],
            "message": [],
            "order_update": [] };
        this.read_timer = null;
        this.last_read = null;
        this.reconnect_timer = null;
        this.auto_reconnect = false;
        this.current_reconnection_count = 0;
        this.last_reconnect_interval = 0;
        this.current_ws_url = null;
        this.defaultReconnectMaxDelay = 60;
        this.defaultReconnectMaxRetries = 50;
        this.maximumReconnectMaxRetries = 300;
        this.minimumReconnectMaxDelay = 5;
        // segment constants
        this.NseCM = 1;
        this.NseFO = 2;
        this.NseCD = 3;
        this.BseCM = 4;
        this.BseFO = 5;
        this.BseCD = 6;
        this.McxFO = 7;
        this.McxSX = 8;
        this.Indices = 9;
    }
    connect() {
        // Skip if its already connected
        if (this.ws && (this.ws.readyState === this.ws.CONNECTING || this.ws.readyState === this.ws.OPEN)) {
            return;
        }
        console.log('Trying to establish Zerodha WS connection');
        let url = this.root +
            "?api_key=kitefront&user_id=" + this.user_id +
            "&enctoken=" + encodeURIComponent(_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth.replace('enctoken ', '')) +
            "&uid=" + Date.now() +
            "&user-agent=kite3-web&version=3.0.10";
        // let url = 'wss://ws.zerodha.com/?api_key=kitefront&user_id=FW6041&enctoken=MNyfe%2FS7e6hVoUslcB8a4Ch%2FS%2B%2FEyS9DtavSmdQmevXzmPvOYv9neIMZkyI8L38HFIiNc2VPoNTrM3waBrvS0Hj4IPW%2B5LHN5B7J2p%2Bs5gtdbW0%2FsueWOg%3D%3D&uid=1673936835675&user-agent=kite3-web&version=3.0.10';
        // let url = root + "?api_key=" + params.api_key + "&access_token=" + params.access_token + "&uid=" + (new Date().getTime().toString());
        this.ws = new WebSocket(url);
        this.ws.binaryType = "arraybuffer";
        this.ws.onopen = () => {
            this.handleOnOpen(event);
        };
        this.ws.onmessage = messageEvent => {
            this.handleOnMessage(messageEvent);
        };
        this.ws.onerror = event => {
            this.handleOnError(event);
        };
        this.ws.onclose = event => {
            this.handleOnClose(event);
        };
    }
    ;
    isSocketConnected() {
        if (this.ws && this.ws.readyState == this.ws.OPEN) {
            return true;
        }
        else {
            return false;
        }
    }
    handleOnOpen(event) {
        console.log('Opened Zerodha Web Socket connection');
        // 256265,1001,NIFTY 50,"NIFTY 50",0,,0,0,0,EQ,INDICES,NSE
        // 260105,1016,NIFTY BANK,"NIFTY BANK",0,,0,0,0,EQ,INDICES,NSE
        // 257801,1007,NIFTY FIN SERVICE,"NIFTY FIN SERVICE",0,,0,0,0,EQ,INDICES,NSE
        // 265,1,SENSEX,"SENSEX",0,,0,0,0,EQ,INDICES,BSE
        // 288009,1125,NIFTY MID SELECT,"NIFTY MIDCAP SELECT (MIDCPNIFTY)",0,,0,0,0,EQ,INDICES,NSE
        // 13440514,52502,MIDCPNIFTY23JUL5650CE,"MIDCPNIFTY",0,2023-07-26,5650,0.05,75,CE,NFO-OPT,NFO
        // 274441,1072,BANKEX,"BSE INDEX BANKEX",0,,0,0,0,EQ,INDICES,BSE
        let items = [256265, 260105, 257801, 265, 288009, 274441];
        this.subscribe(items);
        this.setMode(this.modeFull, items);
        /*
        items = [11474946];
        this.subscribe(items);
        this.setMode(this.modeFull, items);
         */
        _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.websocketEvent$.next('connected');
        /*
        setTimeout(() => {
          this.websocketEvent$.next('connected');
        }, 1000); */
        this.initStatusCheck();
    }
    initStatusCheck() {
        /*
        // Reset last reconnect interval
        last_reconnect_interval = null;
        // Reset current_reconnection_count attempt
        current_reconnection_count = 0
        // Store current open connection url to check for auto re-connection.
        if (!current_ws_url) current_ws_url = this.url
        // Trigger on connect event
        trigger("connect");
        // If there isn't an incoming message in n seconds, assume disconnection.
        clearInterval(read_timer);
    
        last_read = new Date();
        read_timer = setInterval(function() {
          if((new Date() - last_read ) / 1000 >= read_timeout) {
            // reset current_ws_url incase current connection times out
            // This is determined when last heart beat received time interval
            // exceeds read_timeout value
            current_ws_url = null;
            if(ws) ws.close();
            clearInterval(read_timer);
            triggerDisconnect();
          }
        }, read_timeout * 1000);
         */
        // If there isn't an incoming message in n seconds, assume disconnection.
        clearInterval(this.read_timer);
        this.last_read = new Date();
        this.read_timer = setInterval(() => {
            // console.log('times', (new Date().valueOf() - this.last_read ) / 1000, this.read_timeout);
            if ((new Date().valueOf() - this.last_read) / 1000 >= this.read_timeout) {
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next({ 'status': 'info', 'message': 'WS Reconnecting...' });
                console.log('Reconnecting WS...');
                if (this.ws) {
                    this.ws.close();
                    this.ws = null;
                }
                clearInterval(this.read_timer);
                let reconnect_timer = setTimeout(() => {
                    this.connect();
                }, 2000);
            }
        }, this.read_timeout * 1000);
    }
    handleOnMessage(messageEvent) {
        if (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.logWSFeed) {
            console.log('handleOnMessage', messageEvent);
        }
        // Binary tick data.
        if (messageEvent.data instanceof ArrayBuffer) {
            // Trigger on message event when binary message is received
            //trigger("message", [messageEvent.data]);
            if (messageEvent.data.byteLength > 2) {
                let d = this.parseBinary(messageEvent.data);
                // if(d) trigger("ticks", [d]);
                if (_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.logWSFeed) {
                    console.log('Parsed binary message', d);
                }
                d.forEach((element) => {
                    this.mapService.updateMaps_zerodha(element);
                });
            }
        }
        else {
            this.parseTextMessage(messageEvent.data);
        }
        // Set last read time to check for connection timeout
        this.last_read = new Date();
    }
    /*  [{   tradable: true,
        *    mode: 'full',
        *    instrument_token: 208947,
        *    last_price: 3939,
        *    last_quantity: 1,
        *    average_price: 3944.77,
        *    volume: 28940,
        *    buy_quantity: 4492,
        *    sell_quantity: 4704,
        *    ohlc: { open: 3927, high: 3955, low: 3927, close: 3906 },
        *    change: 0.8448540706605223,
        *    last_trade_time: 1515491369,
        *    timestamp: 1515491373,
        *    oi: 24355,
        *    oi_day_high: 0,
        *    oi_day_low: 0,
        *    depth:
        *			buy: [{
        *				 quantity: 59,
        *				 price: 3223,
        *				 orders: 5
        *			  },
        *			  {
        *				 quantity: 164,
        *				 price: 3222,
        *				 orders: 15
        *			  },
        *			  {
        *				 quantity: 123,
        *				 price: 3221,
        *				 orders: 7
        *			  },
        *			  {
        *				 quantity: 48,
        *				 price: 3220,
        *				 orders: 7
        *			  },
        *			  {
        *				 quantity: 33,
        *				 price: 3219,
        *				 orders: 5
        *			  }],
        *		   sell: [{
        *				 quantity: 115,
        *				 price: 3224,
        *				 orders: 15
        *			  },
        *			  {
        *				 quantity: 50,
        *				 price: 3225,
        *				 orders: 5
        *			  },
        *			  {
        *				 quantity: 175,
        *				 price: 3226,
        *				 orders: 14
        *			  },
        *			  {
        *				 quantity: 49,
        *				 price: 3227,
        *				 orders: 10
        *			  },
        *			  {
        *				 quantity: 106,
        *				 price: 3228,
        *				 orders: 13
        *			  }]
        *		}
        *	}, ...]
        */
    handleOnError(event) {
        console.log('Error in WS connection', event);
        /* if(this.ws.readyState === this.ws.OPEN) {
          this.closeSocket();
        } */
    }
    handleOnClose(event) {
        console.log('Closed WS connection', event);
        this.ws = null;
        setTimeout(() => {
            console.log('Reconnecting websocket');
            this.connect();
        }, 5000);
    }
    closeSocket() {
        console.log('Closing WS connection manually');
        this.ws.close();
        this.ws = null;
    }
    subscribe(tokens) {
        if (tokens.length > 0) {
            this.send({ "a": this.mSubscribe, "v": tokens });
        }
        return tokens;
    }
    ;
    setMode(mode, tokens) {
        if (!mode) {
            mode = this.modeFull;
        }
        if (tokens.length > 0) {
            this.send({ "a": this.mSetMode, "v": [mode, tokens] });
        }
        return tokens;
    }
    ;
    /* sendMessage(message): any {
      if (this.ws && this.ws.OPEN === 1) {
        console.log('Sending message over websocket: ' + message);
        this.ws.send(message);
      } else {
        console.log(
          'Cannot send the message. Socket is not yet opened or it has been closed - ',
          message
        );
      }
    } */
    // send a message via the socket
    // automatically encodes json if possible
    send(message) {
        if (!this.ws || this.ws.readyState !== this.ws.OPEN) {
            console.log('Cannot send the message. Socket is not yet opened or it has been closed - ', message);
            return;
        }
        try {
            if (typeof (message) == "object") {
                message = JSON.stringify(message);
            }
            this.ws.send(message);
        }
        catch (e) {
            this.ws.close();
        }
        ;
    }
    parseTextMessage(data) {
        try {
            data = JSON.parse(data);
            console.log('text message on ws: ', data);
        }
        catch (e) {
            return;
        }
        if (data.type === "order") {
            /*
            {"type":"order","order_id":"230117401739013","tradingsymbol":"FINNIFTY2311718800CE","exchange":"NFO","transaction_type":"BUY","quantity":280,"average_price":0,"status":"OPEN","meta":{}}
      
            {"type":"order","filled_quantity":280,"order_id":"230117401739013","tradingsymbol":"FINNIFTY2311718800CE","exchange":"NFO","transaction_type":"BUY","quantity":280,"average_price":0.8,"status":"COMPLETE","meta":{}}
      
            {"type":"order","order_id":"230117402393331","tradingsymbol":"BANKNIFTY2311942800CE","exchange":"NFO","transaction_type":"SELL","quantity":400,"average_price":0,"status":"REJECTED","status_message":"Insufficient funds. Required margin is 5269220.06 but available margin is 4532550.90. Check the orderbook for open orders.","meta":{}}
            */
            if (data.status === 'OPEN') {
                //let scrip = this.mapService.parseSymbol(data.tradingsymbol);
                //AppConstants.requestStatusEvent$.next({'status': 'secondary', 'message': 'OPEN ' + scrip + ' ' + data.transaction_type + ' ' + data.quantity});
                //AppConstants.miscEvent$.next('refreshAll');
            }
            if (data.status === 'COMPLETE') {
                let parsed = this.mapService.parseSymbol(data.tradingsymbol);
                let scrip = parsed.strike + parsed.type;
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next({ 'status': 'success', 'message': 'COMPLETE ' + scrip + ' ' + data.transaction_type + ' ' + data.quantity });
                /* setTimeout(() => {
                  AppConstants.miscEvent$.next('refreshAll');
                }, 500); */
            }
            if (data.status === 'REJECTED') {
                let parsed = this.mapService.parseSymbol(data.tradingsymbol);
                let scrip = parsed.strike + parsed.type;
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.requestStatusEvent$.next({ 'status': 'danger', 'message': 'REJECTED ' + scrip + ' ' + data.transaction_type + ' ' + data.quantity + ' ' + data.status_message });
                /* setTimeout(() => {
                  AppConstants.miscEvent$.next('refreshAll');
                }, 500); */
            }
            setTimeout(() => {
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.miscEvent$.next('refreshAll');
            }, 500);
        }
    }
    // parse received binary message. each message is a combination of multiple tick packets
    // [2-bytes num packets][size1][tick1][size2][tick2] ...
    parseBinary(binpacks) {
        let packets = this.splitPackets(binpacks);
        let ticks = [];
        for (let n = 0; n < packets.length; n++) {
            let bin = packets[n];
            let instrument_token = this.buf2long(bin.slice(0, 4));
            let segment = instrument_token & 0xff;
            let tradable = true;
            if (segment === this.Indices)
                tradable = false;
            // Add price divisor based on segment
            let divisor = 100.0;
            if (segment === this.NseCD) {
                divisor = 10000000.0;
            }
            else if (segment == this.BseCD) {
                divisor = 10000.0;
            }
            // Parse LTP
            if (bin.byteLength === 8) {
                ticks.push({
                    tradable: tradable,
                    mode: this.modeLTP,
                    instrument_token: instrument_token,
                    last_price: this.buf2long(bin.slice(4, 8)) / divisor
                });
                // Parse indices quote and full mode
            }
            else if (bin.byteLength === 28 || bin.byteLength === 32) {
                let mode = this.modeQuote;
                if (bin.byteLength === 32) {
                    mode = this.modeFull;
                }
                let tick = {
                    tradable: tradable,
                    mode: mode,
                    instrument_token: instrument_token,
                    last_price: this.buf2long(bin.slice(4, 8)) / divisor,
                    ohlc: {
                        high: this.buf2long(bin.slice(8, 12)) / divisor,
                        low: this.buf2long(bin.slice(12, 16)) / divisor,
                        open: this.buf2long(bin.slice(16, 20)) / divisor,
                        close: this.buf2long(bin.slice(20, 24)) / divisor
                    },
                    change: this.buf2long(bin.slice(24, 28)),
                    exchange_timestamp: null
                };
                // Compute the change price using close price and last price
                if (tick.ohlc.close != 0) {
                    tick.change = (tick.last_price - tick.ohlc.close) * 100 / tick.ohlc.close;
                }
                // Full mode with timestamp in seconds
                if (bin.byteLength === 32) {
                    tick.exchange_timestamp = null;
                    let timestamp = this.buf2long(bin.slice(28, 32));
                    if (timestamp)
                        tick.exchange_timestamp = new Date(timestamp * 1000);
                }
                ticks.push(tick);
            }
            else if (bin.byteLength === 44 || bin.byteLength === 184) {
                let mode = this.modeQuote;
                if (bin.byteLength === 184) {
                    mode = this.modeFull;
                }
                let tick = {
                    tradable: tradable,
                    mode: mode,
                    instrument_token: instrument_token,
                    last_price: this.buf2long(bin.slice(4, 8)) / divisor,
                    last_traded_quantity: this.buf2long(bin.slice(8, 12)),
                    average_traded_price: this.buf2long(bin.slice(12, 16)) / divisor,
                    volume_traded: this.buf2long(bin.slice(16, 20)),
                    total_buy_quantity: this.buf2long(bin.slice(20, 24)),
                    total_sell_quantity: this.buf2long(bin.slice(24, 28)),
                    ohlc: {
                        open: this.buf2long(bin.slice(28, 32)) / divisor,
                        high: this.buf2long(bin.slice(32, 36)) / divisor,
                        low: this.buf2long(bin.slice(36, 40)) / divisor,
                        close: this.buf2long(bin.slice(40, 44)) / divisor
                    },
                    change: null,
                    last_trade_time: null,
                    exchange_timestamp: null,
                    oi: null, oi_day_high: null, oi_day_low: null,
                    depth: null
                };
                // Compute the change price using close price and last price
                if (tick.ohlc.close != 0) {
                    tick.change = (tick.last_price - tick.ohlc.close) * 100 / tick.ohlc.close;
                }
                // Parse full mode
                if (bin.byteLength === 184) {
                    // Parse last trade time
                    tick.last_trade_time = null;
                    let last_trade_time = this.buf2long(bin.slice(44, 48));
                    if (last_trade_time)
                        tick.last_trade_time = new Date(last_trade_time * 1000);
                    // Parse timestamp
                    tick.exchange_timestamp = null;
                    let timestamp = this.buf2long(bin.slice(60, 64));
                    if (timestamp)
                        tick.exchange_timestamp = new Date(timestamp * 1000);
                    // Parse OI
                    tick.oi = this.buf2long(bin.slice(48, 52));
                    tick.oi_day_high = this.buf2long(bin.slice(52, 56));
                    tick.oi_day_low = this.buf2long(bin.slice(56, 60));
                    tick.depth = {
                        buy: [],
                        sell: []
                    };
                    let s = 0, depth = bin.slice(64, 184);
                    for (let i = 0; i < 10; i++) {
                        s = i * 12;
                        tick.depth[i < 5 ? "buy" : "sell"].push({
                            quantity: this.buf2long(depth.slice(s, s + 4)),
                            price: this.buf2long(depth.slice(s + 4, s + 8)) / divisor,
                            orders: this.buf2long(depth.slice(s + 8, s + 10))
                        });
                    }
                }
                ticks.push(tick);
            }
        }
        return ticks;
    }
    // split one long binary message into individual tick packets
    splitPackets(bin) {
        // number of packets
        let num = this.buf2long(bin.slice(0, 2)), j = 2, packets = [];
        for (let i = 0; i < num; i++) {
            // first two bytes is the packet length
            let size = this.buf2long(bin.slice(j, j + 2)), packet = bin.slice(j + 2, j + 2 + size);
            packets.push(packet);
            j += 2 + size;
        }
        return packets;
    }
    // Big endian byte array to long.
    buf2long(buf) {
        let b = new Uint8Array(buf), val = 0, len = b.length;
        for (let i = 0, j = len - 1; i < len; i++, j--) {
            val += b[j] << (i * 8);
        }
        return val;
    }
}
ZerodhaWebsocketService.ɵfac = function ZerodhaWebsocketService_Factory(t) { return new (t || ZerodhaWebsocketService)(_angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵinject"](_map_service__WEBPACK_IMPORTED_MODULE_1__.MapService)); };
ZerodhaWebsocketService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_2__["ɵɵdefineInjectable"]({ token: ZerodhaWebsocketService, factory: ZerodhaWebsocketService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 1102:
/*!*******************************************!*\
  !*** ./src/app/common/zerodha.service.ts ***!
  \*******************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "ZerodhaService": () => (/* binding */ ZerodhaService)
/* harmony export */ });
/* harmony import */ var _application_constant__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./application.constant */ 8001);
/* harmony import */ var _angular_common_http__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @angular/common/http */ 8784);
/* harmony import */ var _models__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./models */ 8077);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _zerodha_websocket_service__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./zerodha-websocket.service */ 38);
/* harmony import */ var _map_service__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./map.service */ 397);







// const fyers = require('fyers-api');
// import * as fyers from 'fyers-api';
// Dummy/Mock responses from Zerodha can be seen at https://github.com/zerodha/kiteconnect-mocks
class ZerodhaService {
    constructor(http, zerodhaWebsocketService, mapService) {
        this.http = http;
        this.zerodhaWebsocketService = zerodhaWebsocketService;
        this.mapService = mapService;
        this.baseUrl = 'https://kite.zerodha.com/';
    }
    getMastersContract() {
        let httpOptions = {
            responseType: 'text'
        };
        let url = 'https://api.kite.trade/instruments';
        this.http.get(url, httpOptions).subscribe((res) => {
            console.log('zerodha instruments', res);
            this.parseContractMaster(res);
        }, error => {
            console.log('zerodha instruments error', error);
        });
    }
    parseContractMaster(res) {
        let allTextLines_all_data = res.split(/\r|\n|\r/);
        let allTextLines = allTextLines_all_data.filter(function (elem) {
            return elem !== '';
        });
        // console.log('allTextLines_all_data', allTextLines_all_data);
        let expiry_ = this.mapService.findCurrExpiryForDisplay(_application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.usdinrExpiries);
        let expiryString = this.mapService.getExpiry(expiry_);
        let usdinrFut_symbol = 'USDINR' + expiryString + 'FUT';
        for (let index = 1; index < allTextLines.length; index++) { // ignore first line - headers
            // 10698242,41790,BANKNIFTY2310544000CE,"BANKNIFTY",0,2023-01-05,44000,0.05,25,CE,NFO-OPT,NFO
            let split = allTextLines[index].split(',');
            let instru_token = split[0];
            let exchg_token = split[1];
            let tradingsymbol = split[2];
            let name = split[3].replaceAll('"', '');
            let last_price = split[4];
            let expiry = split[5];
            let strike = split[6];
            let lotSize = split[8];
            let type = split[9];
            let exch = split[11];
            let p = new _models__WEBPACK_IMPORTED_MODULE_1__.MasterInstrument();
            p.token = Number(instru_token);
            p.instru = name;
            p.expiry = new Date(expiry).toDateString();
            p.strike = Number(strike);
            p.optionType = type;
            p.lotSize = Number(lotSize);
            p.exchange = exch;
            p.tradingSymbol = tradingsymbol;
            _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.set(p.token, p);
            if (tradingsymbol === usdinrFut_symbol && exch === 'CDS') {
                _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.USDINR_FUT_TOKEN = p.token;
                console.log('USDINR_FUT_TOKEN', _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.USDINR_FUT_TOKEN);
            }
        }
        console.log('ZerodhaService getMastersContract mastersContract', _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract);
        this.connectWebsocket();
    }
    isSocketConnected() {
        return this.zerodhaWebsocketService.isSocketConnected();
    }
    connectWebsocket() {
        this.zerodhaWebsocketService.connect();
    }
    closeWebsocket() {
        this.zerodhaWebsocketService.closeSocket();
    }
    sendSubscriptions(instruments) {
        let items = [];
        instruments.forEach(instrument => {
            let instru = this.findStrikeInMasters(instrument);
            if (instru) {
                items.push(instru.token);
            }
            else {
                let instru = this.findFutureInMasters(instrument);
                if (instru) {
                    items.push(instru.token);
                }
            }
        });
        console.log('sendSubscriptions: ', items);
        this.zerodhaWebsocketService.subscribe(items);
        this.zerodhaWebsocketService.setMode(null, items);
    }
    findInMastersByToken(token) {
        return _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.get(token);
    }
    findStrikeInMasters(instrument) {
        let return_instru = null;
        _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.forEach(element => {
            // console.log(instru, strike, type, element.expiry, instrument.instru, instrument.strike, instrument.type, instrument.expiry);
            if (instrument.expiry === element.expiry &&
                instrument.instru === element.instru &&
                instrument.strike === element.strike &&
                instrument.type === element.optionType) {
                return_instru = element;
                return;
            }
        });
        return return_instru;
    }
    findFutureInMasters(instrument) {
        let return_instru = null;
        _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.mastersContract.forEach(element => {
            // console.log(instru, strike, type, element.expiry, instrument.instru, instrument.strike, instrument.type, instrument.expiry);
            if (instrument.tradingSymbol === element.tradingSymbol && instrument.exchange === element.exchange) {
                return_instru = element;
                return;
            }
        });
        return return_instru;
    }
    getFunds() {
        let access_token = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth;
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
                Authorization: access_token,
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = 'https://kite.zerodha.com/oms/user/margins';
        return this.http.get(url, httpOptions);
    }
    getPositions() {
        let access_token = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth;
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
                Authorization: access_token,
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = 'https://kite.zerodha.com/oms/portfolio/positions';
        return this.http.get(url, httpOptions);
    }
    getOrders() {
        /* return from(
          [JSON.parse(AppConstants.dummyResOrd)]
        ); */
        let access_token = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth;
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
                Authorization: access_token,
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        // states:
        /*
        CANCELLED
        CANCEL PENDING
        MODIFIED
        MODIFY PENDING
        MODIFY VALIDATION PENDING
        TRIGGER PENDING
        OPEN PENDING
        VALIDATION PENDING
        PUT ORDER REQ RECEIVED
         */
        let url = 'https://kite.zerodha.com/oms/orders';
        return this.http.get(url, httpOptions);
    }
    place_order(symbol, qty, access_token, limit_price = null, orderId = null, product_type = "NRML", tag = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.defaultTag, trigger_price = 0) {
        //BANKNIFTY2231034500CE
        //BANKNIFTY22MAR35000CE
        //USDINR2231177CE
        //USDINR22MAR78.25CE
        /*
        # Products
        PRODUCT_MIS = "MIS"
        PRODUCT_CNC = "CNC"
        PRODUCT_NRML = "NRML"
        PRODUCT_CO = "CO"
        PRODUCT_BO = "BO"
    
        # Order types
        ORDER_TYPE_MARKET = "MARKET"
        ORDER_TYPE_LIMIT = "LIMIT"
        ORDER_TYPE_SLM = "SL-M"
        ORDER_TYPE_SL = "SL"
    
        # Varities
        VARIETY_REGULAR = "regular"
        VARIETY_BO = "bo"
        VARIETY_CO = "co"
        VARIETY_AMO = "amo"
    
        # Transaction type
        TRANSACTION_TYPE_BUY = "BUY"
        TRANSACTION_TYPE_SELL = "SELL"
    
        # Validity
        VALIDITY_DAY = "DAY"
        VALIDITY_IOC = "IOC"
    
        # Exchanges
        EXCHANGE_NSE = "NSE"
        EXCHANGE_BSE = "BSE"
        EXCHANGE_NFO = "NFO"
        EXCHANGE_CDS = "CDS"
        EXCHANGE_BFO = "BFO"
        EXCHANGE_MCX = "MCX"
    
        # Margins segments
        MARGIN_EQUITY = "equity"
        MARGIN_COMMODITY = "commodity"
    
        # Status constants
        STATUS_COMPLETE = "COMPLETE"
        STATUS_REJECTED = "REJECTED"
        STATUS_CANCELLED = "CANCELLED"
    
        # GTT order type
        GTT_TYPE_OCO = "two-leg"
        GTT_TYPE_SINGLE = "single"
    
        # GTT order status
        GTT_STATUS_ACTIVE = "active"
        GTT_STATUS_TRIGGERED = "triggered"
        GTT_STATUS_DISABLED = "disabled"
        GTT_STATUS_EXPIRED = "expired"
        GTT_STATUS_CANCELLED = "cancelled"
        GTT_STATUS_REJECTED = "rejected"
        GTT_STATUS_DELETED = "deleted" */
        let type = "BUY";
        if (qty < 0) {
            type = "SELL";
            qty = Math.abs(qty);
        }
        let order_type = 'MARKET';
        let price = 0;
        if (limit_price) {
            order_type = 'LIMIT';
            price = limit_price;
        }
        if (trigger_price) {
            order_type = 'SL';
        }
        // access_token = 'enctoken FCvYj7w29KmLjExNRLGTkibQadSEe1hilUOWjGs9cMn18jXW6JZN1Afxgw2tCCU+0G4WiB9eIO6Hl887gU/ellNwiYEE/ASez3YDlCERAq7EgsQ7mfZmkQ==';
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
                Authorization: access_token,
                'Content-Type': 'application/x-www-form-urlencoded'
            }),
            responseType: 'json'
        };
        let exchange = "NFO";
        if (symbol.includes("SENSEX") || symbol.includes("BANKEX")) {
            exchange = "BFO";
        }
        let url = this.baseUrl + 'oms/orders/regular';
        if (orderId) {
            let b = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpParams()
                .set("variety", "regular")
                .set("exchange", exchange)
                .set("tradingsymbol", symbol) /* "BANKNIFTY2231034500CE" */
                .set("transaction_type", type)
                .set("order_type", "" + order_type)
                .set("quantity", qty) /* "25" */
                .set("price", "" + price)
                .set("product", product_type)
                .set("validity", "DAY")
                .set("disclosed_quantity", "0")
                .set("trigger_price", "" + trigger_price)
                .set("squareoff", "0")
                .set("stoploss", "0")
                .set("trailing_stoploss", "0")
                .set("user_id", _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.zerodhaUserId)
                .set("order_id", orderId)
                .set("parent_order_id", "");
            url += '/' + orderId;
            return this.http.put(url, b.toString(), httpOptions);
        }
        else {
            let b = new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpParams()
                .set("variety", "regular")
                .set("exchange", exchange)
                .set("tradingsymbol", symbol) /* "BANKNIFTY2231034500CE" */
                .set("transaction_type", type)
                .set("order_type", "" + order_type)
                .set("quantity", qty) /* "25" */
                .set("price", "" + price)
                .set("product", product_type)
                .set("validity", "DAY")
                .set("disclosed_quantity", "0")
                .set("trigger_price", "" + trigger_price)
                .set("squareoff", "0")
                .set("stoploss", "0")
                .set("trailing_stoploss", "0")
                .set("user_id", _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.zerodhaUserId)
                .set("tag", tag);
            // {"status":"success","data":{"order_id":"231023302678937"}}
            return this.http.post(url, b.toString(), httpOptions);
        }
    }
    cancel_order(order_id) {
        // https://kite.zerodha.com/oms/orders/regular/231024400007652?order_id=231024400007652&parent_order_id=&variety=regular
        let access_token = _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth;
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
                Authorization: access_token,
                'Content-Type': 'application/json'
            }),
            responseType: 'json'
        };
        let url = 'https://kite.zerodha.com/oms/orders/regular/' + order_id + '?order_id=' + order_id + '&parent_order_id=&variety=regular';
        return this.http.delete(url, httpOptions);
    }
    nudge_order(symbol, access_token) {
        /* let b = new HttpParams()
          .set("variety", "regular")
          .set("exchange", "NFO")
          .set("tradingsymbol", symbol) /* "BANKNIFTY2231034500CE" */
        /*.set("transaction_type", "BUY")
        .set("order_type", "MARKET")
        .set("product", "NRML")
        .set("quantity", 1000); */
        // access_token = 'enctoken FCvYj7w29KmLjExNRLGTkibQadSEe1hilUOWjGs9cMn18jXW6JZN1Afxgw2tCCU+0G4WiB9eIO6Hl887gU/ellNwiYEE/ASez3YDlCERAq7EgsQ7mfZmkQ==';
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
                Authorization: access_token,
            }),
            responseType: 'json'
        };
        let url = this.baseUrl + 'oms/nudge/orders';
        let body = [{ "exchange": "NFO", "tradingsymbol": symbol, "transaction_type": "BUY", "variety": "regular", "product": "NRML", "order_type": "MARKET", "quantity": 1000 }];
        return this.http.post(url, body /* b.toString() */, httpOptions);
    }
    historical(instru_token, interval, from, to, continuous, oi) {
        // interval can be minute day 3minute 5minute 10minute 15minute 30minute 60minute
        let httpOptions = {
            headers: new _angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpHeaders({
                Authorization: _application_constant__WEBPACK_IMPORTED_MODULE_0__.AppConstants.broker_auth
            }),
            responseType: 'json',
        };
        // got from kitconnectjs library on github
        let url = 'https://api.kite.trade/instruments/historical/' + instru_token + '/' + interval + '?from=' + from + '&to=' + to + '&continuous=' + continuous + '&oi=' + oi;
        this.http.get(url, httpOptions).subscribe((res) => {
            console.log('zerodha historical', res);
            /* {
              "status": "success",
              "data": {
                  "candles": [
                      [
                          "2023-01-25T09:15:00+0530",
                          60.45,
                          60.45,
                          48.25,
                          48.8,
                          137325
                      ], */
            let results = [];
            for (let i = 0; i < res.data.candles.length; i++) {
                let d = res.data.candles[i];
                let c = {
                    "date": new Date(d[0]),
                    "open": d[1],
                    "high": d[2],
                    "low": d[3],
                    "close": d[4],
                    "volume": d[5]
                };
                if (d[6]) {
                    c["oi"] = d[6];
                }
                results.push(c);
            }
            console.log('zerodha historical result:', results);
        }, error => {
            console.log('zerodha historical error', error);
        });
    }
}
ZerodhaService.ɵfac = function ZerodhaService_Factory(t) { return new (t || ZerodhaService)(_angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_angular_common_http__WEBPACK_IMPORTED_MODULE_4__.HttpClient), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_zerodha_websocket_service__WEBPACK_IMPORTED_MODULE_2__.ZerodhaWebsocketService), _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵinject"](_map_service__WEBPACK_IMPORTED_MODULE_3__.MapService)); };
ZerodhaService.ɵprov = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_5__["ɵɵdefineInjectable"]({ token: ZerodhaService, factory: ZerodhaService.ɵfac, providedIn: 'root' });


/***/ }),

/***/ 8805:
/*!******************************************************!*\
  !*** ./src/app/stock-chart/stock-chart.component.ts ***!
  \******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "StockChartComponent": () => (/* binding */ StockChartComponent)
/* harmony export */ });
/* harmony import */ var highcharts_highstock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! highcharts/highstock */ 5513);
/* harmony import */ var highcharts_highstock__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(highcharts_highstock__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var highcharts_modules_stock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! highcharts/modules/stock */ 675);
/* harmony import */ var highcharts_modules_stock__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(highcharts_modules_stock__WEBPACK_IMPORTED_MODULE_1__);
/* harmony import */ var highcharts_custom_events__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! highcharts-custom-events */ 246);
/* harmony import */ var highcharts_custom_events__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(highcharts_custom_events__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var highcharts_indicators_indicators__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! highcharts/indicators/indicators */ 8655);
/* harmony import */ var highcharts_indicators_indicators__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(highcharts_indicators_indicators__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var highcharts_indicators_atr__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! highcharts/indicators/atr */ 9431);
/* harmony import */ var highcharts_indicators_atr__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(highcharts_indicators_atr__WEBPACK_IMPORTED_MODULE_4__);
/* harmony import */ var highcharts_indicators_supertrend__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! highcharts/indicators/supertrend */ 5247);
/* harmony import */ var highcharts_indicators_supertrend__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(highcharts_indicators_supertrend__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _common_map_service__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../common/map.service */ 397);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _app_service__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../app.service */ 900);
/* harmony import */ var highcharts_angular__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! highcharts-angular */ 3094);



// import HC_exporting from 'highcharts/modules/exporting';

// import IndicatorZigzag from "highcharts/indicators/zigzag";







highcharts_modules_stock__WEBPACK_IMPORTED_MODULE_1___default()(highcharts_highstock__WEBPACK_IMPORTED_MODULE_0__);
highcharts_custom_events__WEBPACK_IMPORTED_MODULE_2___default()(highcharts_highstock__WEBPACK_IMPORTED_MODULE_0__);
// HC_exporting(Highcharts);
highcharts_indicators_indicators__WEBPACK_IMPORTED_MODULE_3___default()(highcharts_highstock__WEBPACK_IMPORTED_MODULE_0__);
// IndicatorZigzag(Highcharts);
highcharts_indicators_atr__WEBPACK_IMPORTED_MODULE_4___default()(highcharts_highstock__WEBPACK_IMPORTED_MODULE_0__);
highcharts_indicators_supertrend__WEBPACK_IMPORTED_MODULE_5___default()(highcharts_highstock__WEBPACK_IMPORTED_MODULE_0__);
class StockChartComponent {
    constructor(appService, mapService) {
        this.appService = appService;
        this.mapService = mapService;
        this.Highcharts = highcharts_highstock__WEBPACK_IMPORTED_MODULE_0__;
        this.updateFlag1 = false;
        this.updateFlag2 = false;
        this.loadOnlyCurrDateData = true;
        //data = [[1580221800000,78.15,79.6,78.05,79.42,162234000],[1580308200000,81.11,81.96,80.35,81.08,216229200],[1580394600000,80.14,81.02,79.69,80.97,126743200],[1580481000000,80.23,80.67,77.07,77.38,199588400],[1580740200000,76.07,78.37,75.56,77.17,173788400],[1580826600000,78.83,79.91,78.41,79.71,136616400],[1580913000000,80.88,81.19,79.74,80.36,118826800],[1580999400000,80.64,81.31,80.07,81.3,105425600],[1581085800000,80.59,80.85,79.5,80.01,117684000],[1581345000000,78.54,80.39,78.46,80.39,109348800],[1581431400000,80.9,80.97,79.68,79.9,94323200],[1581517800000,80.37,81.81,80.37,81.8,113730400],[1581604200000,81.05,81.56,80.84,81.22,94747600],[1581690600000,81.18,81.5,80.71,81.24,80113600],[1582036200000,78.84,79.94,78.65,79.75,152531200],[1582122600000,80,81.14,80,80.9,93984000],[1582209000000,80.66,81.16,79.55,80.07,100566000],[1582295400000,79.65,80.11,77.63,78.26,129554000],[1582554600000,74.32,76.04,72.31,74.54,222195200],[1582641000000,75.24,75.63,71.53,72.02,230673600],[1582727400000,71.63,74.47,71.63,73.16,198054800],[1582813800000,70.28,71.5,68.24,68.38,320605600],[1582900200000,64.32,69.6,64.09,68.34,426510000],[1583159400000,70.57,75.36,69.43,74.7,341397200],[1583245800000,75.92,76,71.45,72.33,319475600],[1583332200000,74.11,75.85,73.28,75.68,219178400],[1583418600000,73.88,74.89,72.85,73.23,187572800],[1583505000000,70.5,72.71,70.31,72.26,226176800],[1583760600000,65.94,69.52,65.75,66.54,286744800],[1583847000000,69.29,71.61,67.34,71.33,285290000],[1583933400000,69.35,70.31,67.96,68.86,255598800],[1584019800000,63.99,67.5,62,62.06,418474000],[1584106200000,66.22,69.98,63.24,69.49,370732000],[1584365400000,60.49,64.77,60,60.55,322423600],[1584451800000,61.88,64.4,59.6,63.22,324056000],[1584538200000,59.94,62.5,59.28,61.67,300233600],[1584624600000,61.85,63.21,60.65,61.19,271857200],[1584711000000,61.79,62.96,57,57.31,401693200],[1584970200000,57.02,57.13,53.15,56.09,336752800],[1585056600000,59.09,61.92,58.58,61.72,287531200],[1585143000000,62.69,64.56,61.08,61.38,303602000],[1585229400000,61.63,64.67,61.59,64.61,252087200],[1585315800000,63.19,63.97,61.76,61.94,204216800],[1585575000000,62.69,63.88,62.35,63.7,167976400],[1585661400000,63.9,65.62,63,63.57,197002000],[1585747800000,61.63,62.18,59.78,60.23,176218400],[1585834200000,60.08,61.29,59.22,61.23,165934000],[1585920600000,60.7,61.42,59.74,60.35,129880000],[1586179800000,62.72,65.78,62.35,65.62,201820400],[1586266200000,67.7,67.93,64.75,64.86,202887200],[1586352600000,65.68,66.84,65.31,66.52,168895200],[1586439000000,67.18,67.52,66.18,67,161834800],[1586784600000,67.08,68.43,66.46,68.31,131022800],[1586871000000,70,72.06,69.51,71.76,194994800],[1586957400000,70.6,71.58,70.16,71.11,131154400],[1587043800000,71.85,72.05,70.59,71.67,157125200],[1587130200000,71.17,71.74,69.21,70.7,215250000],[1587389400000,69.49,70.42,69.21,69.23,130015200],[1587475800000,69.07,69.31,66.36,67.09,180991600],[1587562200000,68.4,69.47,68.05,69.03,116862400],[1587648600000,68.97,70.44,68.72,68.76,124814400],[1587735000000,69.3,70.75,69.25,70.74,126161200],[1587994200000,70.45,71.14,69.99,70.79,117087600],[1588080600000,71.27,71.46,69.55,69.64,112004800],[1588167000000,71.18,72.42,70.97,71.93,137280800],[1588253400000,72.49,73.63,72.09,73.45,183064000],[1588339800000,71.56,74.75,71.46,72.27,240616800],[1588599000000,72.29,73.42,71.58,73.29,133568000],];
        /*
          data = [
            [1641361080000, 50.8, 52.2, 50.45, 52.2, 57475],
          [1641361140000, 51.8, 52.55, 51.2, 51.8, 39200],
          [1641361200000, 52.05, 53.8, 52, 53.6, 56325],
          [1641361260000, 53.5, 53.9, 52, 52.7, 33075],
          [1641361320000, 52.6, 52.6, 49.5, 49.5, 35825],
          [1641361380000, 49.95, 51.5, 49.5, 51.3, 27025],
          [1641361440000, 51.1, 53, 51.1, 52.8, 36700],
          [1641361500000, 52.5, 53.25, 51.4, 52.3, 38750],
          [1641361560000, 52.25, 53.4, 51.25, 53, 39675],
          [1641361620000, 53.1, 54.2, 50.85, 52.5, 50975],
          [1641361680000, 53, 53, 47.9, 49.15, 52825],
          [1641361740000, 49.2, 49.65, 47.6, 48.35, 45000],
          [1641361800000, 48.6, 49.65, 47.85, 49, 29050],
          [1641361860000, 49, 49.2, 46.75, 47.25, 35250],
          [1641361920000, 47.3, 47.6, 46.05, 46.7, 49900],
          [1641361980000, 46.95, 46.95, 40.05, 40.55, 137100],
          [1641362040000, 40.75, 40.75, 35.5, 36.75, 194700],
          [1641362100000, 36.8, 37.3, 36.25, 36.65, 84400],
          [1641362160000, 36.8, 37, 36.1, 36.55, 82325],
          [1641362220000, 36.4, 36.75, 33.15, 33.95, 124425],
          [1641362280000, 34.05, 35.3, 33.5, 35.3, 92375],
          [1641362340000, 34.85, 35.25, 33.4, 34.55, 92600],
          [1641362400000, 34.4, 35.85, 34.3, 35.15, 55575],
          [1641362460000, 35.4, 36.6, 35.2, 36, 43375],
          [1641362520000, 36, 37.3, 35.75, 37.3, 69350],
          [1641362580000, 37.3, 37.95, 36.6, 37.7, 67450],
          [1641362640000, 37.6, 37.8, 36.75, 37.45, 45375],
          [1641362700000, 37.6, 37.6, 35.8, 35.8, 51975],
          [1641362760000, 35.7, 35.7, 34.5, 35.1, 39550],
          [1641362820000, 35.3, 35.35, 34, 34.15, 32425],
          [1641362880000, 34.15, 35.05, 34, 34.95, 47475],
          [1641362940000, 35.25, 36.8, 35.1, 35.55, 40375],
          [1641363000000, 35.4, 35.55, 34.05, 34.45, 43425],
          [1641363060000, 34.5, 35.5, 34.25, 35.1, 55150],
          [1641363120000, 34.9, 35.1, 34.15, 34.55, 20500],
          [1641363180000, 34.7, 34.7, 31.7, 32.65, 63925],
          [1641363240000, 32.6, 32.95, 30.7, 32.85, 73725],
          [1641363300000, 32.8, 36.45, 32.8, 36.45, 70425],
          [1641363360000, 36.45, 37.35, 35.4, 36.3, 36450],
          [1641363420000, 36.3, 37.25, 35.55, 35.55, 42150],
          [1641363480000, 35.65, 35.65, 32.55, 35.3, 45325],
          [1641363540000, 35.4, 36, 34.45, 34.5, 39400],
          [1641363600000, 34.55, 34.85, 34.15, 34.45, 38950],
          [1641363660000, 34.55, 35.15, 33.95, 35.15, 35650],
          [1641363720000, 34.9, 36.15, 34.5, 35.6, 36675],
          [1641363780000, 35.9, 36.4, 35.5, 36.4, 22475],
          [1641363840000, 36.25, 36.5, 35.8, 36.15, 19925],
          [1641363900000, 36.2, 36.35, 35.25, 35.8, 22700],
          [1641363960000, 35.85, 35.85, 34.7, 34.85, 25225],
          [1641364020000, 34.65, 35.55, 34.5, 35.45, 17000],
          [1641364080000, 35.5, 36.65, 35.4, 35.7, 72450],
          [1641364140000, 35.8, 35.85, 34.4, 35.65, 30600],
          [1641364200000, 35.7, 35.8, 33.85, 34.7, 52650],
          [1641364260000, 34.7, 35.95, 34.7, 35.3, 21275],
          [1641364320000, 35.3, 35.4, 33.6, 34, 38775],
          [1641364380000, 34, 36.65, 33.65, 36, 38050],
          [1641364440000, 35.8, 37.9, 35.6, 37.6, 44050],
          [1641364500000, 37.3, 37.3, 32.7, 33.35, 53425],
          [1641364560000, 33.5, 33.85, 32.9, 33.8, 26450],
          [1641364620000, 34.1, 35.15, 33.75, 35.05, 17225],
          [1641364680000, 34.8, 34.95, 33.7, 34.05, 13325],
          [1641364740000, 33.9, 34.25, 32.8, 32.8, 18800],
          [1641364800000, 33.05, 34.15, 32.65, 33.7, 17400],
          [1641364860000, 33.4, 33.95, 33.15, 33.15, 11975],
          [1641364920000, 33, 33.15, 31.45, 32.05, 51000],
          [1641364980000, 31.8, 32.25, 31, 31.25, 72675],
          [1641365040000, 31.5, 32.35, 31.1, 31.7, 38075],
          [1641365100000, 31.9, 32.6, 31.55, 32.05, 28700],
          [1641365160000, 32.4, 32.45, 31.35, 31.5, 26100],
          [1641365220000, 31.45, 31.55, 30.3, 31.45, 72950],
          [1641365280000, 31.35, 32.3, 31.35, 31.85, 55675],
          [1641365340000, 31.85, 32.2, 31.35, 31.75, 34600],
          [1641365400000, 31.65, 31.8, 30.5, 30.6, 44075],
          [1641365460000, 30.65, 30.85, 29.7, 30.15, 74050],
          [1641365520000, 30.2, 30.7, 30.15, 30.6, 42100],
          [1641365580000, 30.55, 31.5, 30.5, 31.45, 31125],
          [1641365640000, 31.5, 32.8, 31.4, 32.4, 64725],
          [1641365700000, 32.35, 32.55, 31.4, 31.6, 36100],
          [1641365760000, 31.75, 32.45, 31, 32.45, 45675],
          [1641365820000, 32.2, 32.75, 31.6, 31.8, 38100],
          [1641365880000, 32, 32.4, 31.15, 32.4, 24850],
          [1641365940000, 32.45, 32.5, 31.1, 32.25, 39175],
          [1641366000000, 31.95, 32.25, 31.1, 31.15, 21700],
          [1641366060000, 31.25, 31.25, 27.7, 28.8, 87225],
          [1641366120000, 28.55, 29.55, 28.1, 29.1, 77575],
          [1641366180000, 29.15, 29.2, 27.3, 28.2, 112750],
          [1641366240000, 28.05, 28.8, 27.95, 28.4, 112050],
          [1641366300000, 28.6, 29.65, 28.15, 29.35, 93875],
          [1641366360000, 29.2, 30.8, 29.2, 29.6, 157500],
          [1641366420000, 29.5, 30.6, 29.5, 29.85, 99775],
          [1641366480000, 30.1, 30.2, 29.25, 29.85, 82825],
          [1641366540000, 29.95, 29.95, 29, 29.55, 62425],
          [1641366600000, 29.6, 30.2, 29.35, 30.05, 63000],
          [1641366660000, 29.6, 30, 29.4, 30, 51775],
          [1641366720000, 29.7, 30.2, 29.5, 29.75, 41225],
          [1641366780000, 29.5, 29.65, 28.95, 29, 35750],
          [1641366840000, 29.05, 29.05, 27.15, 27.7, 83325],
          [1641366900000, 27.45, 27.9, 27.1, 27.8, 39975],
          [1641366960000, 27.8, 28.7, 27.8, 28.4, 45600],
          [1641367020000, 28.6, 29.4, 28.4, 29.15, 38450]
          ]; */
        this.chartOptions1 = {
            rangeSelector: {
                selected: 1,
                buttons: [
                    {
                        type: 'day',
                        text: 'D',
                        count: 1,
                        events: {
                            click: function () {
                                //alert('Clicked button');
                            }
                        }
                    },
                    {
                        type: 'all',
                        text: 'All',
                        events: {
                            click: function () {
                                //alert('Clicked button');
                            }
                        }
                    }
                ]
            },
            title: {
                text: 'Call Option'
            },
            legend: {
                enabled: true
            },
            /* xAxis: {
              tickInterval: 5 * 60 * 1000 // 5 mins
            }, */
            plotOptions: {
                series: {
                    showInLegend: true,
                    dataGrouping: {
                        enabled: false
                    }
                    /* dataGrouping: {
                      forced: true,
                      //approximation: 'ohlc',
                      units: [
                        ['minute', [5]]
                      ]
                    } */
                }
            },
            series: [
                {
                    type: 'candlestick',
                    id: 'base',
                    name: 'Call Option',
                    data: [],
                    /* dataGrouping: {
                      forced: true,
                      //approximation: 'ohlc',
                      units: [
                        ['minute', [5]]
                      ]
                    } */
                },
                /* {
                  type: "zigzag",
                  showInLegend: true,
                  linkedTo: "base"
                }, */
                {
                    type: "supertrend",
                    // showInLegend: true,
                    linkedTo: "base",
                    params: {
                        period: 10,
                        multiplier: 2
                    },
                    marker: {
                        enabled: false
                    },
                    // lineWidth: 2,
                    //risingTrendColor: '#16C535',
                    //fallingTrendColor: '#F22303',
                    /* changeTrendLine: {
                      styles: {
                          lineWidth: 0.5,
                          lineColor: '#000',
                          dashStyle: 'Dash'
                      }
                    } */
                },
            ]
        };
        this.chartOptions2 = {
            rangeSelector: {
                selected: 1,
                buttons: [
                    {
                        type: 'day',
                        text: 'D',
                        count: 1,
                        events: {
                            click: function () {
                                //alert('Clicked button');
                            }
                        }
                    },
                    {
                        type: 'all',
                        text: 'All',
                        events: {
                            click: function () {
                                //alert('Clicked button');
                            }
                        }
                    }
                ]
            },
            title: {
                text: 'Put Option'
            },
            legend: {
                enabled: true
            },
            plotOptions: {
                series: {
                    showInLegend: true,
                    dataGrouping: {
                        enabled: false
                    }
                }
            },
            series: [
                {
                    type: 'candlestick',
                    id: 'base',
                    name: 'Put Option',
                    data: []
                },
                /* {
                  type: "zigzag",
                  showInLegend: true,
                  linkedTo: "base"
                }, */
                {
                    type: "supertrend",
                    // showInLegend: true,
                    linkedTo: "base",
                    params: {
                        period: 10,
                        multiplier: 2
                    },
                    marker: {
                        enabled: false
                    },
                    // lineWidth: 2,
                    //risingTrendColor: '#16C535',
                    //fallingTrendColor: '#F22303',
                    /* changeTrendLine: {
                      styles: {
                          lineWidth: 0.5,
                          lineColor: '#000',
                          dashStyle: 'Dash'
                      }
                    } */
                },
            ]
        };
        this.appService.stockChartEvent$.subscribe(res => {
            console.log('stockChartEvent subcribe: ', res);
            // this.rest_res = res;
            this.currDate = res.currdate;
            console.log('currDate:', this.currDate);
            this.loadChart(res.symbol);
        });
    }
    loadChart(symbol) {
        symbol = symbol.replace('NSE:', '');
        let display = symbol;
        let data = _common_map_service__WEBPACK_IMPORTED_MODULE_6__.MapService.stockChartData[symbol]; // if index
        // console.log('data1:', data);
        if (!data) {
            let instru = '';
            if (symbol.startsWith('NIFTY')) {
                instru = 'NIFTY';
                symbol = symbol.replace('NIFTY', '');
            }
            if (symbol.startsWith('BANKNIFTY')) {
                instru = 'BANKNIFTY';
                symbol = symbol.replace('BANKNIFTY', '');
            }
            if (symbol.startsWith('FINNIFTY')) {
                instru = 'FINNIFTY';
                symbol = symbol.replace('FINNIFTY', '');
            }
            if (symbol.startsWith('MIDCPNIFTY')) {
                instru = 'MIDCPNIFTY';
                symbol = symbol.replace('MIDCPNIFTY', '');
            }
            if (symbol.startsWith('SENSEX')) {
                instru = 'SENSEX';
                symbol = symbol.replace('SENSEX', '');
            }
            if (symbol.startsWith('BANKEX')) {
                instru = 'BANKEX';
                symbol = symbol.replace('BANKEX', '');
            }
            if (symbol.startsWith('USDINR')) {
                instru = 'USDINR';
                symbol = symbol.replace('USDINR', '');
            }
            let type = '';
            if (symbol.includes('CE')) {
                type = 'CE';
            }
            if (symbol.includes('PE')) {
                type = 'PE';
            }
            symbol = symbol.slice(0, -2); // remove CE PE at end
            let strike = symbol.substring(5);
            let expiry = symbol.substring(0, 5); // 20N08 20JUN 20911
            // return strike + type;
            display = strike + type;
            data = _common_map_service__WEBPACK_IMPORTED_MODULE_6__.MapService.stockChartData[instru + 'WK' + strike + type];
            // console.log('data2:', instru + 'WK' + strike + type, data);
            if (!data) {
                data = _common_map_service__WEBPACK_IMPORTED_MODULE_6__.MapService.stockChartData[instru + strike + type];
                // console.log('data3:', instru + strike + type, data);
            }
        }
        console.log('stockdata:', data);
        if (data) {
            this.processData(data, display);
            // this.updateChart(data, display);
        }
    }
    processData(data, display) {
        let trimmedData = [];
        let startInd = -1;
        if (this.loadOnlyCurrDateData) {
            for (let i = 0; i < data.length; i++) {
                let arr = data[i];
                let timestamp = arr[0];
                let tsDate = new Date(timestamp);
                if (this.currDate && tsDate.getDate() === this.currDate.getDate() && tsDate.getMonth() === this.currDate.getMonth() && tsDate.getFullYear() === this.currDate.getFullYear()) {
                    trimmedData.push(arr);
                    if (startInd === -1) {
                        startInd = i;
                    }
                }
            }
        }
        let extraStart = startInd - 120;
        if (extraStart < 0) {
            extraStart = 0;
        }
        //console.log('extra:', extraStart, startInd);
        let extraData = data.slice(extraStart, startInd);
        //console.log('extra data:', extraData);
        trimmedData = [...extraData, ...trimmedData];
        console.log('trimmedData:', trimmedData);
        /* for (let j = 0; j < trimmedData.length; j++) {
          console.log(new Date(trimmedData[j][0]));
        } */
        let processed_data = [];
        let t = null;
        let o = null;
        let h = null;
        let l = null;
        let c = null;
        let v = 0;
        for (let i = 0; i < trimmedData.length; i++) {
            let arr = trimmedData[i];
            let timestamp = arr[0];
            if (new Date(timestamp).getMinutes() % 5 === 0) {
                if (t) { // to handle case where this minute is first in data series
                    processed_data.push([t, o, h, l, c, v]);
                }
                t = arr[0];
                o = arr[1];
                h = arr[2];
                l = arr[3];
                c = null;
                v = 0;
            }
            else {
                if (o === null) {
                    o = arr[1];
                }
                if (h === null || arr[2] > h) {
                    h = arr[2];
                }
                if (l === null || arr[3] < l) {
                    l = arr[3];
                }
                if ((new Date(timestamp).getMinutes() + 1) % 5 === 0) {
                    c = arr[4];
                }
                if (i === trimmedData.length - 1) { // to handle case where this is last minute in data series
                    c = arr[4];
                    processed_data.push([t, o, h, l, c, v]);
                }
                v += arr[5];
            }
        }
        console.log('processed_data:', processed_data);
        this.updateChart(processed_data, display);
    }
    ngOnInit() {
        console.log('stock-chart loading', window);
        // this.processData(this.data, 'aniket');
    }
    updateChart(data, symbol) {
        if (symbol.includes('CE')) {
            this.chartOptions1.title = {
                text: symbol
            };
            this.chartOptions1.series[0] = {
                type: 'candlestick',
                id: 'base',
                name: symbol,
                /* dataGrouping: {
                  approximation: 'ohlc'
                }, */
                data: data,
                /* dataGrouping: {
                  forced: true,
                  //approximation: 'ohlc',
                  units: [
                    ['minute', [5]]
                  ]
                } */
            };
            this.updateFlag1 = true;
        }
        else if (symbol.includes('PE')) {
            this.chartOptions2.title = {
                text: symbol
            };
            this.chartOptions2.series[0] = {
                type: 'candlestick',
                id: 'base',
                name: symbol,
                /* dataGrouping: {
                  approximation: 'ohlc'
                }, */
                data: data,
                /* dataGrouping: {
                  forced: true,
                  //approximation: 'ohlc',
                  units: [
                    ['minute', [5]]
                  ]
                } */
            };
            this.updateFlag2 = true;
        }
    }
}
StockChartComponent.ɵfac = function StockChartComponent_Factory(t) { return new (t || StockChartComponent)(_angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_app_service__WEBPACK_IMPORTED_MODULE_7__.AppService), _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdirectiveInject"](_common_map_service__WEBPACK_IMPORTED_MODULE_6__.MapService)); };
StockChartComponent.ɵcmp = /*@__PURE__*/ _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵdefineComponent"]({ type: StockChartComponent, selectors: [["app-stock-chart"]], decls: 3, vars: 8, consts: [[1, "stockChartsDiv"], [1, "stockChart1", 3, "Highcharts", "constructorType", "options", "update", "updateChange"], [1, "stockChart2", 3, "Highcharts", "constructorType", "options", "update", "updateChange"]], template: function StockChartComponent_Template(rf, ctx) { if (rf & 1) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](0, "div", 0);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](1, "highcharts-chart", 1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("updateChange", function StockChartComponent_Template_highcharts_chart_updateChange_1_listener($event) { return ctx.updateFlag1 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementStart"](2, "highcharts-chart", 2);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵlistener"]("updateChange", function StockChartComponent_Template_highcharts_chart_updateChange_2_listener($event) { return ctx.updateFlag2 = $event; });
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵelementEnd"]();
    } if (rf & 2) {
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("Highcharts", ctx.Highcharts)("constructorType", "stockChart")("options", ctx.chartOptions1)("update", ctx.updateFlag1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵadvance"](1);
        _angular_core__WEBPACK_IMPORTED_MODULE_8__["ɵɵproperty"]("Highcharts", ctx.Highcharts)("constructorType", "stockChart")("options", ctx.chartOptions2)("update", ctx.updateFlag2);
    } }, directives: [highcharts_angular__WEBPACK_IMPORTED_MODULE_9__.HighchartsChartComponent], styles: [".stockChartsDiv[_ngcontent-%COMP%] {\n  display: flex;\n  height: 800px;\n}\n\n.stockChart1[_ngcontent-%COMP%] {\n  width: 50%;\n}\n\n.stockChart2[_ngcontent-%COMP%] {\n  width: 50%;\n}\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0b2NrLWNoYXJ0LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7R0FzQkc7O0FBRUg7RUFDRSxhQUFhO0VBQ2IsYUFBYTtBQUNmOztBQUVBO0VBQ0UsVUFBVTtBQUNaOztBQUVBO0VBQ0UsVUFBVTtBQUNaIiwiZmlsZSI6InN0b2NrLWNoYXJ0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiBhcnRpY2xlIHtcbiAgZGlzcGxheTogZmxleDtcbn1cblxuYnV0dG9uIHtcbiAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbn1cblxuaDIge1xuICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgZm9udC1zaXplOiAxLjI1cmVtO1xuICBtYXJnaW46IDAgMCAxLjVyZW0gMDtcbn1cblxuaGlnaGNoYXJ0cy1jaGFydCB7XG4gIG1pbi1oZWlnaHQ6IDM1MHB4OyBmbGV4LWdyb3c6IDM7XG59XG5cbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICB3aWR0aDogNDAlO1xufSAqL1xuXG4uc3RvY2tDaGFydHNEaXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBoZWlnaHQ6IDgwMHB4O1xufVxuXG4uc3RvY2tDaGFydDEge1xuICB3aWR0aDogNTAlO1xufVxuXG4uc3RvY2tDaGFydDIge1xuICB3aWR0aDogNTAlO1xufSJdfQ== */"] });


/***/ }),

/***/ 2340:
/*!*****************************************!*\
  !*** ./src/environments/environment.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "environment": () => (/* binding */ environment)
/* harmony export */ });
// This file can be replaced during build by using the `fileReplacements` array.
// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.
// The list of file replacements can be found in `angular.json`.
const environment = {
    production: false
};
/*
 * For easier debugging in development mode, you can import the following file
 * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.
 *
 * This import should be commented out in production mode because it will have a negative impact
 * on performance if an error is thrown.
 */
// import 'zone.js/plugins/zone-error';  // Included with Angular CLI.


/***/ }),

/***/ 4431:
/*!*********************!*\
  !*** ./src/main.ts ***!
  \*********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @angular/platform-browser */ 318);
/* harmony import */ var _angular_core__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @angular/core */ 3184);
/* harmony import */ var _app_app_module__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./app/app.module */ 6747);
/* harmony import */ var _environments_environment__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./environments/environment */ 2340);




if (_environments_environment__WEBPACK_IMPORTED_MODULE_1__.environment.production) {
    (0,_angular_core__WEBPACK_IMPORTED_MODULE_2__.enableProdMode)();
}
_angular_platform_browser__WEBPACK_IMPORTED_MODULE_3__.platformBrowser().bootstrapModule(_app_app_module__WEBPACK_IMPORTED_MODULE_0__.AppModule)
    .catch(err => console.error(err));


/***/ }),

/***/ 6700:
/*!***************************************************!*\
  !*** ./node_modules/moment/locale/ sync ^\.\/.*$ ***!
  \***************************************************/
/***/ ((module, __unused_webpack_exports, __webpack_require__) => {

var map = {
	"./af": 8685,
	"./af.js": 8685,
	"./ar": 254,
	"./ar-dz": 4312,
	"./ar-dz.js": 4312,
	"./ar-kw": 2614,
	"./ar-kw.js": 2614,
	"./ar-ly": 8630,
	"./ar-ly.js": 8630,
	"./ar-ma": 8674,
	"./ar-ma.js": 8674,
	"./ar-sa": 9032,
	"./ar-sa.js": 9032,
	"./ar-tn": 4730,
	"./ar-tn.js": 4730,
	"./ar.js": 254,
	"./az": 3052,
	"./az.js": 3052,
	"./be": 150,
	"./be.js": 150,
	"./bg": 3069,
	"./bg.js": 3069,
	"./bm": 3466,
	"./bm.js": 3466,
	"./bn": 8516,
	"./bn-bd": 557,
	"./bn-bd.js": 557,
	"./bn.js": 8516,
	"./bo": 6273,
	"./bo.js": 6273,
	"./br": 9588,
	"./br.js": 9588,
	"./bs": 9815,
	"./bs.js": 9815,
	"./ca": 3331,
	"./ca.js": 3331,
	"./cs": 1320,
	"./cs.js": 1320,
	"./cv": 2219,
	"./cv.js": 2219,
	"./cy": 8266,
	"./cy.js": 8266,
	"./da": 6427,
	"./da.js": 6427,
	"./de": 7435,
	"./de-at": 2871,
	"./de-at.js": 2871,
	"./de-ch": 2994,
	"./de-ch.js": 2994,
	"./de.js": 7435,
	"./dv": 2357,
	"./dv.js": 2357,
	"./el": 5649,
	"./el.js": 5649,
	"./en-au": 9961,
	"./en-au.js": 9961,
	"./en-ca": 9878,
	"./en-ca.js": 9878,
	"./en-gb": 3924,
	"./en-gb.js": 3924,
	"./en-ie": 864,
	"./en-ie.js": 864,
	"./en-il": 1579,
	"./en-il.js": 1579,
	"./en-in": 940,
	"./en-in.js": 940,
	"./en-nz": 6181,
	"./en-nz.js": 6181,
	"./en-sg": 4301,
	"./en-sg.js": 4301,
	"./eo": 5291,
	"./eo.js": 5291,
	"./es": 4529,
	"./es-do": 3764,
	"./es-do.js": 3764,
	"./es-mx": 2584,
	"./es-mx.js": 2584,
	"./es-us": 3425,
	"./es-us.js": 3425,
	"./es.js": 4529,
	"./et": 5203,
	"./et.js": 5203,
	"./eu": 678,
	"./eu.js": 678,
	"./fa": 3483,
	"./fa.js": 3483,
	"./fi": 6262,
	"./fi.js": 6262,
	"./fil": 2521,
	"./fil.js": 2521,
	"./fo": 4555,
	"./fo.js": 4555,
	"./fr": 3131,
	"./fr-ca": 8239,
	"./fr-ca.js": 8239,
	"./fr-ch": 1702,
	"./fr-ch.js": 1702,
	"./fr.js": 3131,
	"./fy": 267,
	"./fy.js": 267,
	"./ga": 3821,
	"./ga.js": 3821,
	"./gd": 1753,
	"./gd.js": 1753,
	"./gl": 4074,
	"./gl.js": 4074,
	"./gom-deva": 2762,
	"./gom-deva.js": 2762,
	"./gom-latn": 5969,
	"./gom-latn.js": 5969,
	"./gu": 2809,
	"./gu.js": 2809,
	"./he": 5402,
	"./he.js": 5402,
	"./hi": 315,
	"./hi.js": 315,
	"./hr": 410,
	"./hr.js": 410,
	"./hu": 8288,
	"./hu.js": 8288,
	"./hy-am": 7928,
	"./hy-am.js": 7928,
	"./id": 1334,
	"./id.js": 1334,
	"./is": 6959,
	"./is.js": 6959,
	"./it": 4864,
	"./it-ch": 1124,
	"./it-ch.js": 1124,
	"./it.js": 4864,
	"./ja": 6141,
	"./ja.js": 6141,
	"./jv": 9187,
	"./jv.js": 9187,
	"./ka": 2136,
	"./ka.js": 2136,
	"./kk": 4332,
	"./kk.js": 4332,
	"./km": 8607,
	"./km.js": 8607,
	"./kn": 4305,
	"./kn.js": 4305,
	"./ko": 234,
	"./ko.js": 234,
	"./ku": 6003,
	"./ku.js": 6003,
	"./ky": 5061,
	"./ky.js": 5061,
	"./lb": 2786,
	"./lb.js": 2786,
	"./lo": 6183,
	"./lo.js": 6183,
	"./lt": 29,
	"./lt.js": 29,
	"./lv": 4169,
	"./lv.js": 4169,
	"./me": 8577,
	"./me.js": 8577,
	"./mi": 8177,
	"./mi.js": 8177,
	"./mk": 337,
	"./mk.js": 337,
	"./ml": 5260,
	"./ml.js": 5260,
	"./mn": 2325,
	"./mn.js": 2325,
	"./mr": 4695,
	"./mr.js": 4695,
	"./ms": 5334,
	"./ms-my": 7151,
	"./ms-my.js": 7151,
	"./ms.js": 5334,
	"./mt": 3570,
	"./mt.js": 3570,
	"./my": 7963,
	"./my.js": 7963,
	"./nb": 8028,
	"./nb.js": 8028,
	"./ne": 6638,
	"./ne.js": 6638,
	"./nl": 302,
	"./nl-be": 6782,
	"./nl-be.js": 6782,
	"./nl.js": 302,
	"./nn": 3501,
	"./nn.js": 3501,
	"./oc-lnc": 563,
	"./oc-lnc.js": 563,
	"./pa-in": 869,
	"./pa-in.js": 869,
	"./pl": 5302,
	"./pl.js": 5302,
	"./pt": 9687,
	"./pt-br": 4884,
	"./pt-br.js": 4884,
	"./pt.js": 9687,
	"./ro": 9107,
	"./ro.js": 9107,
	"./ru": 3627,
	"./ru.js": 3627,
	"./sd": 355,
	"./sd.js": 355,
	"./se": 3427,
	"./se.js": 3427,
	"./si": 1848,
	"./si.js": 1848,
	"./sk": 4590,
	"./sk.js": 4590,
	"./sl": 184,
	"./sl.js": 184,
	"./sq": 6361,
	"./sq.js": 6361,
	"./sr": 8965,
	"./sr-cyrl": 1287,
	"./sr-cyrl.js": 1287,
	"./sr.js": 8965,
	"./ss": 5456,
	"./ss.js": 5456,
	"./sv": 451,
	"./sv.js": 451,
	"./sw": 7558,
	"./sw.js": 7558,
	"./ta": 2702,
	"./ta.js": 2702,
	"./te": 3693,
	"./te.js": 3693,
	"./tet": 1243,
	"./tet.js": 1243,
	"./tg": 2500,
	"./tg.js": 2500,
	"./th": 5768,
	"./th.js": 5768,
	"./tk": 7761,
	"./tk.js": 7761,
	"./tl-ph": 5780,
	"./tl-ph.js": 5780,
	"./tlh": 9590,
	"./tlh.js": 9590,
	"./tr": 3807,
	"./tr.js": 3807,
	"./tzl": 3857,
	"./tzl.js": 3857,
	"./tzm": 654,
	"./tzm-latn": 8806,
	"./tzm-latn.js": 8806,
	"./tzm.js": 654,
	"./ug-cn": 845,
	"./ug-cn.js": 845,
	"./uk": 9232,
	"./uk.js": 9232,
	"./ur": 7052,
	"./ur.js": 7052,
	"./uz": 7967,
	"./uz-latn": 2233,
	"./uz-latn.js": 2233,
	"./uz.js": 7967,
	"./vi": 8615,
	"./vi.js": 8615,
	"./x-pseudo": 2320,
	"./x-pseudo.js": 2320,
	"./yo": 1313,
	"./yo.js": 1313,
	"./zh-cn": 4490,
	"./zh-cn.js": 4490,
	"./zh-hk": 5910,
	"./zh-hk.js": 5910,
	"./zh-mo": 8262,
	"./zh-mo.js": 8262,
	"./zh-tw": 4223,
	"./zh-tw.js": 4223
};


function webpackContext(req) {
	var id = webpackContextResolve(req);
	return __webpack_require__(id);
}
function webpackContextResolve(req) {
	if(!__webpack_require__.o(map, req)) {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	}
	return map[req];
}
webpackContext.keys = function webpackContextKeys() {
	return Object.keys(map);
};
webpackContext.resolve = webpackContextResolve;
module.exports = webpackContext;
webpackContext.id = 6700;

/***/ })

},
/******/ __webpack_require__ => { // webpackRuntimeModules
/******/ var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
/******/ __webpack_require__.O(0, ["vendor"], () => (__webpack_exec__(4431)));
/******/ var __webpack_exports__ = __webpack_require__.O();
/******/ }
]);
//# sourceMappingURL=main.js.map